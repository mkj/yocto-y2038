DEBUG: Executing python function autotools_aclocals
DEBUG: SITE files ['endian-little', 'bit-32', 'arm-common', 'arm-32', 'common-linux', 'common-glibc', 'arm-linux', 'arm-linux-gnueabi', 'common']
DEBUG: Python function autotools_aclocals finished
DEBUG: Executing shell function do_compile
NOTE: make -j 1 STRIP=
gawk -f ./daemon-parm.awk ./daemon-parm.txt
gawk -f ./mkproto.awk ./*.c ./lib/compat.c daemon-parm.h
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c flist.c -o flist.o
In file included from rsync.h:1118,
                 from flist.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from flist.c:24:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
flist.c: In function 'readlink_stat':
flist.c:223:59: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  223 |                                 llen - SYMLINK_PREFIX_LEN + 1);
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
flist.c: In function 'flist_expand':
flist.c:309:74: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  309 |         new_ptr = realloc_array(flist->files, struct file_struct *, flist->malloced);
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
flist.c:314:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  314 |                     big_num(sizeof flist->files[0] * flist->malloced),
      |                                                    ^
flist.c: In function 'change_pathname':
flist.c:351:42: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  351 |                                 dirlen = strlen(dir);
      |                                          ^~~~~~
flist.c: In function 'send_file_entry':
flist.c:535:14: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  535 |         l2 = strlen(fname+l1);
      |              ^~~~~~
flist.c:554:43: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  554 |                         write_shortint(f, xflags);
      |                                           ^~~~~~
flist.c:556:39: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  556 |                         write_byte(f, xflags);
      |                                       ^~~~~~
flist.c:560:31: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  560 |                 write_byte(f, xflags);
      |                               ^~~~~~
flist.c:563:31: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  563 |                 write_byte(f, l1);
      |                               ^~
flist.c:567:31: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  567 |                 write_byte(f, l2);
      |                               ^~
flist.c:568:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  568 |         write_buf(f, fname + l1, l2);
      |                                  ^~
flist.c:583:38: warning: conversion from 'time_t' {aka 'long long int'} to 'int32_t' {aka 'int'} may change value [-Wconversion]
  583 |                         write_int(f, modtime);
      |                                      ^~~~~~~
rsync.h:862:38: warning: conversion to 'int32_t' {aka 'int'} from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  862 | #define F_MOD_NSEC(f) OPT_EXTRA(f, 0)->unum
      |                                      ^
flist.c:586:33: note: in expansion of macro 'F_MOD_NSEC'
  586 |                 write_varint(f, F_MOD_NSEC(file));
      |                                 ^~~~~~~~~~
flist.c:597:38: warning: conversion to 'int32_t' {aka 'int'} from 'uid_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  597 |                         write_int(f, uid);
      |                                      ^~~
flist.c:599:41: warning: conversion to 'int32_t' {aka 'int'} from 'uid_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  599 |                         write_varint(f, uid);
      |                                         ^~~
flist.c:601:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  601 |                                 int len = strlen(user_name);
      |                                           ^~~~~~
flist.c:602:47: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  602 |                                 write_byte(f, len);
      |                                               ^~~
flist.c:603:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  603 |                                 write_buf(f, user_name, len);
      |                                                         ^~~
flist.c:609:38: warning: conversion to 'int32_t' {aka 'int'} from 'gid_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  609 |                         write_int(f, gid);
      |                                      ^~~
flist.c:611:41: warning: conversion to 'int32_t' {aka 'int'} from 'gid_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  611 |                         write_varint(f, gid);
      |                                         ^~~
flist.c:613:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  613 |                                 int len = strlen(group_name);
      |                                           ^~~~~~
flist.c:614:47: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  614 |                                 write_byte(f, len);
      |                                               ^~~
flist.c:615:58: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  615 |                                 write_buf(f, group_name, len);
      |                                                          ^~~
flist.c:626:51: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  626 |                                 write_varint30(f, major(rdev));
      |                                                   ^~~~~
flist.c:628:49: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  628 |                                 write_varint(f, minor(rdev));
      |                                                 ^~~~~
flist.c:630:47: warning: conversion from 'unsigned int' to 'unsigned char' may change value [-Wconversion]
  630 |                                 write_byte(f, minor(rdev));
      |                                               ^~~~~
flist.c:632:46: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  632 |                                 write_int(f, minor(rdev));
      |                                              ^~~~~
flist.c:639:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  639 |                 write_buf(f, symlink_name, symlink_len);
      |                                            ^~~~~~~~~~~
flist.c:668:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  668 |                 write_buf(f, sum, flist_csum_len);
      |                                   ^~~~~~~~~~~~~~
flist.c: In function 'recv_file_entry':
flist.c:702:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  702 |         int extra_len = file_extra_cnt * EXTRA_LEN;
      |                                        ^
flist.c:702:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  702 |         int extra_len = file_extra_cnt * EXTRA_LEN;
      |                         ^~~~~~~~~~~~~~
flist.c:718:22: warning: conversion to 'unsigned int' from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  718 |                 l2 = read_varint30(f);
      |                      ^~~~~~~~~~~~~
flist.c:734:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  734 |         basename_len = strlcpy(lastname, thisname, MAXPATHLEN);
      |                        ^~~~~~~
flist.c:765:69: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  765 |                 if (len != lastdir_len || memcmp(thisname, lastdir, len) != 0) {
      |                                                                     ^~~
flist.c:766:55: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  766 |                         lastdir = new_array(char, len + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
flist.c:767:51: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  767 |                         memcpy(lastdir, thisname, len);
      |                                                   ^~~
flist.c:774:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  774 |         basename_len = strlen(basename) + 1; /* count the '\0' */
      |                        ^~~~~~
flist.c:813:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  813 |                                 extra_len += DEV_EXTRA_CNT * EXTRA_LEN;
      |                                           ^~
rsync.h:836:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  836 | #define DEV_EXTRA_CNT 2
      |                       ^
flist.c:813:46: note: in expansion of macro 'DEV_EXTRA_CNT'
  813 |                                 extra_len += DEV_EXTRA_CNT * EXTRA_LEN;
      |                                              ^~~~~~~~~~~~~
flist.c:816:48: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  816 |                                 linkname_len = strlen(F_SYMLINK(first)) + 1;
      |                                                ^~~~~~
flist.c:843:32: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  843 |                 modtime_nsec = read_varint(f);
      |                                ^~~~~~~~~~~
flist.c:876:35: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  876 |                 mode = tweak_mode(mode, chmod_modes);
      |                                   ^~~~
flist.c:876:24: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  876 |                 mode = tweak_mode(mode, chmod_modes);
      |                        ^~~~~~~~~~
flist.c:910:46: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  910 |                                 rdev_major = read_varint30(f);
      |                                              ^~~~~~~~~~~~~
flist.c:912:46: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  912 |                                 rdev_minor = read_varint(f);
      |                                              ^~~~~~~~~~~
flist.c:916:46: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  916 |                                 rdev_minor = read_int(f);
      |                                              ^~~~~~~~
flist.c:920:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  920 |                         extra_len += DEV_EXTRA_CNT * EXTRA_LEN;
      |                                   ^~
rsync.h:836:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  836 | #define DEV_EXTRA_CNT 2
      |                       ^
flist.c:920:38: note: in expansion of macro 'DEV_EXTRA_CNT'
  920 |                         extra_len += DEV_EXTRA_CNT * EXTRA_LEN;
      |                                      ^~~~~~~~~~~~~
flist.c:963:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  963 |                         extra_len += (inc_recurse+1) * EXTRA_LEN;
      |                                                      ^
flist.c:963:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  963 |                         extra_len += (inc_recurse+1) * EXTRA_LEN;
      |                                   ^~
flist.c:963:38: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  963 |                         extra_len += (inc_recurse+1) * EXTRA_LEN;
      |                                      ^
flist.c:974:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  974 |                 extra_len += SUM_EXTRA_CNT * EXTRA_LEN;
      |                           ^~
rsync.h:839:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  839 | #define SUM_EXTRA_CNT ((MAX_DIGEST_LEN + EXTRA_LEN - 1) / EXTRA_LEN)
      |                       ^
flist.c:974:30: note: in expansion of macro 'SUM_EXTRA_CNT'
  974 |                 extra_len += SUM_EXTRA_CNT * EXTRA_LEN;
      |                              ^~~~~~~~~~~~~
flist.c:978:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  978 |                 extra_len += EXTRA_LEN;
      |                           ^~
rsync.h:835:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  835 | #define EXTRA_LEN (sizeof (union file_extras))
      |                   ^
flist.c:978:30: note: in expansion of macro 'EXTRA_LEN'
  978 |                 extra_len += EXTRA_LEN;
      |                              ^~~~~~~~~
flist.c:982:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  982 |                 extra_len += EXTRA_LEN;
      |                           ^~
rsync.h:835:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  835 | #define EXTRA_LEN (sizeof (union file_extras))
      |                   ^
flist.c:982:30: note: in expansion of macro 'EXTRA_LEN'
  982 |                 extra_len += EXTRA_LEN;
      |                              ^~~~~~~~~
flist.c:1005:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1005 |                         extra_len += DEV_EXTRA_CNT * EXTRA_LEN;
      |                                   ^~
rsync.h:836:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  836 | #define DEV_EXTRA_CNT 2
      |                       ^
flist.c:1005:38: note: in expansion of macro 'DEV_EXTRA_CNT'
 1005 |                         extra_len += DEV_EXTRA_CNT * EXTRA_LEN;
      |                                      ^~~~~~~~~~~~~
flist.c:1012:23: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1012 |         if (extra_len & (EXTRA_ROUNDING * EXTRA_LEN))
      |                       ^
flist.c:1013:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1013 |                 extra_len = (extra_len | (EXTRA_ROUNDING * EXTRA_LEN)) + EXTRA_LEN;
      |                                        ^
flist.c:1013:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1013 |                 extra_len = (extra_len | (EXTRA_ROUNDING * EXTRA_LEN)) + EXTRA_LEN;
      |                             ^
flist.c:1016:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1016 |         alloc_len = FILE_STRUCT_LEN + extra_len + basename_len
      |                                     ^
flist.c:1016:49: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1016 |         alloc_len = FILE_STRUCT_LEN + extra_len + basename_len
      |                                                 ^
flist.c:1017:19: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1017 |                   + linkname_len;
      |                   ^
rsync.h:831:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  831 | #define FILE_STRUCT_LEN (sizeof (struct file_struct))
      |                         ^
flist.c:1016:21: note: in expansion of macro 'FILE_STRUCT_LEN'
 1016 |         alloc_len = FILE_STRUCT_LEN + extra_len + basename_len
      |                     ^~~~~~~~~~~~~~~
flist.c:1018:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1018 |         bp = pool_alloc(pool, alloc_len, "recv_file_entry");
      |                               ^~~~~~~~~
flist.c:1020:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1020 |         memset(bp, 0, extra_len + FILE_STRUCT_LEN);
      |                                 ^
flist.c:1025:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1025 |         memcpy(bp, basename, basename_len);
      |                              ^~~~~~~~~~~~
flist.c:1057:22: warning: conversion from 'mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1057 |         file->mode = mode;
      |                      ^~~~
flist.c:1118:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1118 |                         memcpy(bp, F_SYMLINK(first), linkname_len);
      |                                                      ^~~~~~~~~~~~
flist.c:1121:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1121 |                                 strlcpy(bp, SYMLINK_PREFIX, linkname_len);
      |                                                             ^~~~~~~~~~~~
flist.c:1151:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1151 |                                 read_sbuf(f, bp, linkname_len - 1);
      |                                                  ~~~~~~~~~~~~~^~~
rsync.h:903:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  903 |                                     + SUM_EXTRA_CNT - 1))
      |                                     ^
rsync.h:842:76: note: in definition of macro 'OPT_EXTRA'
  842 | #define OPT_EXTRA(f,bump) ((union file_extras*)(f) - file_extra_cnt - 1 - (bump))
      |                                                                            ^~~~
flist.c:1191:30: note: in expansion of macro 'F_SUM'
 1191 |                         bp = F_SUM(file);
      |                              ^~~~~
rsync.h:903:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  903 |                                     + SUM_EXTRA_CNT - 1))
      |                                     ^
rsync.h:842:76: note: in definition of macro 'OPT_EXTRA'
  842 | #define OPT_EXTRA(f,bump) ((union file_extras*)(f) - file_extra_cnt - 1 - (bump))
      |                                                                            ^~~~
flist.c:1198:36: note: in expansion of macro 'F_SUM'
 1198 |                         memcpy(bp, F_SUM(first), flist_csum_len);
      |                                    ^~~~~
flist.c:1198:50: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1198 |                         memcpy(bp, F_SUM(first), flist_csum_len);
      |                                                  ^~~~~~~~~~~~~~
flist.c:1200:41: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1200 |                         read_buf(f, bp, flist_csum_len);
      |                                         ^~~~~~~~~~~~~~
flist.c: In function 'make_file':
flist.c:1237:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1237 |         int extra_len = file_extra_cnt * EXTRA_LEN;
      |                                        ^
flist.c:1237:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1237 |         int extra_len = file_extra_cnt * EXTRA_LEN;
      |                         ^~~~~~~~~~~~~~
flist.c:1351:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1351 |                         extra_len += DIRNODE_EXTRA_CNT * EXTRA_LEN;
      |                                   ^~
rsync.h:837:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  837 | #define DIRNODE_EXTRA_CNT 3
      |                           ^
flist.c:1351:38: note: in expansion of macro 'DIRNODE_EXTRA_CNT'
 1351 |                         extra_len += DIRNODE_EXTRA_CNT * EXTRA_LEN;
      |                                      ^~~~~~~~~~~~~~~~~
flist.c:1353:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1353 |                                 extra_len += PTR_EXTRA_CNT * EXTRA_LEN;
      |                                           ^~
rsync.h:774:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  774 | # define PTR_EXTRA_CNT 1
      |                        ^
flist.c:1353:46: note: in expansion of macro 'PTR_EXTRA_CNT'
 1353 |                                 extra_len += PTR_EXTRA_CNT * EXTRA_LEN;
      |                                              ^~~~~~~~~~~~~
flist.c:1373:69: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1373 |                 if (len != lastdir_len || memcmp(thisname, lastdir, len) != 0) {
      |                                                                     ^~~
flist.c:1374:55: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1374 |                         lastdir = new_array(char, len + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
flist.c:1375:51: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1375 |                         memcpy(lastdir, thisname, len);
      |                                                   ^~~
flist.c:1381:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1381 |         basename_len = strlen(basename) + 1; /* count the '\0' */
      |                        ^~~~~~
flist.c:1384:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1384 |         linkname_len = S_ISLNK(st.st_mode) ? strlen(linkname) + 1 : 0;
      |                        ^~~~~~~
flist.c:1403:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1403 |                 extra_len += EXTRA_LEN;
      |                           ^~
rsync.h:835:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  835 | #define EXTRA_LEN (sizeof (union file_extras))
      |                   ^
flist.c:1403:30: note: in expansion of macro 'EXTRA_LEN'
 1403 |                 extra_len += EXTRA_LEN;
      |                              ^~~~~~~~~
flist.c:1407:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1407 |                 extra_len += EXTRA_LEN;
      |                           ^~
rsync.h:835:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  835 | #define EXTRA_LEN (sizeof (union file_extras))
      |                   ^
flist.c:1407:30: note: in expansion of macro 'EXTRA_LEN'
 1407 |                 extra_len += EXTRA_LEN;
      |                              ^~~~~~~~~
flist.c:1413:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1413 |                         extra_len += SUM_EXTRA_CNT * EXTRA_LEN;
      |                                   ^~
rsync.h:839:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  839 | #define SUM_EXTRA_CNT ((MAX_DIGEST_LEN + EXTRA_LEN - 1) / EXTRA_LEN)
      |                       ^
flist.c:1413:38: note: in expansion of macro 'SUM_EXTRA_CNT'
 1413 |                         extra_len += SUM_EXTRA_CNT * EXTRA_LEN;
      |                                      ^~~~~~~~~~~~~
flist.c:1417:23: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1417 |         if (extra_len & (EXTRA_ROUNDING * EXTRA_LEN))
      |                       ^
flist.c:1418:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1418 |                 extra_len = (extra_len | (EXTRA_ROUNDING * EXTRA_LEN)) + EXTRA_LEN;
      |                                        ^
flist.c:1418:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1418 |                 extra_len = (extra_len | (EXTRA_ROUNDING * EXTRA_LEN)) + EXTRA_LEN;
      |                             ^
flist.c:1421:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1421 |         alloc_len = FILE_STRUCT_LEN + extra_len + basename_len
      |                                     ^
flist.c:1421:49: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1421 |         alloc_len = FILE_STRUCT_LEN + extra_len + basename_len
      |                                                 ^
flist.c:1422:19: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1422 |                   + linkname_len;
      |                   ^
rsync.h:831:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  831 | #define FILE_STRUCT_LEN (sizeof (struct file_struct))
      |                         ^
flist.c:1421:21: note: in expansion of macro 'FILE_STRUCT_LEN'
 1421 |         alloc_len = FILE_STRUCT_LEN + extra_len + basename_len
      |                     ^~~~~~~~~~~~~~~
flist.c:1424:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1424 |                 bp = pool_alloc(pool, alloc_len, "make_file");
      |                                       ^~~~~~~~~
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
flist.c:1426:22: note: in expansion of macro 'new_array'
 1426 |                 bp = new_array(char, alloc_len);
      |                      ^~~~~~~~~
flist.c:1428:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1428 |         memset(bp, 0, extra_len + FILE_STRUCT_LEN);
      |                                 ^
flist.c:1433:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1433 |         memcpy(bp, basename, basename_len);
      |                              ^~~~~~~~~~~~
flist.c:1455:23: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1455 |         file->flags = flags;
      |                       ^~~~~
flist.c:1460:36: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
 1460 |                 F_MOD_NSEC(file) = st.ST_MTIME_NSEC;
      |                                    ^~
flist.c:1470:22: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1470 |         file->mode = st.st_mode;
      |                      ^~
flist.c:1489:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1489 |                 memcpy(bp + basename_len, linkname, linkname_len);
      |                                                     ^~~~~~~~~~~~
flist.c:1495:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1495 |                 F_DEPTH(file) = extra_len / EXTRA_LEN;
      |                                           ^
flist.c:1495:33: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1495 |                 F_DEPTH(file) = extra_len / EXTRA_LEN;
      |                                 ^~~~~~~~~
rsync.h:903:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  903 |                                     + SUM_EXTRA_CNT - 1))
      |                                     ^
rsync.h:842:76: note: in definition of macro 'OPT_EXTRA'
  842 | #define OPT_EXTRA(f,bump) ((union file_extras*)(f) - file_extra_cnt - 1 - (bump))
      |                                                                            ^~~~
flist.c:1504:24: note: in expansion of macro 'F_SUM'
 1504 |                 memcpy(F_SUM(file), tmp_sum, flist_csum_len);
      |                        ^~~~~
flist.c:1504:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1504 |                 memcpy(F_SUM(file), tmp_sum, flist_csum_len);
      |                                              ^~~~~~~~~~~~~~
flist.c: In function 'send_file_name':
flist.c:1543:30: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1543 |                 file->mode = tweak_mode(file->mode, chmod_modes);
      |                              ^~~~~~~~~~
flist.c:1562:39: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1562 |                         symlink_len = strlen(symlink_name);
      |                                       ^~~~~~
flist.c: In function 'send_if_directory':
flist.c:1686:48: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1686 |                 send_directory(f, flist, fbuf, len, flags);
      |                                                ^~~
flist.c: In function 'send_directory':
flist.c:1850:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1850 |                 remainder = MAXPATHLEN - (len + 1);
      |                             ^~~~~~~~~~
flist.c:1895:76: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1895 |                         send_if_directory(f, flist, flist->files[i], fbuf, len, flags);
      |                                                                            ^~~
flist.c: In function 'send_implied_dirs':
flist.c:1917:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1917 |                  && strncmp(lastpath, fname, lastpath_len) == 0)
      |                                              ^~~~~~~~~~~~
flist.c:1956:64: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1956 |                                 change_local_filter_dir(fname, strlen(fname), depth);
      |                                                                ^~~~~~~~~~~~~
flist.c:1966:56: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1966 |                         change_local_filter_dir(fname, strlen(fname), ++depth);
      |                                                        ^~~~~~~~~~~~~
flist.c:1983:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1983 |         len = strlen(limit+1);
      |               ^~~~~~
flist.c:1990:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1990 |         *rnpp = (relnamecache*)new_array(char, RELNAMECACHE_LEN + len + 1);
      |                                                                 ^
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
flist.c:1992:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1992 |         strlcpy((*rnpp)->fname, limit+1, len + 1);
      |                                          ~~~~^~~
flist.c: In function 'send1extra':
flist.c:2016:16: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2016 |         dlen = strlen(fbuf);
      |                ^~~~~~
flist.c:2048:72: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2048 |                 len = strlcpy(fbuf + dlen + 1, rnp->fname, sizeof fbuf - dlen - 1);
      |                                                                        ^
flist.c:2048:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2048 |                 len = strlcpy(fbuf + dlen + 1, rnp->fname, sizeof fbuf - dlen - 1);
      |                       ^~~~~~~
flist.c: In function 'send_extra_file_list':
flist.c:2131:48: warning: unsigned conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} changes the value of '-5' [-Wsign-conversion]
 2131 |                                 file->flags &= ~FLAG_CONTENT_DIR;
      |                                                ^
flist.c:2148:78: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2148 |                         flist->sorted = new_array(struct file_struct *, flist->used);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
flist.c:2149:73: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2149 |                         memcpy(flist->sorted, flist->files, flist->used * PTR_SIZE);
      |                                                                         ^
flist.c: In function 'send_file_list':
flist.c:2271:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2271 |                 len = strlen(fbuf);
      |                       ^~~~~~
flist.c:2367:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2367 |                 dirlen = dir ? strlen(dir) : 0;
      |                          ^~~
flist.c:2368:67: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2368 |                 if (dirlen != lastdir_len || memcmp(lastdir, dir, dirlen) != 0) {
      |                                                                   ^~~~~~
flist.c:2386:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2386 |                         memmove(fbuf, fn, len + 1);
      |                                           ~~~~^~~
flist.c:2456:73: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2456 |                                 send_if_directory(f, flist, file, fbuf, len, flags);
      |                                                                         ^~~
flist.c:2503:70: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2503 |                 flist->sorted = new_array(struct file_struct *, flist->used);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
flist.c:2504:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2504 |                 memcpy(flist->sorted, flist->files, flist->used * PTR_SIZE);
      |                                                                 ^
flist.c: In function 'recv_file_list':
flist.c:2687:70: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2687 |                 flist->sorted = new_array(struct file_struct *, flist->used);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
flist.c:2688:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2688 |                 memcpy(flist->sorted, flist->files, flist->used * PTR_SIZE);
      |                                                                 ^
flist.c:2694:66: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2694 |                                                         dir_flist->malloced);
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
flist.c:2698:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2698 |                                (dir_flist->used - dstart) * PTR_SIZE);
      |                                                           ^
flist.c:2699:75: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2699 |                         fsort(dir_flist->sorted + dstart, dir_flist->used - dstart);
      |                                                           ~~~~~~~~~~~~~~~~^~~~~~~~
flist.c:2705:75: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2705 |                         fsort(dir_flist->sorted + dstart, dir_flist->used - dstart);
      |                                                           ~~~~~~~~~~~~~~~~^~~~~~~~
flist.c: In function 'flist_find':
flist.c:2805:69: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2805 |                                         flist->sorted[mid]->len32 = mid - high;
      |                                                                     ^~~
flist.c: In function 'flist_find_name':
flist.c:2842:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2842 |                 strlcpy(fbuf, fname, slash - fname + 1);
      |                                      ~~~~~~~~~~~~~~^~~
flist.c: In function 'flist_find_ignore_dirness':
flist.c:2872:19: warning: conversion from 'mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 2872 |         f->mode = save_mode;
      |                   ^~~~~~~~~
flist.c: In function 'clear_file':
rsync.h:841:26: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  841 | #define REQ_EXTRA(f,ndx) ((union file_extras*)(f) - (ndx))
      |                          ^
rsync.h:876:20: note: in expansion of macro 'REQ_EXTRA'
  876 | #define F_DEPTH(f) REQ_EXTRA(f, depth_ndx)->num
      |                    ^~~~~~~~~
flist.c:2888:23: note: in expansion of macro 'F_DEPTH'
 2888 |         file->len32 = F_DEPTH(file) = 1;
      |                       ^~~~~~~
flist.c: In function 'flist_sort_and_clean':
flist.c:2979:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2979 |         fsort(flist->sorted, flist->used);
      |                              ~~~~~^~~~~~
flist.c:3009:38: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 3009 |                         file->mode = save_mode;
      |                                      ^~~~~~~~~
flist.c:3026:62: warning: unsigned conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} changes the value of '-65' [-Wsign-conversion]
 3026 |                                                 fp->flags &= file->flags | ~FLAG_IMPLIED_DIR;
      |                                                              ^~~~
flist.c: In function 'f_name':
flist.c:3354:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3354 |                 int len = strlen(f->dirname);
      |                           ^~~~~~
flist.c:3355:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3355 |                 memcpy(fbuf, f->dirname, len);
      |                                          ^~~
flist.c:3357:65: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3357 |                 strlcpy(fbuf + len + 1, f->basename, MAXPATHLEN - (len + 1));
      |                                                                 ^
flist.c: In function 'get_dirlist':
flist.c:3380:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3380 |                 dlen = strlcpy(dirbuf, dirname, MAXPATHLEN);
      |                        ^~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c rsync.c -o rsync.o
In file included from rsync.h:1118,
                 from rsync.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from rsync.c:23:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
rsync.c: In function 'iconvbufs':
rsync.c:236:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  236 |                                 opos = obuf - out->buf;
      |                                        ^~~~
rsync.c:271:16: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  271 |         opos = obuf - out->buf;
      |                ^~~~
rsync.c:277:19: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  277 |         in->pos = ibuf - in->buf;
      |                   ^~~~
rsync.c: In function 'read_ndx_and_attrs':
rsync.c:413:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  413 |                         len = strlen(buf);
      |                               ^~~~~~
rsync.c: In function 'dest_mode':
rsync.c:453:40: warning: unsigned conversion from 'int' to 'mode_t' {aka 'unsigned int'} changes value from '-4096' to '4294963200' [-Wsign-conversion]
  453 |                 new_mode = (flist_mode & ~CHMOD_BITS) | (stat_mode & CHMOD_BITS);
      |                                        ^
rsync.c:453:28: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  453 |                 new_mode = (flist_mode & ~CHMOD_BITS) | (stat_mode & CHMOD_BITS);
      |                            ^
rsync.c:466:39: warning: unsigned conversion from 'int' to 'mode_t' {aka 'unsigned int'} changes the value of '-4096' [-Wsign-conversion]
  466 |                 new_mode = flist_mode & (~CHMOD_BITS | dflt_perms);
      |                                       ^
rsync.c:466:28: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  466 |                 new_mode = flist_mode & (~CHMOD_BITS | dflt_perms);
      |                            ^~~~~~~~~~
rsync.c:468:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  468 |         return new_mode;
      |                ^~~~~~~~
rsync.c: In function 'set_file_attrs':
rsync.c:516:39: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  516 |                 new_mode = tweak_mode(new_mode, daemon_chmod_modes);
      |                                       ^~~~~~~~
rsync.c:516:28: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  516 |                 new_mode = tweak_mode(new_mode, daemon_chmod_modes);
      |                            ^~~~~~~~~~
rsync.h:863:28: warning: conversion to 'long int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  863 | #define F_MOD_NSEC_or_0(f) ((f)->flags & FLAG_MOD_NSEC ? F_MOD_NSEC(f) : 0)
      |                            ^
rsync.c:597:40: note: in expansion of macro 'F_MOD_NSEC_or_0'
  597 |                 sx2.st.ST_MTIME_NSEC = F_MOD_NSEC_or_0(file);
      |                                        ^~~~~~~~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c generator.c -o generator.o
In file included from rsync.h:1118,
                 from generator.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from generator.c:25:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
generator.c: In function 'flush_delete_delay':
generator.c:150:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  150 |         if (write(deldelay_fd, deldelay_buf, deldelay_cnt) != deldelay_cnt) {
      |                                              ^~~~~~~~~~~~
generator.c: In function 'remember_delete':
generator.c:172:75: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  172 |                 len = snprintf(deldelay_buf + deldelay_cnt, deldelay_size - deldelay_cnt,
      |                                                             ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
generator.c: In function 'read_delay_line':
generator.c:205:33: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  205 |                                 deldelay_cnt);
      |                                 ^~~~~~~~~~~~
generator.c:208:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  208 |                            deldelay_size - deldelay_cnt);
      |                            ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
generator.c:247:33: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  247 |         memcpy(buf, past_space, len);
      |                                 ^~~
generator.c:249:16: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  249 |         return mode;
      |                ^~~~
generator.c: In function 'do_delayed_deletions':
generator.c:262:37: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  262 |                 delete_item(delbuf, mode, flags | DEL_RECURSE);
      |                                     ^~~~
generator.c:262:49: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  262 |                 delete_item(delbuf, mode, flags | DEL_RECURSE);
generator.c: In function 'delete_in_dir':
generator.c:300:16: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  300 |         dlen = strlen(fbuf);
      |                ^~~~~~
generator.c:307:55: warning: conversion to 'int64_t' {aka 'long long int'} from 'dev_t' {aka 'long long unsigned int'} may change the sign of the result [-Wsign-conversion]
  307 |                         hashtable_find(dev_tbl, fs_dev+1, "");
      |                                                 ~~~~~~^~
generator.c:310:60: warning: conversion to 'int64_t' {aka 'long long int'} from 'dev_t' {aka 'long long unsigned int'} may change the sign of the result [-Wsign-conversion]
  310 |                         if (!hashtable_find(dev_tbl, fs_dev+1, NULL))
      |                                                      ~~~~~~^~
generator.c:342:63: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  342 |                                 delete_item(delbuf, fp->mode, flags);
      |                                                               ^~~~~
generator.c: In function 'do_delete_pass':
generator.c:370:55: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  370 |                         change_local_filter_dir(fbuf, strlen(fbuf), F_DEPTH(file));
      |                                                       ^~~~~~~~~~~~
generator.c: In function 'mtime_differs':
rsync.h:430:30: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]
  430 | #define ST_MTIME_NSEC st_mtim.tv_nsec
generator.c:392:47: note: in expansion of macro 'ST_MTIME_NSEC'
  392 |         return !same_time(stp->st_mtime, stp->ST_MTIME_NSEC, file->modtime, F_MOD_NSEC_or_0(file));
      |                                               ^~~~~~~~~~~~~
generator.c: In function 'itemize':
generator.c:580:52: warning: conversion from 'int32_t' {aka 'int'} to 'short unsigned int' may change value [-Wconversion]
  580 |                         write_shortint(sock_f_out, iflags);
      |                                                    ^~~~~~
generator.c:584:66: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  584 |                                 write_vstring(sock_f_out, xname, strlen(xname));
      |                                                                  ^~~~~~~~~~~~~
generator.c: In function 'quick_check_ok':
rsync.h:903:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  903 |                                     + SUM_EXTRA_CNT - 1))
      |                                     ^
rsync.h:842:76: note: in definition of macro 'OPT_EXTRA'
  842 | #define OPT_EXTRA(f,bump) ((union file_extras*)(f) - file_extra_cnt - 1 - (bump))
      |                                                                            ^~~~
generator.c:629:44: note: in expansion of macro 'F_SUM'
  629 |                         return memcmp(sum, F_SUM(file), flist_csum_len) == 0;
      |                                            ^~~~~
generator.c:629:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  629 |                         return memcmp(sum, F_SUM(file), flist_csum_len) == 0;
      |                                                         ^~~~~~~~~~~~~~
generator.c: In function 'generate_and_send_sums':
generator.c:793:49: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  793 |                         full_write(f_copy, map, n1);
      |                                                 ^~
generator.c:807:34: warning: conversion to 'int32_t' {aka 'int'} from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  807 |                 write_int(f_out, sum1);
      |                                  ^~~~
generator.c:808:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  808 |                 write_buf(f_out, sum2, sum.s2length);
      |                                        ~~~^~~~~~~~~
generator.c: In function 'find_fuzzy':
generator.c:827:21: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  827 |         fname_len = strlen(fname);
      |                     ^~~~~~
rsync.h:210:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  210 | #define FNAMECMP_FUZZY          0x83
      |                                 ^~~~
generator.c:849:54: note: in expansion of macro 'FNAMECMP_FUZZY'
  849 |                                 *fnamecmp_type_ptr = FNAMECMP_FUZZY + i;
      |                                                      ^~~~~~~~~~~~~~
generator.c:875:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  875 |                         len = strlen(name);
      |                               ^~~~~~
generator.c:878:53: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  878 |                         dist = fuzzy_distance(name, len, fname, fname_len);
      |                                                     ^~~
generator.c:878:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  878 |                         dist = fuzzy_distance(name, len, fname, fname_len);
      |                                                                 ^~~~~~~~~
generator.c:880:53: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  880 |                         dist += fuzzy_distance(suf, suf_len, fname_suf, fname_suf_len) * 10;
      |                                                     ^~~~~~~
generator.c:880:73: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  880 |                         dist += fuzzy_distance(suf, suf_len, fname_suf, fname_suf_len) * 10;
      |                                                                         ^~~~~~~~~~~~~
rsync.h:210:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  210 | #define FNAMECMP_FUZZY          0x83
      |                                 ^~~~
generator.c:888:54: note: in expansion of macro 'FNAMECMP_FUZZY'
  888 |                                 *fnamecmp_type_ptr = FNAMECMP_FUZZY + i;
      |                                                      ^~~~~~~~~~~~~~
generator.c: In function 'list_file_entry':
generator.c:1145:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1145 |         int mtime_width = 1 + strlen(mtime_str);
      |                           ^
generator.c: In function 'recv_generator':
generator.c:1349:49: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1349 |                         delete_item(fname, sx.st.st_mode, del_opts);
      |                                            ~~~~~^~~~~~~~
generator.c:1349:59: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1349 |                         delete_item(fname, sx.st.st_mode, del_opts);
      |                                                           ^~~~~~~~
generator.c:1425:54: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1425 |                           || delete_item(fname, sx.st.st_mode, del_opts | DEL_FOR_DIR) != 0))
      |                                                 ~~~~~^~~~~~~~
generator.c:1425:73: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1425 |                           || delete_item(fname, sx.st.st_mode, del_opts | DEL_FOR_DIR) != 0))
generator.c:1437:53: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1437 |                         if (delete_item(fname, sx.st.st_mode, del_opts | DEL_FOR_DIR) != 0)
      |                                                ~~~~~^~~~~~~~
generator.c:1437:72: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1437 |                         if (delete_item(fname, sx.st.st_mode, del_opts | DEL_FOR_DIR) != 0)
generator.c:1452:38: warning: conversion from 'mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1452 |                         file->mode = dest_mode(file->mode, sx.st.st_mode, dflt_perms, statret == 0);
      |                                      ^~~~~~~~~
generator.c:1522:64: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1522 |                                 change_local_filter_dir(fname, strlen(fname), F_DEPTH(file));
      |                                                                ^~~~~~~~~~~~~
generator.c:1532:30: warning: conversion from 'mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1532 |                 file->mode = dest_mode(file->mode, sx.st.st_mode, dflt_perms, exists);
      |                              ^~~~~~~~~
generator.c:1719:45: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1719 |                 if (delete_item(fname, sx.st.st_mode, del_opts | DEL_FOR_FILE) != 0)
      |                                        ~~~~~^~~~~~~~
generator.c:1719:64: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1719 |                 if (delete_item(fname, sx.st.st_mode, del_opts | DEL_FOR_FILE) != 0)
generator.c:1734:41: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1734 |                         fnamecmp_type = j;
      |                                         ^
generator.c: In function 'atomic_create':
generator.c:2007:55: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 2007 |                         if (delete_item(fname, sxp->st.st_mode, del_opts | del_for_flag) != 0)
      |                                                ~~~~~~~^~~~~~~~
generator.c:2007:74: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 2007 |                         if (delete_item(fname, sxp->st.st_mode, del_opts | del_for_flag) != 0)
      |                                                                 ~~~~~~~~~^~~~~~~~~~~~~~
generator.c: In function 'touch_up_dirs':
rsync.h:863:28: warning: conversion to 'long int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  863 | #define F_MOD_NSEC_or_0(f) ((f)->flags & FLAG_MOD_NSEC ? F_MOD_NSEC(f) : 0)
      |                            ^
generator.c:2113:52: note: in expansion of macro 'F_MOD_NSEC_or_0'
 2113 |                                 st.ST_MTIME_NSEC = F_MOD_NSEC_or_0(file);
      |                                                    ^~~~~~~~~~~~~~~
generator.c: In function 'generate_files':
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
generator.c:2260:32: note: in expansion of macro 'new_array'
 2260 |                 deldelay_buf = new_array(char, deldelay_size);
      |                                ^~~~~~~~~
generator.c:2302:71: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2302 |                                         change_local_filter_dir(fbuf, strlen(fbuf), F_DEPTH(fp));
      |                                                                       ^~~~~~~~~~~~
generator.c:2398:35: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
 2398 |         info_levels[INFO_FLIST] = save_info_flist;
      |                                   ^~~~~~~~~~~~~~~
generator.c:2399:38: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
 2399 |         info_levels[INFO_PROGRESS] = save_info_progress;
      |                                      ^~~~~~~~~~~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c receiver.c -o receiver.o
In file included from rsync.h:1118,
                 from receiver.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
receiver.c: In function 'get_tmpname':
receiver.c:110:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  110 |                 length = strlcpy(fnametmp, tmpdir, MAXPATHLEN - 2);
      |                          ^~~~~~~
receiver.c:119:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  119 |                         strlcpy(fnametmp, fname, length + 1);
      |                                                  ~~~~~~~^~~
receiver.c:142:59: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  142 |                 int added = strlcpy(fnametmp + length, f, maxname);
      |                                                           ^~~~~~~
receiver.c:142:29: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  142 |                 int added = strlcpy(fnametmp + length, f, maxname);
      |                             ^~~~~~~
receiver.c: In function 'receive_data':
receiver.c:406:41: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  406 |         read_buf(f_in, sender_file_sum, sum_len);
      |                                         ^~~~~~~
receiver.c:409:60: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  409 |         if (fd != -1 && memcmp(file_sum1, sender_file_sum, sum_len) != 0)
      |                                                            ^~~~~~~
receiver.c: In function 'recv_files':
receiver.c:836:38: warning: conversion from 'mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  836 |                         file->mode = dest_mode(file->mode, st.st_mode, dflt_perms, exists);
      |                                      ^~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c cleanup.c -o cleanup.o
In file included from rsync.h:1118,
                 from cleanup.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c sender.c -o sender.o
In file included from rsync.h:1118,
                 from sender.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
sender.c: In function 'receive_sums':
sender.c:94:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
   94 |         s->sums = new_array(struct sum_buf, s->count);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
sender.c:97:35: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
   97 |                 s->sums[i].sum1 = read_int(f);
      |                                   ^~~~~~~~
sender.c:98:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   98 |                 read_buf(f, s->sums[i].sum2, s->s2length);
      |                                              ~^~~~~~~~~~
sender.c: In function 'write_ndx_and_attrs':
sender.c:176:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  176 |         write_shortint(f_out, iflags);
      |                               ^~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c exclude.c -o exclude.o
In file included from rsync.h:1118,
                 from exclude.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from exclude.c:24:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
exclude.c: In function 'add_rule':
exclude.c:210:30: warning: unsigned conversion from 'int' to 'uint32_t' {aka 'unsigned int'} changes value from '-65' to '4294967231' [-Wsign-conversion]
  210 |                 rule->rflags &= ~FILTRULE_DIRECTORY;
      |                              ^~
exclude.c:270:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  270 |                         if (len == pat_len - (cp - rule->pattern) && memcmp(s, cp, len) == 0) {
      |                                            ^
rsync.h:1357:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                               ^~~~~
exclude.c:283:45: note: in expansion of macro 'realloc_array'
  283 |                         mergelist_parents = realloc_array(mergelist_parents, filter_rule *, mergelist_size);
      |                                             ^~~~~~~~~~~~~
exclude.c:291:37: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  291 |                 rule->u.slash_cnt = slash_cnt;
      |                                     ^~~~~~~~~
exclude.c: In function 'maybe_add_literal_brackets_rule':
exclude.c:315:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  315 |                 arg_len = strlen(arg);
      |                           ^~~~~~
exclude.c:329:59: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  329 |         p = rule->pattern = new_array(char, arg_len + cnt + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
exclude.c: In function 'implied_include_partial_string':
exclude.c:358:45: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  358 |         memcpy(partial_string_buf, s_start, partial_string_len);
      |                                             ^~~~~~~~~~~~~~~~~~
exclude.c: In function 'add_implied_include':
exclude.c:382:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  382 |                 arg_len = strlen(arg);
      |                           ^~~~~~
exclude.c:387:78: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  387 |                 memcpy(partial_string_buf + partial_string_len, arg, arg_len + 1);
      |                                                                      ~~~~~~~~^~~
exclude.c:405:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  405 |         arg_len = strlen(arg);
      |                   ^~~~~~
exclude.c:422:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  422 |                 p = rule->pattern = new_array(char, arg_len + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
exclude.c:501:89: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  501 |                         p = rule->pattern = new_array(char, arg_len + backslash_cnt + 3 + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
exclude.c:508:73: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  508 |                         p = rule->pattern = new_array(char, arg_len + 3 + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
exclude.c:510:48: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  510 |                                 memcpy(p, arg, arg_len);
      |                                                ^~~~~~~
exclude.c: In function 'parse_merge_name':
exclude.c:593:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  593 |                 fn_len = clean_fname(fn, CFN_COLLAPSE_DOT_DOT_DIRS);
      |                          ^~~~~~~~~~~
exclude.c:598:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  598 |                 int d_len = dirbuf_len - prefix_skip;
      |                             ^~~~~~~~~~
exclude.c:599:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  599 |                 if (d_len + fn_len >= MAXPATHLEN) {
      |                           ^
exclude.c:603:51: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  603 |                 memcpy(buf, dirbuf + prefix_skip, d_len);
      |                                                   ^~~~~
exclude.c:605:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  605 |                 fn_len = clean_fname(buf, CFN_COLLAPSE_DOT_DOT_DIRS);
      |                          ^~~~~~~~~~~
exclude.c: In function 'set_filter_dir':
exclude.c:627:22: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  627 |         dirbuf_len = clean_fname(dirbuf, CFN_COLLAPSE_DOT_DOT_DIRS);
      |                      ^~~~~~~~~~~
exclude.c: In function 'setup_merge_file':
exclude.c:667:15: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  667 |         len = clean_fname(buf, CFN_COLLAPSE_DOT_DOT_DIRS);
      |               ^~~~~~~~~~~
exclude.c:682:30: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  682 |                 dirbuf_len = y - dirbuf;
      |                              ^
exclude.c:683:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  683 |                 strlcpy(x, ex->pattern, MAXPATHLEN - (x - buf));
      |                                                    ^
exclude.c: In function 'push_local_filters':
exclude.c:733:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  733 |                         + (mergelist_cnt-1) * sizeof (filter_rule_list));
      |                                             ^
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
exclude.c:762:36: warning: unsigned conversion from 'int' to 'uint32_t' {aka 'unsigned int'} changes value from '-8193' to '4294959103' [-Wsign-conversion]
  762 |                         ex->rflags &= ~FILTRULE_FINISH_SETUP;
      |                                    ^~
exclude.c: In function 'change_local_filter_dir':
exclude.c:856:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  856 |         filt_array[cur_depth] = push_local_filters(dname, dlen);
      |                                                           ^~~~
exclude.c: In function 'rule_matches':
exclude.c:928:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  928 |                 int l1 = strlen(name);
      |                          ^~~~~~
exclude.c:929:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  929 |                 int l2 = strlen(pattern);
      |                          ^~~~~~
exclude.c: In function 'rule_strcmp':
exclude.c:1018:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1018 |         if (strncmp((char*)str, rule, rule_len) != 0)
      |                                       ^~~~~~~~
exclude.c: In function 'parse_rule_tok':
exclude.c:1074:38: warning: unsigned conversion from 'int' to 'uint32_t' {aka 'unsigned int'} changes value from '-33' to '4294967263' [-Wsign-conversion]
 1074 |                         rule->rflags &= ~FILTRULE_INCLUDE;
      |                                      ^~
exclude.c:1258:23: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1258 |                 len = cp - s;
      |                       ^~
exclude.c:1270:38: warning: unsigned conversion from 'int' to 'uint32_t' {aka 'unsigned int'} changes value from '-262145' to '4294705151' [-Wsign-conversion]
 1270 |                         rule->rflags &= ~FILTRULE_CLEAR_LIST;
      |                                      ^~
exclude.c: In function 'parse_filter_str':
exclude.c:1363:71: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1363 |                                 add_rule(listp, name, (pat + pat_len) - name, excl_self, 0);
      |                                                       ~~~~~~~~~~~~~~~~^~~~~~
exclude.c:1364:46: warning: unsigned conversion from 'int' to 'uint32_t' {aka 'unsigned int'} changes value from '-4097' to '4294963199' [-Wsign-conversion]
 1364 |                                 rule->rflags &= ~FILTRULE_EXCLUDE_SELF;
      |                                              ^~
exclude.c: In function 'parse_filter_file':
exclude.c:1451:40: warning: conversion from 'int' to 'char' may change value [-Wconversion]
 1451 |                                 *s++ = ch;
      |                                        ^~
exclude.c: In function 'get_rule_prefix':
exclude.c:1532:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1532 |                 *plen_ptr = op - buf;
      |                             ^~
exclude.c: In function 'send_rules':
exclude.c:1588:45: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1588 |                 write_int(f_out, plen + len + dlen);
      |                                  ~~~~~~~~~~~^~~~~~
exclude.c: In function 'recv_filter_list':
exclude.c:1635:31: warning: conversion to 'unsigned int' from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 1635 |                 while ((len = read_int(f_in)) != 0) {
      |                               ^~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c util1.c -o util1.o
In file included from rsync.h:1118,
                 from util1.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from util1.c:24:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
util1.c: In function 'full_write':
util1.c:293:21: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  293 |                 len -= written;
      |                     ^~
util1.c: In function 'safe_read':
util1.c:314:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  314 |                 return len;
      |                        ^~~
util1.c: In function 'copy_file':
util1.c:405:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  405 |                 if (full_write(ofd, buf, len) < 0) {
      |                                          ^~~
util1.c: In function 'robust_unlink':
util1.c:493:20: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  493 |         if ((pos = strlcpy(path, fname, MAXPATHLEN)) >= MAXPATHLEN)
      |                    ^~~~~~~
util1.c:498:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  498 |         pos += strlcpy(path+pos, ".rsync", MAXPATHLEN-pos);
      |                                                      ^
util1.c:498:13: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  498 |         pos += strlcpy(path+pos, ".rsync", MAXPATHLEN-pos);
      |             ^~
util1.c:498:16: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  498 |         pos += strlcpy(path+pos, ".rsync", MAXPATHLEN-pos);
      |                ^~~~~~~
util1.c: In function 'robust_rename':
util1.c:561:53: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  561 |                         if (copy_file(from, to, -1, mode) != 0)
      |                                                     ^~~~
util1.c: In function 'glob_match':
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:647:25: note: in expansion of macro 'ENSURE_MEMSPACE'
  647 |                         ENSURE_MEMSPACE(glob.filt_buf, char, glob.fbsize, glob.absize);
      |                         ^~~~~~~~~~~~~~~
util1.c:648:67: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  648 |                         memcpy(glob.filt_buf, glob.arg_buf, abpos + 1);
      |                                                             ~~~~~~^~~
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:651:17: note: in expansion of macro 'ENSURE_MEMSPACE'
  651 |                 ENSURE_MEMSPACE(glob.arg_buf, char, glob.absize, abpos + 3);
      |                 ^~~~~~~~~~~~~~~
util1.c:660:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  660 |                 len = strlen(arg);
      |                       ^~~~~~
util1.c:674:48: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  674 |                         call_glob_match(dname, strlen(dname), 1,
      |                                                ^~~~~~~~~~~~~
util1.c: In function 'call_glob_match':
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:693:9: note: in expansion of macro 'ENSURE_MEMSPACE'
  693 |         ENSURE_MEMSPACE(glob.arg_buf, char, glob.absize, abpos + len + 2);
      |         ^~~~~~~~~~~~~~~
util1.c:694:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  694 |         memcpy(glob.arg_buf + abpos, name, len);
      |                                            ^~~
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:699:17: note: in expansion of macro 'ENSURE_MEMSPACE'
  699 |                 ENSURE_MEMSPACE(glob.filt_buf, char, glob.fbsize, fbpos + len + 2);
      |                 ^~~~~~~~~~~~~~~
util1.c:700:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  700 |                 memcpy(glob.filt_buf + fbpos, name, len);
      |                                                     ^~~
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:731:17: note: in expansion of macro 'ENSURE_MEMSPACE'
  731 |                 ENSURE_MEMSPACE(glob.argv, char *, glob.maxargs, glob.argc + 1);
      |                 ^~~~~~~~~~~~~~~
util1.c: In function 'glob_expand':
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:759:9: note: in expansion of macro 'ENSURE_MEMSPACE'
  759 |         ENSURE_MEMSPACE(glob.arg_buf, char, glob.absize, MAXPATHLEN);
      |         ^~~~~~~~~~~~~~~
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:766:9: note: in expansion of macro 'ENSURE_MEMSPACE'
  766 |         ENSURE_MEMSPACE(glob.argv, char *, glob.maxargs, 100);
      |         ^~~~~~~~~~~~~~~
util1.c:630:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  630 |         do { if ((req) > sz) buf = realloc_array(buf, type, sz = MAX(sz * 2, req)); } while(0)
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
util1.c:772:17: note: in expansion of macro 'ENSURE_MEMSPACE'
  772 |                 ENSURE_MEMSPACE(glob.argv, char *, glob.maxargs, glob.argc + 1);
      |                 ^~~~~~~~~~~~~~~
util1.c: In function 'glob_expand_module':
util1.c:792:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  792 |         int base_len = strlen(base);
      |                        ^~~~~~
util1.c:797:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  797 |         if (strncmp(arg, base, base_len) == 0)
      |                                ^~~~~~~~
util1.c: In function 'strlower':
util1.c:830:30: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  830 |                         *s = toLower(s);
      |                              ^~~~~~~
util1.c: In function 'sanitize_path':
util1.c:1042:28: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1042 |                 int plen = strlen(p); /* the path len INCLUDING any separating slash */
      |                            ^~~~~~
util1.c:1046:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1046 |                         rlen = strlen(rootdir);
      |                                ^~~~~~
util1.c:1051:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1051 |                         dest = new_array(char, MAX(rlen + plen + 1, 2));
      |                                ^~~~~~~~~
util1.c:1055:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1055 |                         memcpy(dest, rootdir, rlen);
      |                                               ^~~~
util1.c: In function 'change_dir':
util1.c:1162:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1162 |         curr_dir_len = clean_fname(curr_dir, CFN_COLLAPSE_DOT_DOT_DIRS | CFN_DROP_TRAILING_DOT_DIR);
      |                        ^~~~~~~~~~~
util1.c: In function 'normalize_path':
util1.c:1182:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1182 |                 int len = strlen(path);
      |                           ^~~~~~
util1.c:1183:38: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1183 |                 if (curr_dir_len + 1 + len >= sizeof curr_dir)
      |                                      ^
util1.c:1186:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1186 |                 memcpy(curr_dir + curr_dir_len + 1, path, len + 1);
      |                                                           ~~~~^~~
util1.c:1192:15: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1192 |         len = clean_fname(path, CFN_COLLAPSE_DOT_DOT_DIRS | CFN_DROP_TRAILING_DOT_DIR);
      |               ^~~~~~~~~~~
util1.c: In function 'partial_dir_fname':
util1.c:1247:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1247 |                         strncpy(t, fname, len); /* safe */
      |                                           ^~~
util1.c:1253:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1253 |         if ((int)pathjoin(t, sz, partial_dir, fn) >= sz)
      |                              ^~
util1.c: In function 'fuzzy_distance':
util1.c:1504:43: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 1504 |                 return (int32)len1 * UNIT + cost;
      |                        ~~~~~~~~~~~~~~~~~~~^~~~~~
util1.c:1521:41: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 1521 |                         diag_inc = diag + cost;
      |                                         ^
util1.c: In function 'bitbag_create':
util1.c:1548:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1548 |         bb->bits = new_array0(uint32*, bb->slot_cnt);
rsync.h:1356:60: note: in definition of macro 'new_array0'
 1356 | #define new_array0(type, num) ((type*)my_alloc(do_calloc, (num), sizeof (type), __FILE__, __LINE__))
      |                                                            ^~~
util1.c: In function 'bitbag_next_bit':
util1.c:1597:61: warning: conversion to 'int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1597 |         for (i = ndx / 32; slot < bb->slot_cnt; slot++, i = mask = 0) {
      |                                                             ^~~~
util1.c: In function 'expand_item_list':
util1.c:1670:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1670 |                         expand_size = -incr; /* increase slowly */
      |                                       ^
util1.c:1672:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1672 |                         expand_size = incr - lp->malloced;
      |                                            ^
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c util2.c -o util2.o
In file included from rsync.h:1118,
                 from util2.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
util2.c: In function 'sum_as_hex':
util2.c:111:24: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  111 |                 *c++ = x1 <= 9 ? x1 + '0' : x1 + 'a' - 10;
      |                        ^~
util2.c:112:24: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  112 |                 *c++ = x2 <= 9 ? x2 + '0' : x2 + 'a' - 10;
      |                        ^~
util2.c: In function 'src_file':
util2.c:142:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  142 |         if (prefix && strncmp(file, util2, prefix) == 0)
      |                                            ^~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c main.c -o main.o
In file included from rsync.h:1118,
                 from main.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from main.c:25:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
main.c: In function 'output_itemized_counts':
main.c:395:69: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  395 |                                 len += snprintf(buf+len, sizeof buf - len - 2,
      |                                                                     ^
main.c: In function 'bytes_per_sec_human_dnum':
main.c:411:63: warning: conversion from 'time_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  411 |         return human_dnum((total_written + total_read) / (0.5 + (endtime - starttime)), 2);
      |                                                               ^
main.c:411:56: warning: conversion from 'int64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  411 |         return human_dnum((total_written + total_read) / (0.5 + (endtime - starttime)), 2);
      |                                                        ^
main.c: In function 'output_summary':
main.c:457:61: warning: conversion from 'int64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  457 |                         comma_dnum((double)stats.total_size / (total_written+total_read), 2),
      |                                                             ^
main.c: In function 'check_alt_basis_dirs':
main.c:838:30: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  838 |                 int bd_len = strlen(bdir);
      |                              ^~~~~~
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
main.c:843:37: note: in expansion of macro 'new_array'
  843 |                         char *new = new_array(char, len);
      |                                     ^~~~~~~~~
main.c:850:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  850 |                                 pathjoin(new, len, curr_dir, bdir + 3);
      |                                               ^~~
main.c:853:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  853 |                                 pathjoin(new, len, curr_dir, bdir);
      |                                               ^~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c checksum.c -o checksum.o
In file included from rsync.h:1118,
                 from checksum.c:29:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
checksum.c: In function 'parse_csum_name':
checksum.c:72:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   72 |                 len = strlen(name);
      |                       ^~~~~~
checksum.c: In function 'get_checksum1':
checksum.c:200:29: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  200 |                 s2 += 4*(s1 + buf[i]) + 3*buf[i+1] + 2*buf[i+2] + buf[i+3] + 10*CHAR_OFFSET;
      |                             ^
checksum.c:200:39: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  200 |                 s2 += 4*(s1 + buf[i]) + 3*buf[i+1] + 2*buf[i+2] + buf[i+3] + 10*CHAR_OFFSET;
      |                                       ^
checksum.c:200:52: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  200 |                 s2 += 4*(s1 + buf[i]) + 3*buf[i+1] + 2*buf[i+2] + buf[i+3] + 10*CHAR_OFFSET;
      |                                                    ^
checksum.c:200:65: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  200 |                 s2 += 4*(s1 + buf[i]) + 3*buf[i+1] + 2*buf[i+2] + buf[i+3] + 10*CHAR_OFFSET;
      |                                                                 ^
checksum.c:201:20: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  201 |                 s1 += (buf[i+0] + buf[i+1] + buf[i+2] + buf[i+3] + 4*CHAR_OFFSET);
      |                    ^~
checksum.c:204:20: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  204 |                 s1 += (buf[i]+CHAR_OFFSET); s2 += s1;
      |                    ^~
checksum.c: In function 'get_checksum2':
checksum.c:235:52: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  235 |                                 SIVALu(seedbuf, 0, checksum_seed);
      |                                                    ^~~~~~~~~~~~~
checksum.c:238:55: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  238 |                         md5_update(&m5, (uchar *)buf, len);
      |                                                       ^~~
checksum.c:240:55: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  240 |                         md5_update(&m5, (uchar *)buf, len);
      |                                                       ^~~
checksum.c:242:52: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  242 |                                 SIVALu(seedbuf, 0, checksum_seed);
      |                                                    ^~~~~~~~~~~~~
checksum.c:277:51: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  277 |                         buf1 = new_array(char, len+4);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
checksum.c:281:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  281 |                 memcpy(buf1, buf, len);
      |                                   ^~~
checksum.c:283:40: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  283 |                         SIVAL(buf1,len,checksum_seed);
      |                                        ^~~~~~~~~~~~~
checksum.c:297:65: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  297 |                         mdfour_update(&m, (uchar *)(buf1+i), len-i);
      |                                                              ~~~^~
checksum.c: In function 'file_checksum':
checksum.c:391:78: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  391 |                         md5_update(&m5, (uchar *)map_ptr(buf, i, remainder), remainder);
      |                                                                              ^~~~~~~~~
checksum.c:430:80: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  430 |                         mdfour_update(&m, (uchar *)map_ptr(buf, i, remainder), remainder);
      |                                                                                ^~~~~~~~~
checksum.c: In function 'sum_init':
checksum.c:505:29: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  505 |                 SIVAL(s, 0, seed);
      |                             ^~~~
checksum.c: In function 'sum_update':
checksum.c:540:49: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  540 |                 md5_update(&ctx.m5, (uchar *)p, len);
      |                                                 ^~~
checksum.c:551:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  551 |                         memcpy(ctx.md.buffer + sumresidue, p, len);
      |                                                               ^~~
checksum.c:558:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  558 |                         memcpy(ctx.md.buffer + sumresidue, p, i);
      |                                                               ^
checksum.c:572:50: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  572 |                         memcpy(ctx.md.buffer, p, sumresidue);
      |                                                  ^~~~~~~~~~
checksum.c: In function 'sum_end':
checksum.c:613:64: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  613 |                 mdfour_update(&ctx.md, (uchar *)ctx.md.buffer, sumresidue);
      |                                                                ^~~~~~~~~~
checksum.c:619:72: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  619 |                         mdfour_update(&ctx.md, (uchar *)ctx.md.buffer, sumresidue);
      |                                                                        ^~~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c match.c -o match.o
In file included from rsync.h:1118,
                 from match.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
match.c: In function 'hash_search':
match.c:233:58: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  233 |                         if (memcmp(sum2,s->sums[i].sum2,s->s2length) != 0) {
      |                                                         ~^~~~~~~~~~
match.c:253:92: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  253 |                                                  || memcmp(sum2, s->sums[aligned_i].sum2, s->s2length) != 0)
      |                                                                                           ~^~~~~~~~~~
match.c:272:84: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  272 |                                                 if (memcmp(sum2, s->sums[i].sum2, s->s2length) != 0)
      |                                                                                   ~^~~~~~~~~~
match.c:291:65: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  291 |                          && memcmp(sum2, s->sums[want_i].sum2, s->s2length) == 0) {
      |                                                                ~^~~~~~~~~~
match.c:318:20: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  318 |                 s1 -= map[0] + CHAR_OFFSET;
      |                    ^~
match.c:319:20: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  319 |                 s2 -= k * (map[0]+CHAR_OFFSET);
      |                    ^~
match.c:323:28: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  323 |                         s1 += map[k] + CHAR_OFFSET;
      |                            ^~
match.c: In function 'match_sums':
match.c:416:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  416 |                 memset(sender_file_sum, 0, sum_len);
      |                                            ^~~~~~~
match.c:423:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  423 |         write_buf(f, sender_file_sum, sum_len);
      |                                       ^~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c syscall.c -o syscall.o
In file included from rsync.h:1118,
                 from syscall.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
syscall.c: In function 'trim_trailing_slashes':
syscall.c:310:13: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  310 |         l = strlen(name);
      |             ^~~~~~
syscall.c: In function 'do_punch_hole':
syscall.c:657:37: warning: conversion from 'off_t' {aka 'long long int'} to 'int' may change value [-Wconversion]
  657 |                         int chunk = len > (int)sizeof zeros ? (int)sizeof zeros : len;
      |                                     ^~~
syscall.c:658:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  658 |                         int wrote = write(fd, zeros, chunk);
      |                                                      ^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c log.c -o log.o
In file included from rsync.h:1118,
                 from log.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
log.c: In function 'filtered_fwrite':
log.c:231:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  231 |                         if (fwrite(outbuf, ob - outbuf, 1, f) != 1)
      |                                            ~~~^~~~~~~~
log.c:244:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  244 |         if (ob != outbuf && fwrite(outbuf, ob - outbuf, 1, f) != 1)
      |                                            ~~~^~~~~~~~
log.c: In function 'rwrite':
log.c:277:51: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  277 |                 send_msg((enum msgcode)code, buf, len, 0);
      |                                                   ^~~
log.c:300:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  300 |                 strlcpy(msg, buf, MIN((int)sizeof msg, len + 1));
      |                                   ^~~
log.c:339:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  339 |                 if (send_msg(msg, buf, len, !is_utf8))
      |                                        ^~~
rsync.h:1081:65: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1081 | #define INIT_XBUF(xb, str, ln, sz) (xb).buf = (str), (xb).len = (ln), (xb).size = (sz), (xb).pos = 0
      |                                                                 ^
log.c:368:17: note: in expansion of macro 'INIT_XBUF'
  368 |                 INIT_XBUF(inbuf, (char*)buf, len, (size_t)-1);
      |                 ^~~~~~~~~
log.c:375:67: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  375 |                                 filtered_fwrite(f, convbuf, outbuf.len, 0, trailing);
      |                                                             ~~~~~~^~~~
log.c: In function 'rprintf':
log.c:413:15: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  413 |         len = vsnprintf(buf, sizeof buf, format, ap);
      |               ^~~~~~~~~
log.c:442:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  442 |         rwrite(code, buf, len, 0);
      |                           ^~~
log.c: In function 'rsyserr':
log.c:459:15: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  459 |         len = snprintf(buf, sizeof buf, RSYNC_NAME ": [%s] ", who_am_i());
      |               ^~~~~~~~
log.c:462:13: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  462 |         len += vsnprintf(buf + len, sizeof buf - len, format, ap);
      |             ^~
log.c:466:21: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  466 |                 len += snprintf(buf + len, sizeof buf - len,
      |                     ^~
log.c:472:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  472 |         rwrite(code, buf, len, 0);
      |                           ^~~
log.c: In function 'log_formatted':
rsync.h:903:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  903 |                                     + SUM_EXTRA_CNT - 1))
      |                                     ^
rsync.h:842:76: note: in definition of macro 'OPT_EXTRA'
  842 | #define OPT_EXTRA(f,bump) ((union file_extras*)(f) - file_extra_cnt - 1 - (bump))
      |                                                                            ^~~~
log.c:683:71: note: in expansion of macro 'F_SUM'
  683 |                                         n = sum_as_hex(checksum_type, F_SUM(file), 1);
      |                                                                       ^~~~~
log.c:690:58: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  690 |                                 memset(buf2, ' ', sum_len*2);
      |                                                   ~~~~~~~^~
log.c:760:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  760 |                 total -= p - s + 1;
      |                       ^~
log.c:771:55: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  771 |                         memmove(s + len, p + 1, total - (s - buf) + 1);
      |                                                       ^
log.c:782:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  782 |         rwrite(code, buf, total, 0);
      |                           ^~~~~
log.c: In function 'log_delete':
log.c:842:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  842 |         int len = strlen(fname);
      |                   ^~~~~~
log.c:846:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  846 |                 int extra_len = (file_extra_cnt + 2) * EXTRA_LEN;
      |                                                      ^
log.c:846:33: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  846 |                 int extra_len = (file_extra_cnt + 2) * EXTRA_LEN;
      |                                 ^
log.c:853:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  853 |                 bp = new_array0(char, FILE_STRUCT_LEN + extra_len + 1);
      |                                                       ^
rsync.h:1356:60: note: in definition of macro 'new_array0'
 1356 | #define new_array0(type, num) ((type*)my_alloc(do_calloc, (num), sizeof (type), __FILE__, __LINE__))
      |                                                            ^~~
log.c:858:22: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  858 |         file->mode = mode;
      |                      ^~~~
log.c:863:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  863 |                 send_msg(MSG_DELETED, fname, len, am_generator);
      |                                              ^~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c backup.c -o backup.o
In file included from rsync.h:1118,
                 from backup.c:21:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from backup.c:22:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
backup.c: In function 'validate_backup_dir':
backup.c:49:48: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
   49 |                 int flags = get_del_for_flag(st.st_mode) | DEL_FOR_BACKUP | DEL_RECURSE;
      |                                              ~~^~~~~~~~
backup.c:50:51: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
   50 |                 if (delete_item(backup_dir_buf, st.st_mode, flags) == 0)
      |                                                 ~~^~~~~~~~
backup.c:50:61: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
   50 |                 if (delete_item(backup_dir_buf, st.st_mode, flags) == 0)
      |                                                             ^~~~~
backup.c: In function 'make_backup':
backup.c:250:59: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  250 |                         int flags = get_del_for_flag(bakst.st_mode) | DEL_FOR_BACKUP | DEL_RECURSE;
      |                                                      ~~~~~^~~~~~~~
backup.c:251:51: warning: conversion from '__mode_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  251 |                         if (delete_item(buf, bakst.st_mode, flags) != 0)
      |                                              ~~~~~^~~~~~~~
backup.c:251:61: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  251 |                         if (delete_item(buf, bakst.st_mode, flags) != 0)
      |                                                             ^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c delete.c -o delete.o
In file included from rsync.h:1118,
                 from delete.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
delete.c: In function 'is_backup_file':
delete.c:39:28: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   39 |         int k = strlen(fn) - backup_suffix_len;
      |                            ^
delete.c:39:17: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int k = strlen(fn) - backup_suffix_len;
      |                 ^~~~~~
delete.c: In function 'delete_dir_contents':
delete.c:62:16: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   62 |         dlen = strlen(fname);
      |                ^~~~~~
delete.c:63:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   63 |         save_filters = push_local_filters(fname, dlen);
      |                                                  ^~~~
delete.c:80:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   80 |         remainder = MAXPATHLEN - (p - fname);
      |                     ^~~~~~~~~~
delete.c:83:17: warning: unsigned conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} changes the value of '-256' [-Wsign-conversion]
   83 |         flags = (flags & ~(DEL_RECURSE|DEL_MAKE_ROOM|DEL_NO_UID_WRITE))
      |                 ^
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c options.c -o options.o
In file included from rsync.h:1118,
                 from options.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from options.c:24:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
options.c: In function 'make_output_option':
options.c:366:21: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  366 |                 len += len ? 1 : strlen(str);
      |                     ^~
options.c:366:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  366 |                 len += len ? 1 : strlen(str);
      |                        ^~~
options.c:367:21: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  367 |                 len += strlen(words[j].name);
      |                     ^~
options.c:367:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  367 |                 len += strlen(words[j].name);
      |                        ^~~~~~
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
options.c:393:15: note: in expansion of macro 'new_array'
  393 |         buf = new_array(char, len);
      |               ^~~~~~~~~
options.c:400:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  400 |                         pos += snprintf(buf, len, "%sNONE", str);
      |                                              ^~~
options.c:402:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  402 |                         pos += snprintf(buf, len, "%sALL", str);
      |                                              ^~~
options.c:404:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  404 |                         pos += snprintf(buf, len, "%sALL%d", str, lev);
      |                                              ^~~
options.c:413:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  413 |                         pos += strlcpy(buf+pos, str, len-pos);
      |                                                      ~~~^~~~
options.c:413:29: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  413 |                         pos += strlcpy(buf+pos, str, len-pos);
      |                             ^~
options.c:413:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  413 |                         pos += strlcpy(buf+pos, str, len-pos);
      |                                ^~~~~~~
options.c:415:67: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  415 |                         pos += strlcpy(buf+pos, words[j].name, len-pos);
      |                                                                ~~~^~~~
options.c:415:29: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  415 |                         pos += strlcpy(buf+pos, words[j].name, len-pos);
      |                             ^~
options.c:415:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  415 |                         pos += strlcpy(buf+pos, words[j].name, len-pos);
      |                                ^~~~~~~
options.c:418:38: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  418 |                         buf[pos++] = '0' + levels[j];
      |                                      ^~~
options.c: In function 'parse_output_words':
options.c:435:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  435 |                         len = strlen(str);
      |                               ^~~~~~
options.c:455:89: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  455 |                          || (len == words[j].namelen && strncasecmp(str, words[j].name, len) == 0)) {
      |                                                                                         ^~~
options.c:458:53: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  458 |                                         levels[j] = lev;
      |                                                     ^~~
options.c: In function 'parse_size_arg':
options.c:1113:17: warning: conversion from 'double' to 'ssize_t' {aka 'int'} may change value [-Wfloat-conversion]
 1113 |         size *= atof(size_arg);
      |                 ^~~~
options.c:1135:63: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1135 |                 len += snprintf(err_buf + len, sizeof err_buf - len - 1, " (%s: %s%s)",
      |                                                               ^
options.c: In function 'create_refuse_error':
options.c:1300:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1300 |                 snprintf(err_buf + n, sizeof err_buf - n, " (-%c)\n", op->shortName);
      |                                                      ^
options.c: In function 'parse_arguments':
rsync.h:1357:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                               ^~~~~
options.c:1635:50: note: in expansion of macro 'realloc_array'
 1635 |                                 remote_options = realloc_array(remote_options,
      |                                                  ^~~~~~~~~~~~~
options.c:1795:39: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1795 |                                 len = strlen(chown);
      |                                       ^~~~~~
options.c:1892:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1892 |                         len = strlen(arg);
      |                               ^~~~~~
options.c:1893:59: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1893 |                         if (len && strncmp("errors", arg, len) == 0)
      |                                                           ^~~
options.c:1895:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1895 |                         else if (len && strncmp("all", arg, len) == 0)
      |                                                             ^~~
options.c:1897:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1897 |                         else if (len && strncmp("client", arg, len) == 0)
      |                                                                ^~~
options.c:1940:29: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 1940 |                 max_alloc = size;
      |                             ^~~~
options.c:2259:29: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2259 |         backup_suffix_len = strlen(backup_suffix);
      |                             ^~~~~~
options.c:2287:62: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2287 |                 backup_dir_remainder = sizeof backup_dir_buf - backup_dir_len;
      |                                                              ^
options.c: In function 'safe_arg':
options.c:2505:20: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2505 |         int len1 = opt && *opt ? strlen(opt) + 1 : 0;
      |                    ^~~
options.c:2506:20: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2506 |         int len2 = strlen(arg);
      |                    ^~~~~~
options.c:2522:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2522 |         ret = new_array(char, len1 + len2 + extras + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
options.c:2524:38: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2524 |                 memcpy(ret, opt, len1-1);
      |                                  ~~~~^~
options.c:2533:41: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2533 |                 memcpy(ret + len1, arg, len2);
      |                                         ^~~~
options.c: In function 'parse_hostspec':
options.c:3072:49: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3072 |         ret = new_array(char, userlen + hostlen + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
options.c:3074:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3074 |                 strlcpy(ret, str, userlen + 1);
      |                                   ~~~~~~~~^~~
options.c:3075:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3075 |         strlcpy(ret + userlen, host_start, hostlen + 1);
      |                                            ~~~~~~~~^~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c io.c -o io.o
In file included from rsync.h:1118,
                 from io.c:30:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from io.c:31:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
io.c: In function 'safe_write':
io.c:327:21: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  327 |                 len -= n;
      |                     ^~
io.c:359:29: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  359 |                         len -= n;
      |                             ^~
io.c: In function 'forward_filesfrom_data':
io.c:409:29: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  409 |                 ff_xb.pos = s - ff_xb.buf;
      |                             ^
io.c:471:60: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  471 |                         write_buf(iobuf.out_fd, ff_xb.buf, len);
      |                                                            ^~~
io.c: In function 'perform_io':
io.c:818:38: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  818 |                         iobuf.in.len += n;
      |                                      ^~
io.c:860:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  860 |                         if ((out->pos += n) == out->size) {
      |                                       ^~
io.c:867:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  867 |                         if ((out->len -= n) == empty_buf_len) {
      |                                       ^~
io.c: In function 'raw_read_int':
io.c:936:16: warning: conversion to 'int32_t' {aka 'int'} from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  936 |         return IVAL(data, 0);
      |                ^~~~~~~~~~~~~
io.c: In function 'send_msg':
io.c:1046:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1046 |         SIVAL(hdr, 0, ((MPLEX_BASE + (int)code)<<24) + len);
      |                                                      ^
io.c: In function 'send_msg_int':
io.c:1063:26: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1063 |         SIVAL(numbuf, 0, num);
      |                          ^~~
io.c: In function 'read_args':
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
io.c:1278:16: note: in expansion of macro 'new_array'
 1278 |         argv = new_array(char *, maxargs);
      |                ^~~~~~~~~
rsync.h:1357:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                               ^~~~~
io.c:1291:32: note: in expansion of macro 'realloc_array'
 1291 |                         argv = realloc_array(argv, char *, maxargs);
      |                                ^~~~~~~~~~~~~
io.c:1296:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1296 |                                 int len = strlen(buf);
      |                                           ^~~~~~
io.c:1299:96: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1299 |                                 *request_p = realloc_array(*request_p, char, request_len + len + 1);
rsync.h:1357:64: note: in definition of macro 'realloc_array'
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                                ^~~
io.c:1300:75: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1300 |                                 memcpy(*request_p + request_len, buf, len + 1);
      |                                                                       ~~~~^~~
io.c: In function 'read_a_msg':
io.c:1626:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1626 |                 rwrite((enum logcode)tag, data, msg_bytes, !am_generator);
      |                                                 ^~~~~~~~~
io.c: In function 'read_shortint':
io.c:1744:34: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
 1744 |         return (UVAL(b, 1) << 8) + UVAL(b, 0);
io.c: In function 'read_int':
io.c:1753:15: warning: conversion to 'int32_t' {aka 'int'} from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1753 |         num = IVAL(b, 0);
      |               ^~~~
io.c: In function 'read_varint':
io.c:1779:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1779 |                 read_buf(f, u.b, extra);
      |                                  ^~~~~
io.c:1784:15: warning: conversion to 'int32_t' {aka 'int'} from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1784 |         u.x = IVAL(u.b,0);
      |               ^~~~
io.c: In function 'read_varlong':
io.c:1816:50: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1816 |                 read_buf(f, u.b + min_bytes - 1, extra);
      |                                                  ^~~~~
io.c: In function 'read_vstring':
io.c:1924:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1924 |                 read_buf(f, buf, len);
      |                                  ^~~
io.c: In function 'sleep_for_bwlimit':
io.c:2004:32: warning: conversion from 'long long int' to 'long int' may change value [-Wconversion]
 2004 |                 elapsed_usec = (start_tv.tv_sec - prior_tv.tv_sec) * ONE_SEC
      |                                ^
io.c:2006:34: warning: conversion from 'long long int' to 'long int' may change value [-Wconversion]
 2006 |                 total_written -= (int64)elapsed_usec * bwlimit / (ONE_SEC/1024);
      |                                  ^
io.c:2022:24: warning: conversion from 'long long int' to 'long int' may change value [-Wconversion]
 2022 |         elapsed_usec = (prior_tv.tv_sec - start_tv.tv_sec) * ONE_SEC
      |                        ^
io.c: In function 'write_int':
io.c:2051:21: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 2051 |         SIVAL(b, 0, x);
      |                     ^
io.c: In function 'write_varint':
io.c:2061:21: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 2061 |         SIVAL(b, 1, x);
      |                     ^
io.c:2070:22: warning: conversion from 'int' to 'char' may change value [-Wconversion]
 2070 |                 *b = b[cnt] | ~(bit*2-1);
      |                      ^
io.c:2074:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2074 |         write_buf(f, b, cnt);
      |                         ^~~
io.c: In function 'write_varlong':
io.c:2102:22: warning: conversion from 'int' to 'char' may change value [-Wconversion]
 2102 |                 *b = b[cnt] | ~(bit*2-1);
      |                      ^
io.c:2106:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2106 |         write_buf(f, b, cnt);
      |                         ^~~
io.c: In function 'write_longint':
io.c:2117:21: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
 2117 |         SIVAL(s, 0, x);
      |                     ^
io.c:2128:23: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
 2128 |         SIVAL(s, 4, x >> 32);
      |                     ~~^~~~~
io.c: In function 'write_vstring':
io.c:2199:25: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 2199 |                 *lb++ = len / 0x100 + 0x80;
      |                         ^~~
io.c:2201:15: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 2201 |         *lb = len;
      |               ^~~
io.c:2203:49: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2203 |         write_buf(f, (char*)lenbuf, lb - lenbuf + 1);
      |                                     ~~~~~~~~~~~~^~~
io.c:2205:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2205 |                 write_buf(f, str, len);
      |                                   ^~~
io.c: In function 'write_ndx':
io.c:2252:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 2252 |         write_buf(f, b, cnt);
      |                         ^~~
io.c: In function 'read_ndx':
byteorder.h:33:23: warning: unsigned conversion from 'int' to 'char' changes the value of '-129' [-Wsign-conversion]
   33 | #define CVAL(buf,pos) (((unsigned char *)(buf))[pos])
      |                       ^
io.c:2276:32: note: in expansion of macro 'CVAL'
 2276 |                         b[3] = CVAL(b, 0) & ~0x80;
      |                                ^~~~
io.c:2279:31: warning: conversion to 'int32_t' {aka 'int'} from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2279 |                         num = IVAL(b, 0);
      |                               ^~~~
io.c:2281:58: warning: conversion to 'unsigned int' from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 2281 |                         num = (UVAL(b,0)<<8) + UVAL(b,1) + *prev_ptr;
      |                                                          ^
io.c:2281:31: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2281 |                         num = (UVAL(b,0)<<8) + UVAL(b,1) + *prev_ptr;
      |                               ^
io.c:2283:34: warning: conversion to 'unsigned int' from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 2283 |                 num = UVAL(b, 0) + *prev_ptr;
      |                                  ^
byteorder.h:34:23: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   34 | #define UVAL(buf,pos) ((uint32)CVAL(buf,pos))
      |                       ^
io.c:2283:23: note: in expansion of macro 'UVAL'
 2283 |                 num = UVAL(b, 0) + *prev_ptr;
      |                       ^~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c compat.c -o compat.o
In file included from rsync.h:1118,
                 from compat.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from compat.c:24:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
compat.c: In function 'get_nni_by_name':
compat.c:223:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  223 |                 len = strlen(name);
      |                       ^~~~~~
compat.c:226:50: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  226 |                 if (strncasecmp(name, nni->name, len) == 0 && nni->name[len] == '\0')
      |                                                  ^~~
compat.c: In function 'init_nno_saw':
compat.c:258:49: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  258 |                 nno->saw = new_array0(uchar, nno->saw_len);
rsync.h:1356:60: note: in definition of macro 'new_array0'
 1356 | #define new_array0(type, num) ((type*)my_alloc(do_calloc, (num), sizeof (type), __FILE__, __LINE__))
      |                                                            ^~~
compat.c:265:54: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  265 |                                 nno->saw[nni->num] = cnt;
      |                                                      ^~~
compat.c:269:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  269 |         memset(nno->saw, val, nno->saw_len);
      |                               ~~~^~~~~~~~~
compat.c: In function 'parse_nni_str':
compat.c:288:62: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  288 |                                         nno->saw[nni->num] = ++cnt;
      |                                                              ^~
compat.c:290:99: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  290 |                                                 to = tok + strlcpy(tok, nni->main_name, tobuf_len - (tok - tobuf));
      |                                                                                         ~~~~~~~~~~^~~~~~~~~~~~~~~
compat.c:319:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  319 |                 return strlcpy(tobuf, "INVALID", MAX_NSTR_STRLEN);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compat.c: In function 'recv_negotiate_str':
compat.c:385:86: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  385 |                                         cp += strlcpy(cp, nni->name, MAX_NSTR_STRLEN - (cp - tmpbuf));
      |                                                                                      ^
compat.c: In function 'get_default_nno_list':
compat.c:480:66: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  480 |                 len += strlcpy(to_buf+len, nni->name, to_buf_len - len);
      |                                                       ~~~~~~~~~~~^~~~~
compat.c:480:21: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  480 |                 len += strlcpy(to_buf+len, nni->name, to_buf_len - len);
      |                     ^~
compat.c:480:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  480 |                 len += strlcpy(to_buf+len, nni->name, to_buf_len - len);
      |                        ^~~~~~~
compat.c:487:38: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  487 |                 nno->saw[nni->num] = ++cnt;
      |                                      ^~
compat.c: In function 'negotiate_the_strings':
compat.c:540:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  540 |                         len = strlcpy(tmpbuf, protocol_version >= 30 ? "md5" : "md4", MAX_NSTR_STRLEN);
      |                               ^~~~~~~
compat.c:550:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  550 |                         len = strlcpy(tmpbuf, "zlib", MAX_NSTR_STRLEN);
      |                               ^~~~~~~
compat.c: In function 'setup_protocol':
compat.c:568:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  568 |                 atimes_ndx = (file_extra_cnt += EXTRA64_CNT);
      |                                              ^~
rsync.h:838:21: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  838 | #define EXTRA64_CNT ((sizeof (union file_extras64) + EXTRA_LEN - 1) / EXTRA_LEN)
      |                     ^
compat.c:568:49: note: in expansion of macro 'EXTRA64_CNT'
  568 |                 atimes_ndx = (file_extra_cnt += EXTRA64_CNT);
      |                                                 ^~~~~~~~~~~
compat.c:570:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  570 |                 crtimes_ndx = (file_extra_cnt += EXTRA64_CNT);
      |                                               ^~
rsync.h:838:21: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  838 | #define EXTRA64_CNT ((sizeof (union file_extras64) + EXTRA_LEN - 1) / EXTRA_LEN)
      |                     ^
compat.c:570:50: note: in expansion of macro 'EXTRA64_CNT'
  570 |                 crtimes_ndx = (file_extra_cnt += EXTRA64_CNT);
      |                                                  ^~~~~~~~~~~
compat.c:724:51: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  724 |                                 write_byte(f_out, compat_flags);
      |                                                   ^~~~~~~~~~~~
compat.c:783:75: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  783 |                 parse_filter_str(&filter_list, partial_dir, rule_template(rflags), 0);
      |                                                                           ^~~~~~
compat.c:800:41: warning: conversion from 'time_t' {aka 'long long int'} to 'int' may change value [-Wconversion]
  800 |                         checksum_seed = time(NULL) ^ (getpid() << 6);
      |                                         ^~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c hlink.c -o hlink.o
In file included from rsync.h:1118,
                 from hlink.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from hlink.c:25:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
hlink.c: In function 'idev_destroy':
rsync.h:703:59: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  703 | #define HT_NODE(tbl, bkts, i) ((void*)((char*)(bkts) + (i)*(tbl)->node_size))
      |                                                           ^
hlink.c:92:46: note: in expansion of macro 'HT_NODE'
   92 |                 struct ht_int32_node *node = HT_NODE(dev_tbl, dev_tbl->nodes, i);
      |                                              ^~~~~~~
hlink.c: In function 'match_gnums':
hlink.c:120:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  120 |         qsort(ndx_list, ndx_count, sizeof ndx_list[0], (int (*)(const void *, const void *)) hlink_compare_gnum);
      |                         ^~~~~~~~~
hlink.c:133:40: warning: conversion to 'int32_t' {aka 'int'} from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  133 |                                 prev = IVAL(node->data, 1);
      |                                        ^~~~
hlink.c:136:89: warning: unsigned conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  136 |                                         flist->files[prev - flist->ndx_start]->flags &= ~FLAG_HLINK_LAST;
      |                                                                                         ^
hlink.c:164:40: warning: unsigned conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} changes the value of '-97' [-Wsign-conversion]
  164 |                         file->flags &= ~(FLAG_HLINKED | FLAG_HLINK_FIRST);
      |                                        ^
hlink.c:176:46: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  176 |                         SIVAL(node->data, 1, prev);
      |                                              ^~~~
hlink.c: In function 'match_hard_links':
hlink.c:191:50: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  191 |                 ndx_list = new_array(int32, flist->used);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
hlink.c: In function 'finish_hard_link':
hlink.c:510:31: warning: unsigned conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} changes the value of '-321' [-Wsign-conversion]
  510 |                 file->flags = (file->flags & ~FLAG_HLINK_FIRST) | FLAG_HLINK_DONE;
      |                               ^
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c token.c -o token.o
In file included from rsync.h:1118,
                 from token.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
token.c: In function 'add_nocompress_suffixes':
token.c:159:40: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  159 |                                 *t++ = toLower(f);
      |                                        ^~~~~~~
token.c: In function 'init_set_compression':
token.c:199:40: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  199 |                                 *t++ = toLower(f);
      |                                        ^~~~~~~
token.c: In function 'simple_recv_token':
token.c:300:24: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  300 |         read_buf(f,buf,n);
      |                        ^
token.c: In function 'simple_send_token':
token.c:312:68: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  312 |                         write_buf(f, map_ptr(buf, offset+len, n1), n1);
      |                                                                    ^~
token.c: In function 'send_deflated_token':
token.c:389:71: warning: conversion from 'int32_t' {aka 'int'} to 'unsigned char' may change value [-Wconversion]
  389 |                         write_byte(f, (n==0? TOKEN_REL: TOKENRUN_REL) + r);
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
token.c:395:39: warning: conversion from 'int32_t' {aka 'int'} to 'unsigned char' may change value [-Wconversion]
  395 |                         write_byte(f, n);
      |                                       ^
token.c:396:41: warning: conversion from 'int32_t' {aka 'int'} to 'unsigned char' may change value [-Wconversion]
  396 |                         write_byte(f, n >> 8);
      |                                       ~~^~~~
token.c:415:52: warning: conversion to 'uInt' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  415 |                                 tx_strm.avail_in = n;
      |                                                    ^
token.c:329:25: warning: conversion to 'int32_t' {aka 'int'} from 'uInt' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  329 | #define MAX_DATA_COUNT  16383   /* fit 14 bit count into 2 bytes with flags */
      |                         ^~~~~
token.c:441:37: note: in expansion of macro 'MAX_DATA_COUNT'
  441 |                                 n = MAX_DATA_COUNT - tx_strm.avail_out;
      |                                     ^~~~~~~~~~~~~~
token.c:325:25: warning: conversion from 'int32_t' {aka 'int'} to 'char' may change value [-Wconversion]
  325 | #define DEFLATED_DATA   0x40    /* + 6-bit high len, then low len byte */
      |                         ^~~~
token.c:451:51: note: in expansion of macro 'DEFLATED_DATA'
  451 |                                         obuf[0] = DEFLATED_DATA + (n >> 8);
      |                                                   ^~~~~~~~~~~~~
token.c:452:51: warning: conversion from 'int32_t' {aka 'int'} to 'char' may change value [-Wconversion]
  452 |                                         obuf[1] = n;
      |                                                   ^
token.c:453:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  453 |                                         write_buf(f, obuf, n+2);
      |                                                            ~^~
token.c:472:44: warning: conversion to 'uInt' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  472 |                         tx_strm.avail_in = n1;
      |                                            ^~
token.c: In function 'recv_deflated_token':
token.c:537:51: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  537 |                                 read_buf(f, cbuf, n);
      |                                                   ^
token.c:539:52: warning: conversion to 'uInt' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  539 |                                 rx_strm.avail_in = n;
      |                                                    ^
token.c:335:39: warning: conversion to 'int32_t' {aka 'int'} from 'uInt' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  335 | #define AVAIL_OUT_SIZE(avail_in_size) ((avail_in_size)*1001/1000+16)
      |                                       ^
token.c:549:37: note: in expansion of macro 'AVAIL_OUT_SIZE'
  549 |                                 n = AVAIL_OUT_SIZE(CHUNK_SIZE) - rx_strm.avail_out;
      |                                     ^~~~~~~~~~~~~~
token.c:335:39: warning: conversion to 'int32_t' {aka 'int'} from 'uInt' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  335 | #define AVAIL_OUT_SIZE(avail_in_size) ((avail_in_size)*1001/1000+16)
      |                                       ^
token.c:605:29: note: in expansion of macro 'AVAIL_OUT_SIZE'
  605 |                         n = AVAIL_OUT_SIZE(CHUNK_SIZE) - rx_strm.avail_out;
      |                             ^~~~~~~~~~~~~~
token.c: In function 'see_deflate_token':
token.c:649:42: warning: conversion from 'int32_t' {aka 'int'} to 'unsigned char' may change value [-Wconversion]
  649 |                                 hdr[1] = blklen;
      |                                          ^~~~~~
token.c:650:42: warning: conversion from 'int32_t' {aka 'int'} to 'unsigned char' may change value [-Wconversion]
  650 |                                 hdr[2] = blklen >> 8;
      |                                          ^~~~~~
token.c:655:52: warning: conversion to 'uInt' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  655 |                                 rx_strm.avail_in = blklen;
      |                                                    ^~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c uidlist.c -o uidlist.o
In file included from rsync.h:1118,
                 from uidlist.c:26:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from uidlist.c:27:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
uidlist.c: In function 'is_in_group':
uidlist.c:208:56: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  208 |                 gidset = new_array(GETGROUPS_T, ngroups+1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
uidlist.c:220:66: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  220 |                         char *gidbuf = new_array(char, ngroups*21+32);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
uidlist.c: In function 'recv_add_id':
uidlist.c:285:55: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  285 |         node = add_to_list(idlist_ptr, id, noiu, id2, flag);
      |                                                       ^~~~
uidlist.c: In function 'send_one_name':
uidlist.c:379:20: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  379 |         if ((len = strlen(name)) > 255) /* Impossible? */
      |                    ^~~~~~
uidlist.c:382:27: warning: conversion to 'int32_t' {aka 'int'} from 'id_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  382 |         write_varint30(f, id);
      |                           ^~
uidlist.c:383:23: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  383 |         write_byte(f, len);
      |                       ^~~
uidlist.c:385:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  385 |                 write_buf(f, name, len);
      |                                    ^~~
uidlist.c: In function 'recv_user_name':
uidlist.c:423:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  423 |                 name = new_array(char, len+1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
uidlist.c:424:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  424 |                 read_sbuf(f, name, len);
      |                                    ^~~
uidlist.c: In function 'recv_group_name':
uidlist.c:443:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  443 |                 name = new_array(char, len+1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
uidlist.c:444:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  444 |                 read_sbuf(f, name, len);
      |                                    ^~~
uidlist.c: In function 'recv_id_list':
uidlist.c:467:30: warning: conversion to 'id_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  467 |                 while ((id = read_varint30(f)) != 0)
      |                              ^~~~~~~~~~~~~
uidlist.c:475:30: warning: conversion to 'id_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  475 |                 while ((id = read_varint30(f)) != 0)
      |                              ^~~~~~~~~~~~~
uidlist.c: In function 'getallgroups':
uidlist.c:587:16: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  587 |         size = gid_list->malloced;
      |                ^~~~~~~~
uidlist.c:601:27: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  601 |         gid_list->count = size;
      |                           ^~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c socket.c -o socket.o
In file included from rsync.h:1118,
                 from socket.c:27:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from socket.c:29:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
socket.c: In function 'establish_proxy_connection':
socket.c:62:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   62 |                 len = strlen(buffer);
      |                       ^~~~~~
socket.c:79:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   79 |         if (write(fd, buffer, len) != len) {
      |                               ^~~
socket.c: In function 'open_socket_out':
rsync.h:1356:59: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1356 | #define new_array0(type, num) ((type*)my_alloc(do_calloc, (num), sizeof (type), __FILE__, __LINE__))
      |                                                           ^~~~~
socket.c:251:18: note: in expansion of macro 'new_array0'
  251 |         errnos = new_array0(int, addr_cnt);
      |                  ^~~~~~~~~~
socket.c:272:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  272 |                         alarm(connect_timeout);
      |                               ^~~~~~~~~~~~~~~
socket.c: In function 'open_socket_out_wrapped':
socket.c:343:28: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  343 |                 int hlen = strlen(host);
      |                            ^~~~~~
socket.c:344:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  344 |                 int len = strlen(prog) + 1;
      |                           ^~~~~~
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
socket.c:356:24: note: in expansion of macro 'new_array'
  356 |                 prog = new_array(char, len);
      |                        ^~~~~~~~~
socket.c:364:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  364 |                                         memcpy(t, host, hlen);
      |                                                         ^~~~
socket.c: In function 'open_socket_in':
socket.c:422:37: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  422 |         socks = new_array(int, maxs + 1);
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
socket.c:423:19: note: in expansion of macro 'new_array'
  423 |         errmsgs = new_array(char *, maxs);
      |                   ^~~~~~~~~
socket.c:483:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  483 |                         rwrite(FLOG, errmsgs[s], strlen(errmsgs[s]), 0);
      |                                                  ^~~~~~~~~~~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c hashtable.c -o hashtable.o
In file included from rsync.h:1118,
                 from hashtable.c:20:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
hashtable.c: In function 'hashtable_create':
hashtable.c:39:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   39 |         tbl->nodes = new_array0(char, size * node_size);
rsync.h:1356:60: note: in definition of macro 'new_array0'
 1356 | #define new_array0(type, num) ((type*)my_alloc(do_calloc, (num), sizeof (type), __FILE__, __LINE__))
      |                                                            ^~~
hashtable.c:42:26: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   42 |         tbl->node_size = node_size;
      |                          ^~~~~~~~~
hashtable.c: In function 'hashtable_find':
hashtable.c:96:52: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   96 |                 tbl->nodes = new_array0(char, size * tbl->node_size);
      |                                                    ^
rsync.h:1356:60: note: in definition of macro 'new_array0'
 1356 | #define new_array0(type, num) ((type*)my_alloc(do_calloc, (num), sizeof (type), __FILE__, __LINE__))
      |                                                            ^~~
rsync.h:703:59: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  703 | #define HT_NODE(tbl, bkts, i) ((void*)((char*)(bkts) + (i)*(tbl)->node_size))
      |                                                           ^
hashtable.c:106:59: note: in expansion of macro 'HT_NODE'
  106 |                         struct ht_int32_node *move_node = HT_NODE(tbl, old_nodes, i);
      |                                                           ^~~~~~~
hashtable.c:126:32: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  126 |                 SIVALu(buf, 0, key);
      |                                ^~~
hashtable.c:163:21: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  163 |                 ndx &= tbl->size - 1;
      |                     ^~
gawk -f ./help-from-md.awk -v hfile=help-rsync.h ./rsync.1.md
gawk -f ./help-from-md.awk -v hfile=help-rsyncd.h ./rsync.1.md
./mkgitver
gawk -f ./define-from-md.awk -v hfile=default-cvsignore.h ./rsync.1.md
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c usage.c -o usage.o
In file included from rsync.h:1118,
                 from usage.c:20:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
usage.c: In function 'print_info_flags':
usage.c:167:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  167 |                 int str_len = str && *str != '*' ? strlen(str) : 1000;
      |                               ^~~
usage.c:179:73: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  179 |                 line_len += snprintf(line_buf+line_len, sizeof line_buf - line_len, " %s%s", str, need_comma ? "," : "");
      |                                                                         ^
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c fileio.c -o fileio.o
In file included from rsync.h:1118,
                 from fileio.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
fileio.c: In function 'write_sparse':
fileio.c:106:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  106 |         while ((ret = write(f, buf + l1, len - (l1+l2))) <= 0) {
      |                                          ~~~~^~~~~~~~~
fileio.c: In function 'flush_write_file':
fileio.c:136:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  136 |                 wf_writeBufCnt -= ret;
      |                                ^~
fileio.c: In function 'write_file':
fileio.c:163:75: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  163 |                                 memcpy(wf_writeBuf + wf_writeBufCnt, buf, r1);
      |                                                                           ^~
fileio.c:164:48: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  164 |                                 wf_writeBufCnt += r1;
      |                                                ^~
fileio.c: In function 'map_ptr':
rsync.h:1357:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                               ^~~~~
fileio.c:260:26: note: in expansion of macro 'realloc_array'
  260 |                 map->p = realloc_array(map->p, char, window_size);
      |                          ^~~~~~~~~~~~~
fileio.c:270:70: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  270 |                 memmove(map->p, map->p + (map->p_len - read_offset), read_offset);
      |                                                                      ^~~~~~~~~~~
fileio.c:296:67: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  296 |                 int32 nread = read(map->fd, map->p + read_offset, read_size);
      |                                                                   ^~~~~~~~~
fileio.c:302:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int32_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  302 |                         memset(map->p + read_offset, 0, read_size);
      |                                                         ^~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c batch.c -o batch.o
In file included from rsync.h:1118,
                 from batch.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
batch.c: In function 'write_arg':
batch.c:170:56: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  170 |                 err |= write(batch_sh_fd, arg, x - arg + 1) != x - arg + 1;
      |                                                ~~~~~~~~^~~
batch.c:177:60: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  177 |                         err |= write(batch_sh_fd, s, x - s + 1) != x - s + 1;
      |                                                      ~~~~~~^~~
batch.c:180:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  180 |                 len = strlen(s);
      |                       ^~~~~~
batch.c:181:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  181 |                 err |= write(batch_sh_fd, s, len) != len;
      |                                              ^~~
batch.c:186:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  186 |         len = strlen(arg);
      |               ^~~~~~
batch.c:187:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  187 |         err |= write(batch_sh_fd, arg, len) != len;
      |                                        ^~~
batch.c: In function 'write_opt':
batch.c:195:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  195 |         int len = strlen(opt);
      |                   ^~~~~~
batch.c:197:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  197 |         err = write(batch_sh_fd, opt, len) != len ? 1 : 0;
      |                                       ^~~
batch.c: In function 'write_batch_shell_file':
batch.c:292:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  292 |                 if (strncmp(p, "--write-batch", len = 13) == 0
      |                                                 ~~~~^~~~
batch.c:293:58: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  293 |                  || strncmp(p, "--only-write-batch", len = 18) == 0)
      |                                                      ~~~~^~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c clientname.c -o clientname.o
In file included from rsync.h:1118,
                 from clientname.c:29:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
clientname.c: In function 'read_proxy_protocol_header':
clientname.c:207:66: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  207 |                 read_buf(fd, (char*)&hdr + PROXY_V2_HEADER_SIZE, size);
      |                                                                  ^~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c chmod.c -o chmod.o
In file included from rsync.h:1118,
                 from chmod.c:21:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
chmod.c: In function 'parse_chmod':
chmod.c:77:55: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   77 |                                 bits = (where * what) & ~orig_umask;
      |                                                       ^
chmod.c:77:40: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   77 |                                 bits = (where * what) & ~orig_umask;
      |                                        ^
chmod.c:99:44: warning: conversion from 'int' to 'char' may change value [-Wconversion]
   99 |                         curr_mode->flags = flags;
      |                                            ^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c acls.c -o acls.o
In file included from rsync.h:1118,
                 from acls.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c xattrs.c -o xattrs.o
In file included from rsync.h:1118,
                 from xattrs.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from xattrs.c:23:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c progress.c -o progress.o
In file included from rsync.h:1118,
                 from progress.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
progress.c: In function 'msdiff':
progress.c:58:14: warning: conversion from 'long long int' to 'long unsigned int' may change value [-Wconversion]
   57 |         return (t2->tv_sec - t1->tv_sec) * 1000L
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 |              + (t2->tv_usec - t1->tv_usec) / 1000;
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
progress.c: In function 'rprint_progress':
progress.c:128:48: warning: conversion from 'off_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  128 |         pct = ofs == size ? 100 : (int) (100.0 * ofs / size);
      |                                                ^
progress.c:128:54: warning: conversion from 'off_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  128 |         pct = ofs == size ? 100 : (int) (100.0 * ofs / size);
      |                                                      ^
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c pipe.c -o pipe.o
In file included from rsync.h:1118,
                 from pipe.c:23:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c params.c -o params.o
In file included from rsync.h:1118,
                 from params.c:76:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from params.c:77:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
params.c: In function 'Section':
rsync.h:1357:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                               ^~~~~
params.c:214:16: note: in expansion of macro 'realloc_array'
  214 |       bufr   = realloc_array( bufr, char, bSize );
      |                ^~~~~~~~~~~~~
params.c:254:23: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  254 |           bufr[i++] = c;
      |                       ^
params.c: In function 'Parameter':
rsync.h:1357:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                               ^~~~~
params.c:303:16: note: in expansion of macro 'realloc_array'
  303 |       bufr   = realloc_array( bufr, char, bSize );
      |                ^~~~~~~~~~~~~
params.c:360:23: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  360 |           bufr[i++] = c;
      |                       ^
rsync.h:1357:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1357 | #define realloc_array(ptr, type, num) ((type*)my_alloc((ptr), (num), sizeof (type), __FILE__, __LINE__))
      |                                                               ^~~~~
params.c:374:16: note: in expansion of macro 'realloc_array'
  374 |       bufr   = realloc_array( bufr, char, bSize );
      |                ^~~~~~~~~~~~~
params.c:396:21: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  396 |         bufr[i++] = c;       /* not advance <end>.  This allows trimming  */
      |                     ^
params.c: In function 'pm_process':
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
params.c:626:12: note: in expansion of macro 'new_array'
  626 |     bufr = new_array( char, bSize );
      |            ^~~~~~~~~
gawk -f ./define-from-md.awk -v hfile=default-dont-compress.h ./rsync.1.md
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c loadparm.c -o loadparm.o
In file included from rsync.h:1118,
                 from loadparm.c:43:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from loadparm.c:45:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
loadparm.c: In function 'expand_vars':
loadparm.c:176:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  176 |         bufsize = strlen(str) + 2048;
      |                   ^~~~~~
loadparm.c:177:38: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  177 |         buf = new_array(char, bufsize+1); /* +1 for trailing '\0' */
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
loadparm.c:184:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  184 |                                 strlcpy(t, f+1, percent - f);
      |                                                 ~~~~~~~~^~~
loadparm.c:187:74: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  187 |                                         int len = strlcpy(t, val, bufsize+1);
      |                                                                   ~~~~~~~^~
loadparm.c:187:51: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  187 |                                         int len = strlcpy(t, val, bufsize+1);
      |                                                   ^~~~~~~
loadparm.c:207:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  207 |         if (bufsize && (buf = realloc(buf, t - buf + 1)) == NULL)
      |                                            ~~~~~~~~^~~
loadparm.c: In function 'getsectionbyname':
loadparm.c:311:18: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  311 |         for (i = section_list.count - 1; i >= 0; i--) {
      |                  ^~~~~~~~~~~~
loadparm.c: In function 'add_a_section':
loadparm.c:332:13: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  332 |         i = section_list.count;
      |             ^~~~~~~~~~~~
loadparm.c: In function 'do_parameter':
loadparm.c:446:35: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  446 |                         int len = strlen(cp);
      |                                   ^~~~~~
loadparm.c: In function 'lp_num_modules':
loadparm.c:575:28: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  575 |         return section_list.count;
      |                ~~~~~~~~~~~~^~~~~~
loadparm.c: In function 'lp_number':
loadparm.c:586:18: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  586 |         for (i = section_list.count - 1; i >= 0; i--) {
      |                  ^~~~~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c clientserver.c -o clientserver.o
In file included from rsync.h:1118,
                 from clientserver.c:22:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from clientserver.c:24:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
clientserver.c: In function 'exchange_protocols':
clientserver.c:164:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  164 |                                 int len = fread(buf, 1, bufsiz - 1, f);
      |                                           ^~~~~
clientserver.c:166:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  166 |                                         write_buf(f_out, buf, len);
      |                                                               ^~~
clientserver.c: In function 'start_inband_exchange':
clientserver.c:238:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  238 |                 modlen = strlen(*argv);
      |                          ^~~~~~
clientserver.c:242:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  242 |         modname = new_array(char, modlen+1+1); /* room for '/' & '\0' */
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
clientserver.c:243:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  243 |         strlcpy(modname, *argv, modlen + 1);
      |                                 ~~~~~~~^~~
clientserver.c:262:35: warning: conversion from '__off64_t' {aka 'long long int'} to 'int' may change value [-Wconversion]
  262 |                 early_input_len = st.st_size;
      |                                   ^~
clientserver.c:275:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  275 |                                 len = fread(line, 1, early_input_len, f);
      |                                                      ^~~~~~~~~~~~~~~
clientserver.c:275:39: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  275 |                                 len = fread(line, 1, early_input_len, f);
      |                                       ^~~~~
clientserver.c:277:64: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  277 |                                         write_buf(f_out, line, len);
      |                                                                ^~~
clientserver.c:301:45: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  301 |                 if (strncmp(*argv, modname, modlen) == 0 && argv[0][modlen] == '\0')
      |                                             ^~~~~~
clientserver.c:314:77: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  314 |                                 char *t = arg = new_array(char, strlen(arg) + extra_chars + 1);
      |                                                                             ^
rsync.h:1355:54: note: in definition of macro 'new_array'
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                      ^~~
clientserver.c:320:81: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  320 |                                         if (*f == ' ' && strncmp(f, line, modlen+2) == 0) {
      |                                                                           ~~~~~~^~
clientserver.c: In function 'write_pre_exec_args':
clientserver.c:573:50: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  573 |                 write_buf(write_fd, early_input, early_input_len);
      |                                                  ^~~~~~~~~~~~~~~
clientserver.c: In function 'finish_pre_exec':
clientserver.c:588:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  588 |                         if ((j = read(read_fd, bp, msglen)) <= 0) {
      |                                                    ^~~~~~
clientserver.c:604:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  604 |                                         memmove(cr, cr+1, j - (cr - bp));
      |                                                           ~~^~~~~~~~~~~
clientserver.c: In function 'namecvt_call':
clientserver.c:1214:50: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1214 |         while ((got = write(namecvt_fd_req, buf, len)) != len) {
      |                                                  ^~~
clientserver.c: In function 'start_daemon':
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
clientserver.c:1346:31: note: in expansion of macro 'new_array'
 1346 |                 early_input = new_array(char, early_input_len);
      |                               ^~~~~~~~~
clientserver.c:1347:45: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1347 |                 read_buf(f_in, early_input, early_input_len);
      |                                             ^~~~~~~~~~~~~~~
clientserver.c: In function 'create_pid_file':
clientserver.c:1428:48: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1428 |                 if (write(pid_file_fd, pidbuf, len) != len)
      |                                                ^~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c access.c -o access.o
In file included from rsync.h:1118,
                 from access.c:21:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from access.c:22:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
access.c: In function 'make_mask':
access.c:93:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   93 |                 memset(mask, 0xff, w);
      |                                    ^
access.c:97:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   97 |                 memset(mask+w+1, 0, addrlen-w-1);
      |                                     ~~~~~~~~~^~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c connection.c -o connection.o
In file included from rsync.h:1118,
                 from connection.c:21:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c authenticate.c -o authenticate.o
In file included from rsync.h:1118,
                 from authenticate.c:21:
byteorder.h: In function 'SIVALu':
byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
byteorder.h: In function 'SIVAL64':
byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
In file included from authenticate.c:23:
ifuncs.h: In function 'to_wire_mode':
ifuncs.h:52:16: warning: conversion to 'int' from 'mode_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         return mode;
      |                ^~~~
ifuncs.h: In function 'from_wire_mode':
ifuncs.h:62:16: warning: conversion to 'mode_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   62 |         return mode;
      |                ^~~~
ifuncs.h: In function 'my_strdup':
ifuncs.h:108:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |     int len = strlen(str)+1;
      |               ^~~~~~
ifuncs.h:109:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |     char *buf = my_alloc(NULL, len, 1, file, line);
      |                                ^~~
ifuncs.h:110:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  110 |     memcpy(buf, str, len);
      |                      ^~~
authenticate.c: In function 'gen_challenge':
authenticate.c:71:28: warning: conversion from '__time64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   71 |         SIVAL(input, 16, tv.tv_sec);
      |                          ~~^~~~~~~
authenticate.c:72:28: warning: conversion from '__suseconds64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   72 |         SIVAL(input, 20, tv.tv_usec);
      |                          ~~^~~~~~~~
authenticate.c:73:26: warning: conversion to 'uint32_t' {aka 'unsigned int'} from '__pid_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
   73 |         SIVAL(input, 24, getpid());
      |                          ^~~~~~~~
authenticate.c: In function 'generate_hash':
authenticate.c:90:24: warning: conversion to 'int32_t' {aka 'int'} from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   90 |         sum_update(in, strlen(in));
      |                        ^~~~~~~~~~
authenticate.c:91:31: warning: conversion to 'int32_t' {aka 'int'} from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   91 |         sum_update(challenge, strlen(challenge));
      |                               ^~~~~~~~~~~~~~~~~
authenticate.c: In function 'check_secret':
authenticate.c:107:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  107 |         int user_len = strlen(user);
      |                        ^~~~~~
authenticate.c:108:25: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |         int group_len = group ? strlen(group) : 0;
      |                         ^~~~~
authenticate.c:153:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  153 |                 if (!*ptr || strncmp(s, *ptr, len) != 0 || s[len] != ':')
      |                                               ^~~
authenticate.c: In function 'auth_server':
authenticate.c:261:34: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  261 |                         opt_ch = isUpper(opts) ? toLower(opts) : *opts;
      |                                  ^~~~~~~
authenticate.c:263:42: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  263 |                                 opt_ch = isUpper(opts+1) ? toLower(opts+1) : opts[1];
      |                                          ^~~~~~~
authenticate.c:289:63: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  289 |                                         auth_uid_groups_cnt = gid_list.count;
      |                                                               ^~~~~~~~
rsync.h:1355:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1355 | #define new_array(type, num) ((type*)my_alloc(NULL, (num), sizeof (type), __FILE__, __LINE__))
      |                                                     ^~~~~
authenticate.c:290:59: note: in expansion of macro 'new_array'
  290 |                                         auth_uid_groups = new_array(const char *, auth_uid_groups_cnt);
      |                                                           ^~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/wildmatch.c -o lib/wildmatch.o
In file included from ./rsync.h:1118,
                 from lib/wildmatch.c:12:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
lib/wildmatch.c: In function 'dowild':
lib/wildmatch.c:84:20: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   84 |             t_ch = tolower(t_ch);
      |                    ^~~~~~~
lib/wildmatch.c:180:33: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  180 |                     if (CC_EQ(s,i, "alnum")) {
      |                                 ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:183:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  183 |                     } else if (CC_EQ(s,i, "alpha")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:186:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  186 |                     } else if (CC_EQ(s,i, "blank")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:189:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  189 |                     } else if (CC_EQ(s,i, "cntrl")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:192:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  192 |                     } else if (CC_EQ(s,i, "digit")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:195:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  195 |                     } else if (CC_EQ(s,i, "graph")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:198:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  198 |                     } else if (CC_EQ(s,i, "lower")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:201:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  201 |                     } else if (CC_EQ(s,i, "print")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:204:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  204 |                     } else if (CC_EQ(s,i, "punct")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:207:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  207 |                     } else if (CC_EQ(s,i, "space")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:210:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  210 |                     } else if (CC_EQ(s,i, "upper")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
lib/wildmatch.c:213:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  213 |                     } else if (CC_EQ(s,i, "xdigit")) {
      |                                        ^
lib/wildmatch.c:25:72: note: in definition of macro 'CC_EQ'
   25 |                                     && strncmp((char*)class, litmatch, len) == 0)
      |                                                                        ^~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/compat.c -o lib/compat.o
In file included from ./rsync.h:1118,
                 from lib/compat.c:22:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
lib/compat.c: In function 'do_big_num':
lib/compat.c:210:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  210 |                 len = strlen(fract);
      |                       ^~~~~~
lib/compat.c:212:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  212 |                 strlcpy(s, fract, len + 1);
      |                                   ~~~~^~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/snprintf.c -o lib/snprintf.o
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/mdfour.c -o lib/mdfour.o
In file included from ./rsync.h:1118,
                 from lib/mdfour.c:23:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
lib/mdfour.c: In function 'copy4':
lib/mdfour.c:102:18: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
  102 |         out[3] = (x>>24)&0xFF;
      |                  ^
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/md5.c -o lib/md5.o
In file included from ./rsync.h:1118,
                 from lib/md5.c:21:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/permstring.c -o lib/permstring.o
In file included from ./rsync.h:1118,
                 from lib/permstring.c:23:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/pool_alloc.c -o lib/pool_alloc.o
In file included from ./rsync.h:1118,
                 from lib/pool_alloc.c:1:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
lib/pool_alloc.c: In function 'pool_stats':
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:353:9: note: in expansion of macro 'FDPRINT'
  353 |         FDPRINT("  Extent size:       %12ld\n", (long)  pool->size);
      |         ^~~~~~~
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:354:9: note: in expansion of macro 'FDPRINT'
  354 |         FDPRINT("  Alloc quantum:     %12ld\n", (long)  pool->quantum);
      |         ^~~~~~~
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:355:9: note: in expansion of macro 'FDPRINT'
  355 |         FDPRINT("  Extents created:   %12ld\n",         pool->e_created);
      |         ^~~~~~~
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:356:9: note: in expansion of macro 'FDPRINT'
  356 |         FDPRINT("  Extents freed:     %12ld\n",         pool->e_freed);
      |         ^~~~~~~
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:357:9: note: in expansion of macro 'FDPRINT'
  357 |         FDPRINT("  Alloc count:       %12.0f\n", (double) pool->n_allocated);
      |         ^~~~~~~
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:358:9: note: in expansion of macro 'FDPRINT'
  358 |         FDPRINT("  Free Count:        %12.0f\n", (double) pool->n_freed);
      |         ^~~~~~~
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:359:9: note: in expansion of macro 'FDPRINT'
  359 |         FDPRINT("  Bytes allocated:   %12.0f\n", (double) pool->b_allocated);
      |         ^~~~~~~
lib/pool_alloc.c:330:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  330 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:360:9: note: in expansion of macro 'FDPRINT'
  360 |         FDPRINT("  Bytes freed:       %12.0f\n", (double) pool->b_freed);
      |         ^~~~~~~
lib/pool_alloc.c:338:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  338 |                 if (write(fd, buf, len) != len) \
      |                                    ^~~
lib/pool_alloc.c:372:17: note: in expansion of macro 'FDEXTSTAT'
  372 |                 FDEXTSTAT(cur);
      |                 ^~~~~~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/sysacls.c -o lib/sysacls.o
In file included from ./rsync.h:1118,
                 from lib/sysacls.c:24:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -I. -I. -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -c lib/sysxattrs.c -o lib/sysxattrs.o
In file included from ./rsync.h:1118,
                 from lib/sysxattrs.c:22:
./byteorder.h: In function 'SIVALu':
./byteorder.h:50:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   50 |         CVAL(buf, pos)     = val;
      |                              ^~~
./byteorder.h:51:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   51 |         CVAL(buf, pos + 1) = val >> 8;
      |                              ^~~
./byteorder.h:52:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   52 |         CVAL(buf, pos + 2) = val >> 16;
      |                              ^~~
./byteorder.h:53:30: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
   53 |         CVAL(buf, pos + 3) = val >> 24;
      |                              ^~~
./byteorder.h: In function 'SIVAL64':
./byteorder.h:65:34: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   65 |         SIVALu((uchar*)buf, pos, val);
      |                                  ^~~
./byteorder.h:66:42: warning: conversion from 'int64_t' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
   66 |         SIVALu((uchar*)buf, pos + 4, val >> 32);
      |                                      ~~~~^~~~~
arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=   -Wconversion -Wno-error -DHAVE_CONFIG_H -Wall -W -Wno-unused-parameter -pedantic-errors -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/rsync-3.2.5=/usr/src/debug/rsync/3.2.5-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/rsync/3.2.5-r0/recipe-sysroot-native=  -Wl,-z,relro,-z,now -o rsync flist.o rsync.o generator.o receiver.o cleanup.o sender.o exclude.o util1.o util2.o main.o checksum.o match.o syscall.o log.o backup.o delete.o options.o io.o compat.o hlink.o token.o uidlist.o socket.o hashtable.o usage.o fileio.o batch.o clientname.o chmod.o acls.o xattrs.o progress.o pipe.o    params.o loadparm.o clientserver.o access.o connection.o authenticate.o lib/wildmatch.o lib/compat.o lib/snprintf.o lib/mdfour.o lib/md5.o lib/permstring.o lib/pool_alloc.o lib/sysacls.o lib/sysxattrs.o    -lz -lpopt 
sed 's;\@bindir\@;/usr/bin;g' <./stunnel-rsyncd.conf.in >stunnel-rsyncd.conf
DEBUG: Shell function do_compile finished
