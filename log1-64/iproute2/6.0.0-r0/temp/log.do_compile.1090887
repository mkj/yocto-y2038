DEBUG: Executing shell function do_compile
NOTE: make -j 1 CC=arm-openbmc-linux-gnueabi-gcc  -march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot KERNEL_INCLUDE=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include DOCDIR=/usr/share/doc/iproute2 SUBDIRS=lib tc ip bridge misc genl devlink tipc SBINDIR=/sbin LIBDIR=/usr/lib CCOPTS=  -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64 -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/iproute2-6.0.0=/usr/src/debug/iproute2/6.0.0-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/iproute2-6.0.0=/usr/src/debug/iproute2/6.0.0-r0  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/iproute2-6.0.0=/usr/src/debug/iproute2/6.0.0-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/iproute2-6.0.0=/usr/src/debug/iproute2/6.0.0-r0  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot=  -fmacro-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot=  -fdebug-prefix-map=/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot-native=   -Wconversion -Wno-error

lib
    CC       libgenl.o
libgenl.c: In function 'genl_parse_getfamily':
libgenl.c:18:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   18 |         int len = nlh->nlmsg_len;
      |                   ^~~
libgenl.c:27:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   27 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from libgenl.c:11:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
libgenl.c:27:16: note: in expansion of macro 'NLMSG_LENGTH'
   27 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
libgenl.c: In function 'genl_resolve_family':
libgenl.c:58:42: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   58 |                   family, strlen(family) + 1);
      |                           ~~~~~~~~~~~~~~~^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/libgenl.h:5,
                 from libgenl.c:12:
libgenl.c: In function 'genl_parse_grps':
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:220:27: note: in definition of macro 'RTA_OK'
  220 | #define RTA_OK(rta,len) ((len) >= (int)sizeof(struct rtattr) && \
      |                           ^~~
libgenl.c:75:9: note: in expansion of macro 'rtattr_for_each_nested'
   75 |         rtattr_for_each_nested(pos, attr) {
      |         ^~~~~~~~~~~~~~~~~~~~~~
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:222:45: note: in definition of macro 'RTA_OK'
  222 |                          (rta)->rta_len <= (len))
      |                                             ^~~
libgenl.c:75:9: note: in expansion of macro 'rtattr_for_each_nested'
   75 |         rtattr_for_each_nested(pos, attr) {
      |         ^~~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
libgenl.c:78:17: note: in expansion of macro 'parse_rtattr_nested'
   78 |                 parse_rtattr_nested(tb, CTRL_ATTR_MCAST_GRP_MAX, pos);
      |                 ^~~~~~~~~~~~~~~~~~~
libgenl.c: In function 'genl_add_mcast_grp':
libgenl.c:111:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  111 |         len = answer->nlmsg_len;
      |               ^~~~~~
libgenl.c:118:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  118 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
libgenl.c:118:16: note: in expansion of macro 'NLMSG_LENGTH'
  118 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
    CC       libnetlink.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from libnetlink.c:27:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from libnetlink.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from libnetlink.c:31:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
libnetlink.c: In function 'rtnl_open_byproto':
libnetlink.c:250:20: warning: conversion from 'time_t' {aka 'long long int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  250 |         rth->seq = time(NULL);
      |                    ^~~~
libnetlink.c: In function 'rtnl_nexthopdump_req':
libnetlink.c:274:34: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  274 |                 .nhm.nh_family = family,
      |                                  ^~~~~~
libnetlink.c: In function 'rtnl_nexthop_bucket_dump_req':
libnetlink.c:300:34: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  300 |                 .nhm.nh_family = family,
      |                                  ^~~~~~
libnetlink.c: In function 'rtnl_addrdump_req':
libnetlink.c:326:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  326 |                 .ifm.ifa_family = family,
      |                                   ^~~~~~
libnetlink.c: In function 'rtnl_addrlbldump_req':
libnetlink.c:350:37: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  350 |                 .ifal.ifal_family = family,
      |                                     ^~~~~~
libnetlink.c: In function 'rtnl_routedump_req':
libnetlink.c:368:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  368 |                 .rtm.rtm_family = family,
      |                                   ^~~~~~
libnetlink.c: In function 'rtnl_ruledump_req':
libnetlink.c:392:31: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  392 |                 .frh.family = family
      |                               ^~~~~~
libnetlink.c: In function 'rtnl_neighdump_req':
libnetlink.c:410:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  410 |                 .ndm.ndm_family = family,
      |                                   ^~~~~~
libnetlink.c: In function 'rtnl_neightbldump_req':
libnetlink.c:434:39: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  434 |                 .ndtmsg.ndtm_family = family,
      |                                       ^~~~~~
libnetlink.c: In function 'rtnl_mdbdump_req':
libnetlink.c:450:31: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  450 |                 .bpm.family = family,
      |                               ^~~~~~
libnetlink.c: In function 'rtnl_brvlandump_req':
libnetlink.c:467:31: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  467 |                 .bvm.family = family,
      |                               ^~~~~~
libnetlink.c: In function 'rtnl_netconfdump_req':
libnetlink.c:486:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  486 |                 .ncm.ncm_family = family,
      |                                   ^~~~~~
libnetlink.c: In function 'rtnl_nsiddump_req_filter_fn':
libnetlink.c:504:37: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  504 |                 .rtm.rtgen_family = family,
      |                                     ^~~~~~
libnetlink.c: In function '__rtnl_linkdump_req':
libnetlink.c:528:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  528 |                 .ifm.ifi_family = family,
      |                                   ^~~~~~
libnetlink.c: In function 'rtnl_linkdump_req_filter':
libnetlink.c:557:43: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  557 |                         .ifm.ifi_family = family,
      |                                           ^~~~~~
libnetlink.c: In function 'rtnl_linkdump_req_filter_fn':
libnetlink.c:582:43: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  582 |                         .ifm.ifi_family = family,
      |                                           ^~~~~~
libnetlink.c: In function 'rtnl_statsdump_req_filter':
libnetlink.c:636:27: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  636 |         req.ifsm.family = fam;
      |                           ^~~
libnetlink.c: In function 'rtnl_send':
libnetlink.c:652:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  652 |         return send(rth->fd, buf, len, 0);
      |                                   ^~~
libnetlink.c: In function 'rtnl_send_check':
libnetlink.c:661:37: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  661 |         status = send(rth->fd, buf, len, 0);
      |                                     ^~~
In file included from ../include/uapi/linux/rtnetlink.h:6,
                 from ../include/uapi/linux/fib_rules.h:6,
                 from libnetlink.c:25:
../include/uapi/linux/netlink.h:96:41: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   96 | #define NLMSG_NEXT(nlh,len)      ((len) -= NLMSG_ALIGN((nlh)->nlmsg_len), \
      |                                         ^~
libnetlink.c:674:18: note: in expansion of macro 'NLMSG_NEXT'
  674 |              h = NLMSG_NEXT(h, status)) {
      |                  ^~~~~~~~~~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:96:44: note: in expansion of macro 'NLMSG_ALIGN'
   96 | #define NLMSG_NEXT(nlh,len)      ((len) -= NLMSG_ALIGN((nlh)->nlmsg_len), \
      |                                            ^~~~~~~~~~~
libnetlink.c:674:18: note: in expansion of macro 'NLMSG_NEXT'
  674 |              h = NLMSG_NEXT(h, status)) {
      |                  ^~~~~~~~~~
libnetlink.c: In function 'rtnl_dump_request':
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
libnetlink.c:692:30: note: in expansion of macro 'NLMSG_LENGTH'
  692 |                 .nlmsg_len = NLMSG_LENGTH(len),
      |                              ^~~~~~~~~~~~
libnetlink.c:693:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  693 |                 .nlmsg_type = type,
      |                               ^~~~
libnetlink.c:700:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  700 |                 { .iov_base = req, .iov_len = len }
      |                                               ^~~
libnetlink.c: In function 'rtnl_recvmsg':
libnetlink.c:836:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  836 |         buf = malloc(len);
      |                      ^~~
libnetlink.c:843:24: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  843 |         iov->iov_len = len;
      |                        ^~~
libnetlink.c: In function 'rtnl_dump_filter_l':
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:884:40: note: in expansion of macro 'NLMSG_ALIGN'
  884 |                         fwrite(buf, 1, NLMSG_ALIGN(status), rth->dump_fp);
      |                                        ^~~~~~~~~~~
../include/uapi/linux/netlink.h:96:41: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   96 | #define NLMSG_NEXT(nlh,len)      ((len) -= NLMSG_ALIGN((nlh)->nlmsg_len), \
      |                                         ^~
libnetlink.c:934:37: note: in expansion of macro 'NLMSG_NEXT'
  934 |                                 h = NLMSG_NEXT(h, msglen);
      |                                     ^~~~~~~~~~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:96:44: note: in expansion of macro 'NLMSG_ALIGN'
   96 | #define NLMSG_NEXT(nlh,len)      ((len) -= NLMSG_ALIGN((nlh)->nlmsg_len), \
      |                                            ^~~~~~~~~~~
libnetlink.c:934:37: note: in expansion of macro 'NLMSG_NEXT'
  934 |                                 h = NLMSG_NEXT(h, msglen);
      |                                     ^~~~~~~~~~
libnetlink.c: In function '__rtnl_talk_iov':
libnetlink.c:1051:35: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1051 |                         int len = h->nlmsg_len;
      |                                   ^
libnetlink.c:1052:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1052 |                         int l = len - sizeof(*h);
      |                                     ^
libnetlink.c:1052:33: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1052 |                         int l = len - sizeof(*h);
      |                                 ^~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1070:43: note: in expansion of macro 'NLMSG_ALIGN'
 1070 |                                 status -= NLMSG_ALIGN(len);
      |                                           ^~~~~~~~~~~
libnetlink.c:1070:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1070 |                                 status -= NLMSG_ALIGN(len);
      |                                        ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
libnetlink.c:1070:43: note: in expansion of macro 'NLMSG_ALIGN'
 1070 |                                 status -= NLMSG_ALIGN(len);
      |                                           ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1071:69: note: in expansion of macro 'NLMSG_ALIGN'
 1071 |                                 h = (struct nlmsghdr *)((char *)h + NLMSG_ALIGN(len));
      |                                                                     ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1113:35: note: in expansion of macro 'NLMSG_ALIGN'
 1113 |                         status -= NLMSG_ALIGN(len);
      |                                   ^~~~~~~~~~~
libnetlink.c:1113:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1113 |                         status -= NLMSG_ALIGN(len);
      |                                ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
libnetlink.c:1113:35: note: in expansion of macro 'NLMSG_ALIGN'
 1113 |                         status -= NLMSG_ALIGN(len);
      |                                   ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1114:61: note: in expansion of macro 'NLMSG_ALIGN'
 1114 |                         h = (struct nlmsghdr *)((char *)h + NLMSG_ALIGN(len));
      |                                                             ^~~~~~~~~~~
libnetlink.c: In function 'rtnl_listen':
libnetlink.c:1239:35: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1239 |                         int len = h->nlmsg_len;
      |                                   ^
libnetlink.c:1240:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1240 |                         int l = len - sizeof(*h);
      |                                     ^
libnetlink.c:1240:33: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1240 |                         int l = len - sizeof(*h);
      |                                 ^~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1257:35: note: in expansion of macro 'NLMSG_ALIGN'
 1257 |                         status -= NLMSG_ALIGN(len);
      |                                   ^~~~~~~~~~~
libnetlink.c:1257:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1257 |                         status -= NLMSG_ALIGN(len);
      |                                ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
libnetlink.c:1257:35: note: in expansion of macro 'NLMSG_ALIGN'
 1257 |                         status -= NLMSG_ALIGN(len);
      |                                   ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1258:61: note: in expansion of macro 'NLMSG_ALIGN'
 1258 |                         h = (struct nlmsghdr *)((char *)h + NLMSG_ALIGN(len));
      |                                                             ^~~~~~~~~~~
libnetlink.c: In function 'rtnl_from_file':
libnetlink.c:1294:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1294 |                 len = h->nlmsg_len;
      |                       ^
libnetlink.c:1295:25: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1295 |                 l = len - sizeof(*h);
      |                         ^
libnetlink.c:1295:21: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1295 |                 l = len - sizeof(*h);
      |                     ^~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1303:50: note: in expansion of macro 'NLMSG_ALIGN'
 1303 |                 status = fread(NLMSG_DATA(h), 1, NLMSG_ALIGN(l), rtnl);
      |                                                  ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1305:31: note: in expansion of macro 'NLMSG_ALIGN'
 1305 |                 if (status != NLMSG_ALIGN(l)) {
      |                               ^~~~~~~~~~~
libnetlink.c: In function 'addattrstrz':
libnetlink.c:1346:59: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1346 |         return addattr_l(n, maxlen, type, str, strlen(str)+1);
      |                                                ~~~~~~~~~~~^~
libnetlink.c: In function 'addattr_l':
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
libnetlink.c:1352:19: note: in expansion of macro 'RTA_LENGTH'
 1352 |         int len = RTA_LENGTH(alen);
      |                   ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:225:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                         ^
libnetlink.c:1352:19: note: in expansion of macro 'RTA_LENGTH'
 1352 |         int len = RTA_LENGTH(alen);
      |                   ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:219:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                                ^
libnetlink.c:1355:41: note: in expansion of macro 'RTA_ALIGN'
 1355 |         if (NLMSG_ALIGN(n->nlmsg_len) + RTA_ALIGN(len) > maxlen) {
      |                                         ^~~~~~~~~
libnetlink.c:1362:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1362 |         rta->rta_type = type;
      |                         ^~~~
libnetlink.c:1363:24: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1363 |         rta->rta_len = len;
      |                        ^~~
libnetlink.c:1365:45: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1365 |                 memcpy(RTA_DATA(rta), data, alen);
      |                                             ^~~~
../include/uapi/linux/rtnetlink.h:219:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                                ^
libnetlink.c:1366:52: note: in expansion of macro 'RTA_ALIGN'
 1366 |         n->nlmsg_len = NLMSG_ALIGN(n->nlmsg_len) + RTA_ALIGN(len);
      |                                                    ^~~~~~~~~
libnetlink.c: In function 'addraw_l':
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1372:41: note: in expansion of macro 'NLMSG_ALIGN'
 1372 |         if (NLMSG_ALIGN(n->nlmsg_len) + NLMSG_ALIGN(len) > maxlen) {
      |                                         ^~~~~~~~~~~
libnetlink.c:1379:37: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1379 |         memcpy(NLMSG_TAIL(n), data, len);
      |                                     ^~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1380:49: note: in expansion of macro 'NLMSG_ALIGN'
 1380 |         memset((void *) NLMSG_TAIL(n) + len, 0, NLMSG_ALIGN(len) - len);
      |                                                 ^~~~~~~~~~~
libnetlink.c:1380:66: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1380 |         memset((void *) NLMSG_TAIL(n) + len, 0, NLMSG_ALIGN(len) - len);
      |                                                                  ^
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
libnetlink.c:1381:52: note: in expansion of macro 'NLMSG_ALIGN'
 1381 |         n->nlmsg_len = NLMSG_ALIGN(n->nlmsg_len) + NLMSG_ALIGN(len);
      |                                                    ^~~~~~~~~~~
libnetlink.c: In function 'addattr_nest_end':
libnetlink.c:1395:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1395 |         nest->rta_len = (void *)NLMSG_TAIL(n) - (void *)nest;
      |                         ^
libnetlink.c:1396:17: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1396 |         return n->nlmsg_len;
      |                ~^~~~~~~~~~~
libnetlink.c: In function 'addattr_nest_compat_end':
libnetlink.c:1413:26: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1413 |         start->rta_len = (void *)NLMSG_TAIL(n) - (void *)start;
      |                          ^
libnetlink.c:1415:17: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1415 |         return n->nlmsg_len;
      |                ~^~~~~~~~~~~
libnetlink.c: In function 'rta_addattr32':
libnetlink.c:1423:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1423 |         if (RTA_ALIGN(rta->rta_len) + len > maxlen) {
      |                                     ^
libnetlink.c:1430:28: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1430 |         subrta->rta_type = type;
      |                            ^~~~
libnetlink.c:1431:27: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1431 |         subrta->rta_len = len;
      |                           ^~~
libnetlink.c:1433:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1433 |         rta->rta_len = NLMSG_ALIGN(rta->rta_len) + len;
      |                                                  ^
../include/uapi/linux/netlink.h:91:26: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
libnetlink.c:1433:24: note: in expansion of macro 'NLMSG_ALIGN'
 1433 |         rta->rta_len = NLMSG_ALIGN(rta->rta_len) + len;
      |                        ^~~~~~~~~~~
libnetlink.c: In function 'rta_addattr_l':
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
libnetlink.c:1441:19: note: in expansion of macro 'RTA_LENGTH'
 1441 |         int len = RTA_LENGTH(alen);
      |                   ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:225:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                         ^
libnetlink.c:1441:19: note: in expansion of macro 'RTA_LENGTH'
 1441 |         int len = RTA_LENGTH(alen);
      |                   ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:219:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                                ^
libnetlink.c:1443:39: note: in expansion of macro 'RTA_ALIGN'
 1443 |         if (RTA_ALIGN(rta->rta_len) + RTA_ALIGN(len) > maxlen) {
      |                                       ^~~~~~~~~
libnetlink.c:1450:28: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1450 |         subrta->rta_type = type;
      |                            ^~~~
libnetlink.c:1451:27: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1451 |         subrta->rta_len = len;
      |                           ^~~
libnetlink.c:1453:48: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1453 |                 memcpy(RTA_DATA(subrta), data, alen);
      |                                                ^~~~
../include/uapi/linux/rtnetlink.h:219:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                                ^
libnetlink.c:1454:52: note: in expansion of macro 'RTA_ALIGN'
 1454 |         rta->rta_len = NLMSG_ALIGN(rta->rta_len) + RTA_ALIGN(len);
      |                                                    ^~~~~~~~~
../include/uapi/linux/netlink.h:91:26: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
libnetlink.c:1454:24: note: in expansion of macro 'NLMSG_ALIGN'
 1454 |         rta->rta_len = NLMSG_ALIGN(rta->rta_len) + RTA_ALIGN(len);
      |                        ^~~~~~~~~~~
libnetlink.c: In function 'rta_nest_end':
libnetlink.c:1485:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1485 |         nest->rta_len = (void *)RTA_TAIL(rta) - (void *)nest;
      |                         ^
libnetlink.c: In function 'parse_rtattr_flags':
libnetlink.c:1500:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1500 |         memset(tb, 0, sizeof(struct rtattr *) * (max + 1));
      |                                               ^
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
libnetlink.c:1505:23: note: in expansion of macro 'RTA_NEXT'
 1505 |                 rta = RTA_NEXT(rta, len);
      |                       ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
libnetlink.c:1505:23: note: in expansion of macro 'RTA_NEXT'
 1505 |                 rta = RTA_NEXT(rta, len);
      |                       ^~~~~~~~
libnetlink.c: In function 'parse_rtattr_one':
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
libnetlink.c:1518:23: note: in expansion of macro 'RTA_NEXT'
 1518 |                 rta = RTA_NEXT(rta, len);
      |                       ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
libnetlink.c:1518:23: note: in expansion of macro 'RTA_NEXT'
 1518 |                 rta = RTA_NEXT(rta, len);
      |                       ^~~~~~~~
libnetlink.c: In function '__parse_rtattr_nested_compat':
../include/uapi/linux/rtnetlink.h:219:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                                ^
libnetlink.c:1533:33: note: in expansion of macro 'RTA_ALIGN'
 1533 |         if (RTA_PAYLOAD(rta) >= RTA_ALIGN(len) + sizeof(struct rtattr)) {
      |                                 ^~~~~~~~~
../include/uapi/linux/rtnetlink.h:219:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                                ^
libnetlink.c:1534:39: note: in expansion of macro 'RTA_ALIGN'
 1534 |                 rta = RTA_DATA(rta) + RTA_ALIGN(len);
      |                                       ^~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
libnetlink.c:1535:24: note: in expansion of macro 'parse_rtattr_nested'
 1535 |                 return parse_rtattr_nested(tb, max, rta);
      |                        ^~~~~~~~~~~~~~~~~~~
libnetlink.c:1537:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1537 |         memset(tb, 0, sizeof(struct rtattr *) * (max + 1));
      |                                               ^
libnetlink.c: In function 'nl_print_policy':
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:220:27: note: in definition of macro 'RTA_OK'
  220 | #define RTA_OK(rta,len) ((len) >= (int)sizeof(struct rtattr) && \
      |                           ^~~
libnetlink.c:1569:9: note: in expansion of macro 'rtattr_for_each_nested'
 1569 |         rtattr_for_each_nested(pos, attr) {
      |         ^~~~~~~~~~~~~~~~~~~~~~
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:222:45: note: in definition of macro 'RTA_OK'
  222 |                          (rta)->rta_len <= (len))
      |                                             ^~~
libnetlink.c:1569:9: note: in expansion of macro 'rtattr_for_each_nested'
 1569 |         rtattr_for_each_nested(pos, attr) {
      |         ^~~~~~~~~~~~~~~~~~~~~~
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:220:27: note: in definition of macro 'RTA_OK'
  220 | #define RTA_OK(rta,len) ((len) >= (int)sizeof(struct rtattr) && \
      |                           ^~~
libnetlink.c:1574:17: note: in expansion of macro 'rtattr_for_each_nested'
 1574 |                 rtattr_for_each_nested(attr, pos) {
      |                 ^~~~~~~~~~~~~~~~~~~~~~
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:222:45: note: in definition of macro 'RTA_OK'
  222 |                          (rta)->rta_len <= (len))
      |                                             ^~~
libnetlink.c:1574:17: note: in expansion of macro 'rtattr_for_each_nested'
 1574 |                 rtattr_for_each_nested(attr, pos) {
      |                 ^~~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
libnetlink.c:1577:25: note: in expansion of macro 'parse_rtattr_nested'
 1577 |                         parse_rtattr_nested(tp, ARRAY_SIZE(tp) - 1, attr);
      |                         ^~~~~~~~~~~~~~~~~~~
libnetlink.c: In function 'rtnl_tunneldump_req':
libnetlink.c:1625:32: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1625 |                 .tmsg.family = family,
      |                                ^~~~~~
libnetlink.c:1627:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1627 |                 .tmsg.ifindex = ifindex,
      |                                 ^~~~~~~
    CC       mnl_utils.o
In file included from mnl_utils.c:14:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
mnl_utils.c: In function 'mnlu_msg_prepare':
mnl_utils.c:45:27: warning: conversion from 'uint32_t' {aka 'unsigned int'} to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   45 |         nlh->nlmsg_type = nlmsg_type;
      |                           ^~~~~~~~~~
mnl_utils.c:47:26: warning: conversion from 'time_t' {aka 'long long int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
   47 |         nlh->nlmsg_seq = time(NULL);
      |                          ^~~~
mnl_utils.c: In function 'mnlu_socket_recv_run':
mnl_utils.c:105:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  105 |                 err = mnl_cb_run2(buf, err, seq, portid,
      |                                        ^~~
mnl_utils.c: In function 'family_get':
mnl_utils.c:161:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
  161 |                                    MNL_SOCKET_BUFFER_SIZE,
      |                                    ^~~~~~~~~~~~~~~~~~~~~~
mnl_utils.c: In function 'mnlu_gen_socket_open':
mnl_utils.c:171:27: warning: conversion to 'size_t' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
  171 |         nlg->buf = malloc(MNL_SOCKET_BUFFER_SIZE);
      |                           ^~~~~~~~~~~~~~~~~~~~~~
mnl_utils.c: In function 'mnlu_gen_socket_sndrcv':
mnl_utils.c:233:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
  233 |                                    MNL_SOCKET_BUFFER_SIZE,
      |                                    ^~~~~~~~~~~~~~~~~~~~~~
mnl_utils.c: In function 'mnlu_gen_socket_recv_run':
mnl_utils.c:246:37: warning: conversion to 'size_t' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
  246 |                                     MNL_SOCKET_BUFFER_SIZE,
      |                                     ^~~~~~~~~~~~~~~~~~~~~~
    AR       libnetlink.a
    CC       utils.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ../include/uapi/linux/if_arp.h:27,
                 from utils.c:28:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from utils.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from utils.c:39:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
utils.c: In function 'mask2bits':
utils.c:161:16: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  161 |         return bits;
      |                ^~~~
utils.c: In function 'get_netmask':
utils.c:176:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  176 |                         *val = b;
      |                                ^
utils.c: In function 'get_time_rtt':
utils.c:268:16: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
  268 |         *val = t;
      |                ^
utils.c: In function 'get_u16':
utils.c:347:16: warning: conversion from 'long unsigned int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  347 |         *val = res;
      |                ^~~
utils.c: In function 'get_u8':
utils.c:371:16: warning: conversion from 'long unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  371 |         *val = res;
      |                ^~~
In file included from utils.c:20:
utils.c: In function 'get_be64':
../include/utils.h:294:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  294 | #define htonll(x) ((1==htonl(1)) ? (x) : ((uint64_t)htonl((x) & 0xFFFFFFFF) << 32) | htonl((x) >> 32))
      |                                                                                            ~~~~^~~~~
utils.c:423:24: note: in expansion of macro 'htonll'
  423 |                 *val = htonll(v);
      |                        ^~~~~~
utils.c: In function 'get_addr_ipv4':
utils.c:468:25: warning: conversion from 'long unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  468 |                 ap[i] = n;
      |                         ^
utils.c: In function 'get_addr64':
utils.c:501:36: warning: conversion from 'long unsigned int' to '__uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  501 |                 val.v16[i] = htons(n);
      |                                    ^
utils.c: In function '__get_addr_1':
utils.c:545:32: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  545 |                 addr->family = family;
      |                                ^~~~~~
utils.c:546:33: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  546 |                 addr->bytelen = af_byte_len(addr->family);
      |                                 ^~~~~~~~~~~
utils.c:556:32: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  556 |                 addr->family = family;
      |                                ^~~~~~
utils.c:571:33: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  571 |                 addr->bytelen = len;
      |                                 ^~~
utils.c:572:32: warning: conversion from 'int' to '__s16' {aka 'short int'} may change value [-Wconversion]
  572 |                 addr->bitlen = len * 8;
      |                                ^~~
utils.c:601:49: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  601 |                                 addr->bytelen = (i + 1)*4;
      |                                                 ^
utils.c: In function 'get_prefix_1':
utils.c:682:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  682 |                 bitlen = plen;
      |                          ^~~~
utils.c:688:23: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  688 |         dst->flags |= flags;
      |                       ^~~~~
utils.c:689:23: warning: conversion from 'int' to '__s16' {aka 'short int'} may change value [-Wconversion]
  689 |         dst->bitlen = bitlen;
      |                       ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
utils.c: In function 'get_addr_rta':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
utils.c:714:25: note: in expansion of macro 'RTA_PAYLOAD'
  714 |         const int len = RTA_PAYLOAD(rta);
      |                         ^~~~~~~~~~~
utils.c: In function 'get_ifname_rta':
utils.c:860:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  860 |                 name = ll_idx_n2a(ifindex);
      |                                   ^~~~~~~
utils.c: In function 'inet_addr_match':
utils.c:892:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  892 |                 if (memcmp(a1, a2, words << 2))
      |                                    ~~~~~~^~~~
utils.c: In function '__get_hz':
utils.c:951:38: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  951 |                                 hz = denom;
      |                                      ^~~~~
utils.c: In function 'rt_addr_n2a_r':
utils.c:972:49: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  972 |                 return inet_ntop(af, addr, buf, buflen);
      |                                                 ^~~~~~
utils.c:974:49: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  974 |                 return mpls_ntop(af, addr, buf, buflen);
      |                                                 ^~~~~~
utils.c:988:47: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  988 |                                          buf, buflen);
      |                                               ^~~~~~
utils.c:991:47: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  991 |                                          buf, buflen);
      |                                               ^~~~~~
utils.c: In function 'resolve_address':
utils.c:1070:48: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1070 |                     memcmp(n->addr.data, addr, len) == 0)
      |                                                ^~~
utils.c:1076:26: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 1076 |         n->addr.family = af;
      |                          ^~
utils.c:1077:27: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 1077 |         n->addr.bytelen = len;
      |                           ^~~
utils.c:1079:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1079 |         memcpy(n->addr.data, addr, len);
      |                                    ^~~
utils.c:1086:37: warning: conversion to '__socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1086 |         h_ent = gethostbyaddr(addr, len, af);
      |                                     ^~~
utils.c: In function 'hexstring_a2n':
utils.c:1152:30: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1152 |                 buf[cnt++] = tmp;
      |                              ^~~
utils.c: In function 'hex2mem':
utils.c:1172:26: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 1172 |                 mem[i] = c << 4;
      |                          ^
utils.c:1178:27: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 1178 |                 mem[i] |= c;
      |                           ^
utils.c: In function 'addr64_n2a':
utils.c:1202:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1202 |                 written += ret;
      |                         ^~
utils.c:1205:16: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1205 |         return written;
      |                ^~~~~~~
utils.c: In function 'print_timestamp':
utils.c:1234:38: warning: format '%ld' expects argument of type 'long int', but argument 4 has type '__suseconds64_t' {aka 'long long int'} [-Wformat=]
 1234 |                 fprintf(fp, "[%s.%06ld] ", tshort, tv.tv_usec);
      |                                  ~~~~^             ~~~~~~~~~~
      |                                      |               |
      |                                      long int        __suseconds64_t {aka long long int}
      |                                  %06lld
utils.c:1239:46: warning: format '%ld' expects argument of type 'long int', but argument 4 has type '__suseconds64_t' {aka 'long long int'} [-Wformat=]
 1239 |                 fprintf(fp, "Timestamp: %s %ld usec\n",
      |                                            ~~^
      |                                              |
      |                                              long int
      |                                            %lld
 1240 |                         tstr, tv.tv_usec);
      |                               ~~~~~~~~~~      
      |                                 |
      |                                 __suseconds64_t {aka long long int}
utils.c: In function 'print_name_and_link':
utils.c:1254:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1254 |                 int iflink = rta_getattr_u32(tb[IFLA_LINK]);
      |                              ^~~~~~~~~~~~~~~
utils.c:1262:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1262 |                                         link = ll_idx_n2a(iflink);
      |                                                           ^~~~~~
utils.c:1265:57: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1265 |                                 link = ll_index_to_name(iflink);
      |                                                         ^~~~~~
utils.c:1273:60: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1273 |                                 m_flag = ll_index_to_flags(iflink);
      |                                                            ^~~~~~
utils.c:1273:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1273 |                                 m_flag = ll_index_to_flags(iflink);
      |                                          ^~~~~~~~~~~~~~~~~
utils.c: In function 'print_nlmsg_timestamp':
utils.c:1394:22: warning: conversion to 'long int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1394 |         long usecs = ((__u32 *)NLMSG_DATA(n))[1];
      |                      ^
utils.c: In function 'get_rtnl_link_stats_rta':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
utils.c:1506:17: note: in expansion of macro 'parse_rtattr_nested'
 1506 |                 parse_rtattr_nested(ptb, IPSTATS_MIB_MAX_LEN,
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
utils.c:1515:15: note: in expansion of macro 'RTA_PAYLOAD'
 1515 |         len = RTA_PAYLOAD(rta);
      |               ^~~~~~~~~~~
utils.c:1517:41: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1517 |                 memset(s + len, 0, size - len);
      |                                    ~~~~~^~~~~
utils.c:1521:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1521 |         memcpy(s, RTA_DATA(rta), len);
      |                                  ^~~
utils.c: In function 'get_time':
utils.c:1604:17: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
 1604 |         *time = t;
      |                 ^
utils.c: In function 'print_time':
utils.c:1613:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1613 |                 snprintf(buf, len, "%.3gs", tmp/TIME_UNITS_PER_SEC);
      |                               ^~~
utils.c:1615:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1615 |                 snprintf(buf, len, "%.3gms", tmp/(TIME_UNITS_PER_SEC/1000));
      |                               ^~~
utils.c:1617:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1617 |                 snprintf(buf, len, "%uus", time);
      |                               ^~~
utils.c: In function 'get_time64':
utils.c:1657:17: warning: conversion from 'double' to '__s64' {aka 'long long int'} may change value [-Wfloat-conversion]
 1657 |         *time = nsec;
      |                 ^~~~
utils.c: In function 'print_time64':
utils.c:1663:23: warning: conversion from '__s64' {aka 'long long int'} to 'double' may change value [-Wconversion]
 1663 |         double nsec = time;
      |                       ^~~~
utils.c:1666:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1666 |                 snprintf(buf, len, "%.3gs", nsec/NSEC_PER_SEC);
      |                               ^~~
utils.c:1668:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1668 |                 snprintf(buf, len, "%.3gms", nsec/NSEC_PER_MSEC);
      |                               ^~~
utils.c:1670:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1670 |                 snprintf(buf, len, "%.3gus", nsec/NSEC_PER_USEC);
      |                               ^~~
utils.c:1672:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1672 |                 snprintf(buf, len, "%lldns", time);
      |                               ^~~
utils.c: In function 'str_map_lookup_str':
utils.c:1817:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1817 |                         return map->num;
      |                                ~~~^~~~~
utils.c: In function 'proto_n2a':
utils.c:1941:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1941 |         snprintf(buf, len, "[%d]", id);
      |                       ^~~
utils.c: In function 'proto_a2n':
utils.c:1953:48: warning: conversion from 'int' to '__uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1953 |                         *id = htons(proto_tb[i].id);
      |                                     ~~~~~~~~~~~^~~
    CC       utils_math.o
In file included from utils_math.c:9:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
utils_math.c: In function 'get_rate':
utils_math.c:58:17: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   58 |         *rate = bps;
      |                 ^~~
utils_math.c: In function 'get_rate64':
utils_math.c:86:17: warning: conversion from 'double' to '__u64' {aka 'long long unsigned int'} may change value [-Wfloat-conversion]
   86 |         *rate = bps;
      |                 ^~~
utils_math.c: In function 'get_size':
utils_math.c:116:17: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
  116 |         *size = sz;
      |                 ^~
    CC       rt_names.o
In file included from rt_names.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
rt_names.c: In function 'rtnl_hash_initialize':
rt_names.c:88:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   88 |                 entry->id   = id;
      |                               ^~
rt_names.c: In function 'rtnl_rtprot_n2a':
rt_names.c:187:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  187 |                 snprintf(buf, len, "%u", id);
      |                               ^~~
rt_names.c:196:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  196 |         snprintf(buf, len, "%u", id);
      |                       ^~~
rt_names.c: In function 'rtnl_rtprot_a2n':
rt_names.c:219:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 |                         res = i;
      |                               ^
rt_names.c: In function 'rtnl_rtscope_n2a':
rt_names.c:253:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  253 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rt_names.c:265:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  265 |         snprintf(buf, len, "%d", id);
      |                       ^~~
rt_names.c: In function 'rtnl_rtscope_a2n':
rt_names.c:288:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  288 |                         res = i;
      |                               ^
rt_names.c: In function 'rtnl_rtrealm_n2a':
rt_names.c:318:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  318 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rt_names.c:327:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  327 |         snprintf(buf, len, "%d", id);
      |                       ^~~
rt_names.c: In function 'rtnl_rtrealm_a2n':
rt_names.c:351:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  351 |                         res = i;
      |                               ^
rt_names.c: In function 'rtnl_rttable_initialize':
rt_names.c:386:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  386 |                         rtnl_rttable_hash[i]->id = i;
      |                                                    ^
rt_names.c: In function 'rtnl_rttable_n2a':
rt_names.c:427:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  427 |         snprintf(buf, len, "%u", id);
      |                       ^~~
rt_names.c: In function 'rtnl_dsfield_n2a':
rt_names.c:485:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  485 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rt_names.c:493:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  493 |         snprintf(buf, len, "0x%02x", id);
      |                       ^~~
rt_names.c: In function 'rtnl_dsfield_a2n':
rt_names.c:528:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  528 |                         res = i;
      |                               ^
rt_names.c: In function 'rtnl_group_a2n':
rt_names.c:568:23: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
  568 |                 *id = res;
      |                       ^~~
rt_names.c:582:31: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
  582 |                         *id = res;
      |                               ^~~
rt_names.c: In function 'rtnl_group_n2a':
rt_names.c:612:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  612 |         snprintf(buf, len, "%d", id);
      |                       ^~~
rt_names.c: In function 'nl_proto_n2a':
rt_names.c:652:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  652 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rt_names.c:662:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  662 |         snprintf(buf, len, "%u", id);
      |                       ^~~
rt_names.c: In function 'nl_proto_a2n':
rt_names.c:685:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  685 |                         res = i;
      |                               ^
rt_names.c: In function 'protodown_reason_n2a':
rt_names.c:743:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  743 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rt_names.c:751:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  751 |                 snprintf(buf, len, "%s", protodown_reason_tab[id]);
      |                               ^~~
rt_names.c:753:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  753 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rt_names.c: In function 'protodown_reason_a2n':
rt_names.c:777:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  777 |                         res = i;
      |                               ^
    CC       ll_map.o
In file included from ll_map.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
ll_map.c: In function 'll_entry_create':
ll_map.c:92:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   92 |         im->index = ifi->ifi_index;
      |                     ^~~
In file included from ../include/libnetlink.h:9,
                 from ll_map.c:22:
ll_map.c: In function 'll_altname_entries_create':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ll_map.c:142:15: note: in expansion of macro 'RTA_PAYLOAD'
  142 |         rem = RTA_PAYLOAD(proplist);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ll_map.c:144:18: note: in expansion of macro 'RTA_NEXT'
  144 |              i = RTA_NEXT(i, rem)) {
      |                  ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ll_map.c:144:18: note: in expansion of macro 'RTA_NEXT'
  144 |              i = RTA_NEXT(i, rem)) {
      |                  ^~~~~~~~
ll_map.c: In function 'll_altname_entries_update':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ll_map.c:178:15: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         rem = RTA_PAYLOAD(proplist);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ll_map.c:180:18: note: in expansion of macro 'RTA_NEXT'
  180 |              i = RTA_NEXT(i, rem)) {
      |                  ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ll_map.c:180:18: note: in expansion of macro 'RTA_NEXT'
  180 |              i = RTA_NEXT(i, rem)) {
      |                  ^~~~~~~~
ll_map.c: In function 'll_remember_index':
ll_map.c:236:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  236 |         im = ll_get_by_index(ifi->ifi_index);
      |                              ~~~^~~~~~~~~~~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:102:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  102 | #define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/if_link.h:391:25: note: in expansion of macro 'NLMSG_PAYLOAD'
  391 | #define IFLA_PAYLOAD(n) NLMSG_PAYLOAD(n,sizeof(struct ifinfomsg))
      |                         ^~~~~~~~~~~~~
ll_map.c:244:28: note: in expansion of macro 'IFLA_PAYLOAD'
  244 |                            IFLA_PAYLOAD(n), NLA_F_NESTED);
      |                            ^~~~~~~~~~~~
ll_map.c: In function 'll_link_get':
ll_map.c:293:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  293 |                           name, strlen(name) + 1);
      |                                 ~~~~~~~~~~~~~^~~
ll_map.c: In function 'll_index_to_name':
ll_map.c:324:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  324 |         if (ll_link_get(NULL, idx) == idx) {
      |                               ^~~
ll_map.c: In function 'll_index_to_flags':
ll_map.c:355:31: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  355 |         return im ? im->flags : -1;
      |                               ^
ll_map.c:355:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  355 |         return im ? im->flags : -1;
      |                ~~~~~~~~~~~~~~~^~~~
ll_map.c: In function 'll_name_to_index':
ll_map.c:370:15: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  370 |         idx = ll_link_get(name, 0);
      |               ^~~~~~~~~~~
    CC       ll_types.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ll_types.c:22:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ll_types.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ll_types.c:27:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
ll_types.c: In function 'll_type_n2a':
ll_types.c:120:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  120 |         snprintf(buf, len, "[%d]", type);
      |                       ^~~
    CC       ll_proto.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ll_proto.c:22:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ll_proto.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ll_proto.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       ll_addr.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ll_addr.c:22:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ll_addr.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ll_addr.c:27:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
ll_addr.c: In function 'll_addr_n2a':
ll_addr.c:38:54: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   38 |                 return inet_ntop(AF_INET, addr, buf, blen);
      |                                                      ^~~~
ll_addr.c:41:55: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   41 |                 return inet_ntop(AF_INET6, addr, buf, blen);
      |                                                       ^~~~
ll_addr.c:43:54: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return ax25_ntop(AF_AX25, addr, buf, blen);
      |                                                      ^~~~
ll_addr.c:45:58: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   45 |                 return netrom_ntop(AF_NETROM, addr, buf, blen);
      |                                                          ^~~~
ll_addr.c:47:54: warning: conversion to 'socklen_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   47 |                 return rose_ntop(AF_ROSE, addr, buf, blen);
      |                                                      ^~~~
ll_addr.c:49:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   49 |         snprintf(buf, blen, "%02x", addr[0]);
      |                       ^~~~
ll_addr.c:51:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   51 |                 snprintf(buf + l, blen - l, ":%02x", addr[i]);
      |                                   ~~~~~^~~
ll_addr.c: In function 'll_addr_a2n':
ll_addr.c:88:37: warning: conversion from 'int' to 'char' may change value [-Wconversion]
   88 |                         lladdr[i] = temp;
      |                                     ^~~~
    CC       inet_proto.o
In file included from inet_proto.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
inet_proto.c: In function 'inet_proto_n2a':
inet_proto.c:40:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   40 |                 strlcpy(buf, pe->p_name, len);
      |                                          ^~~
inet_proto.c:43:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |         snprintf(buf, len, "ipproto-%d", proto);
      |                       ^~~
    CC       namespace.o
In file included from namespace.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       json_writer.o
    CC       json_print.o
In file included from json_print.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
json_print.c: In function 'print_color_tv':
json_print.c:315:24: warning: conversion from '__suseconds64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  315 |         double usecs = tv->tv_usec;
      |                        ^~
json_print.c:316:23: warning: conversion from '__time64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  316 |         double secs = tv->tv_sec;
      |                       ^~
    CC       json_print_math.o
In file included from json_print_math.c:7:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       names.o
In file included from names.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
names.c: In function 'db_names_load':
names.c:100:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  100 |                 entry->id   = id;
      |                               ^~
names.c:101:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  101 |                 entry->next = db->hash[id & (db->size - 1)];
      |                                           ^
names.c:102:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  102 |                 db->hash[id & (db->size - 1)] = entry;
      |                             ^
names.c: In function 'id_to_name':
names.c:141:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  141 |         entry = db->hash[id & (db->size - 1)];
      |                             ^
    CC       color.o
In file included from ../include/uapi/linux/if.h:23,
                 from color.c:9:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from color.c:2:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from color.c:12:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       bpf_legacy.o
In file included from bpf_legacy.c:41:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netinet/in.h:23,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/arpa/inet.h:22,
                 from bpf_legacy.c:39:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24,
                 from bpf_legacy.c:44:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
bpf_legacy.c: In function 'bpf_map_update':
bpf_legacy.c:141:23: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  141 |         attr.map_fd = fd;
      |                       ^~
bpf_legacy.c: In function 'bpf_prog_info_by_fd':
bpf_legacy.c:164:28: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  164 |         attr.info.bpf_fd = fd;
      |                            ^~
bpf_legacy.c: In function 'bpf_dump_prog_info':
bpf_legacy.c:198:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  198 |                 print_uint(PRINT_JSON, "jited", NULL, jited);
      |                                                       ^~~~~
bpf_legacy.c: In function 'bpf_parse_string':
bpf_legacy.c:261:52: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  261 |                                         *(pos++) = c;
      |                                                    ^
bpf_legacy.c:265:44: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  265 |                                 *(pos++) = c;
      |                                            ^
bpf_legacy.c:266:42: warning: conversion from 'int' to 'char' may change value [-Wconversion]
  266 |                                 c_prev = c;
      |                                          ^
bpf_legacy.c: In function 'bpf_map_selfcheck_pinned':
bpf_legacy.c:472:32: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  472 |         if (!memcmp(&tmp, map, length)) {
      |                                ^~~~~~
bpf_legacy.c:480:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  480 |                 if (!memcmp(&tmp, &zero, length))
      |                                          ^~~~~~
bpf_legacy.c: In function 'bpf_find_mntpt_single':
bpf_legacy.c:551:37: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  551 |                 strlcpy(mnt, mntpt, len);
      |                                     ^~~
bpf_legacy.c: In function 'bpf_trace_pipe':
bpf_legacy.c:628:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'ssize_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  628 |                 if (ret > 0 && write(fd_out, buff, ret) == ret)
      |                                                    ^~~
bpf_legacy.c: In function 'bpf_prog_attach_fd':
bpf_legacy.c:1086:26: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1086 |         attr.target_fd = target_fd;
      |                          ^~~~~~~~~
bpf_legacy.c:1087:30: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1087 |         attr.attach_bpf_fd = prog_fd;
      |                              ^~~~~~~
bpf_legacy.c: In function 'bpf_prog_detach_fd':
bpf_legacy.c:1097:26: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1097 |         attr.target_fd = target_fd;
      |                          ^~~~~~~~~
bpf_legacy.c: In function 'bpf_map_create':
bpf_legacy.c:1276:29: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1276 |         attr.inner_map_fd = inner_fd;
      |                             ^~~~~~~~
bpf_legacy.c:1278:23: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1278 |         attr.btf_fd = btf_fd;
      |                       ^~~~~~
bpf_legacy.c: In function 'bpf_obj_pin':
bpf_legacy.c:1307:23: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1307 |         attr.bpf_fd = fd;
      |                       ^~
bpf_legacy.c: In function 'bpf_obj_hash':
bpf_legacy.c:1355:47: warning: conversion from '__off64_t' {aka 'long long int'} to 'size_t' {aka 'unsigned int'} may change value [-Wconversion]
 1355 |         size = sendfile(ofd, ffd, NULL, stbuff.st_size);
      |                                         ~~~~~~^~~~~~~~
bpf_legacy.c:1357:64: warning: format '%zu' expects argument of type 'size_t', but argument 4 has type '__off64_t' {aka 'long long int'} [-Wformat=]
 1357 |                 fprintf(stderr, "Error from sendfile (%zd vs %zu bytes): %s\n",
      |                                                              ~~^
      |                                                                |
      |                                                                unsigned int
      |                                                              %llu
 1358 |                         size, stbuff.st_size, strerror(errno));
      |                               ~~~~~~~~~~~~~~                    
      |                                     |
      |                                     __off64_t {aka long long int}
bpf_legacy.c: In function 'bpf_map_attach':
bpf_legacy.c:1681:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1681 |         ifindex = bpf_map_offload_neutral(map->type) ? 0 : ctx->ifindex;
      |                   ^~~~~~~~~~~~~~~~~~~~~~~
bpf_legacy.c:1685:29: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1685 |                             ifindex, ext->btf_id_key, ext->btf_id_val);
      |                             ^~~~~~~
bpf_legacy.c: In function 'bpf_map_fetch_name':
bpf_legacy.c:1801:34: warning: conversion to 'Elf64_Addr' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1801 |                     sym.st_value / ctx->map_len != which)
      |                                  ^
bpf_legacy.c: In function 'bpf_maps_attach_all':
bpf_legacy.c:1859:29: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1859 |                 inner_idx = ctx->maps[i].inner_idx;
      |                             ^~~
bpf_legacy.c:1871:55: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1871 |                                                       inner_idx);
      |                                                       ^~~~~~~~~
bpf_legacy.c: In function 'bpf_fill_section_data':
bpf_legacy.c:1912:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1912 |         sec_fd = elf_getscn(ctx->elf_fd, section);
      |                                          ^~~~~~~
bpf_legacy.c: In function 'bpf_fetch_maps_begin':
bpf_legacy.c:1944:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1944 |         ctx->map_num = data->sec_data->d_size;
      |                        ^~~~
bpf_legacy.c:1953:53: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1953 |         memcpy(ctx->maps, data->sec_data->d_buf, ctx->map_num);
      |                                                  ~~~^~~~~~~~~
bpf_legacy.c: In function 'bpf_fetch_maps_end':
bpf_legacy.c:2000:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2000 |             ctx->map_num % sizeof(__u32) != 0) {
      |                          ^
bpf_legacy.c:2029:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2029 |                 memcpy(&fixup[i], buff, ctx->map_len);
      |                                         ~~~^~~~~~~~~
bpf_legacy.c:2035:51: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2035 |                        sizeof(struct bpf_elf_map) - ctx->map_len);
      |                                                   ^
bpf_legacy.c: In function 'bpf_fetch_symtab':
bpf_legacy.c:2054:24: warning: conversion from 'Elf64_Xword' {aka 'long long unsigned int'} to 'int' may change value [-Wconversion]
 2054 |         ctx->sym_num = data->sec_hdr.sh_size / data->sec_hdr.sh_entsize;
      |                        ^~~~
bpf_legacy.c: In function 'bpf_btf_register_type':
bpf_legacy.c:2178:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2178 |         types = realloc(ctx->btf.types, num * sizeof(type));
      |                                             ^
bpf_legacy.c: In function 'bpf_apply_relo_map':
bpf_legacy.c:2394:33: warning: conversion from 'Elf64_Addr' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 2394 |         unsigned int insn_off = relo->r_offset / sizeof(struct bpf_insn);
      |                                 ^~~~
bpf_legacy.c:2395:46: warning: conversion to 'Elf64_Addr' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2395 |         unsigned int map_idx = sym->st_value / ctx->map_len;
      |                                              ^
bpf_legacy.c:2395:32: warning: conversion from 'Elf64_Addr' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 2395 |         unsigned int map_idx = sym->st_value / ctx->map_len;
      |                                ^~~
bpf_legacy.c: In function 'bpf_apply_relo_call':
bpf_legacy.c:2426:33: warning: conversion from 'Elf64_Addr' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 2426 |         unsigned int insn_off = relo->r_offset / sizeof(struct bpf_insn);
      |                                 ^~~~
bpf_legacy.c:2446:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2446 |                 props->main_num = prog->insns_num;
      |                                   ^~~~
bpf_legacy.c:2452:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2452 |         prog->insns[insn_off].imm += props->main_num - insn_off;
      |                                                      ^
bpf_legacy.c:2452:35: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
 2452 |         prog->insns[insn_off].imm += props->main_num - insn_off;
      |                                   ^~
bpf_legacy.c:2452:38: warning: conversion to '__s32' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2452 |         prog->insns[insn_off].imm += props->main_num - insn_off;
      |                                      ^~~~~
bpf_legacy.c: In function 'bpf_apply_relo_data':
bpf_legacy.c:2462:34: warning: conversion from 'Elf64_Xword' {aka 'long long unsigned int'} to 'int' may change value [-Wconversion]
 2462 |         int relo_ent, relo_num = rhdr->sh_size / rhdr->sh_entsize;
      |                                  ^~~~
bpf_legacy.c:2471:47: warning: conversion from 'Elf64_Xword' {aka 'long long unsigned int'} to 'int' may change value [-Wconversion]
 2471 |                 if (gelf_getsym(ctx->sym_tab, GELF_R_SYM(relo.r_info), &sym) != &sym)
      |                                               ^~~~~~~~~~
bpf_legacy.c: In function 'bpf_fetch_prog_relo':
bpf_legacy.c:2501:23: warning: conversion to 'int' from 'Elf64_Word' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2501 |                 idx = data_relo.sec_hdr.sh_info;
      |                       ^~~~~~~~~
bpf_legacy.c: In function 'bpf_get_cfg':
bpf_legacy.c:2862:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2862 |                         ctx->cfg.jit_enabled = atoi(tmp);
      |                                                ^~~~
bpf_legacy.c: In function 'bpf_map_set_send':
bpf_legacy.c:3032:32: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
 3032 |                 .aux.num_ent = entries,
      |                                ^~~~~~~
bpf_legacy.c:3047:60: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3047 |                 min_fd = min(BPF_SCM_MAX_FDS * 1U, entries - i);
      |                                                            ^
../include/utils.h:281:28: note: in definition of macro 'min'
  281 |         typeof(y) _min2 = (y);          \
      |                            ^
../include/utils.h:279:20: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  279 | # define min(x, y) ({                   \
      |                    ^
bpf_legacy.c:3047:26: note: in expansion of macro 'min'
 3047 |                 min_fd = min(BPF_SCM_MAX_FDS * 1U, entries - i);
      |                          ^~~
bpf_legacy.c:3050:68: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3050 |                 memcpy(cmsg_buf, &aux->fds[i], sizeof(aux->fds[0]) * min_fd);
      |                                                                    ^
bpf_legacy.c:3051:68: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3051 |                 memcpy(amsg_buf, &aux->ent[i], sizeof(aux->ent[0]) * min_fd);
      |                                                                    ^
bpf_legacy.c: In function 'bpf_map_set_recv':
bpf_legacy.c:3079:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3079 |                 min_fd = min(entries, entries - i);
      |                                               ^
../include/utils.h:281:28: note: in definition of macro 'min'
  281 |         typeof(y) _min2 = (y);          \
      |                            ^
../include/utils.h:279:20: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  279 | # define min(x, y) ({                   \
      |                    ^
bpf_legacy.c:3079:26: note: in expansion of macro 'min'
 3079 |                 min_fd = min(entries, entries - i);
      |                          ^~~
bpf_legacy.c:3094:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3094 |                 min_fd = (cmsg->cmsg_len - sizeof(*cmsg)) / sizeof(fd);
      |                          ^
bpf_legacy.c:3098:58: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3098 |                 memcpy(&fds[i], cmsg_buf, sizeof(fds[0]) * min_fd);
      |                                                          ^
bpf_legacy.c:3099:68: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3099 |                 memcpy(&aux->ent[i], amsg_buf, sizeof(aux->ent[0]) * min_fd);
      |                                                                    ^
bpf_legacy.c: In function 'bpf_send_map_fds':
bpf_legacy.c:3137:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3137 |                                bpf_maps_count(ctx));
      |                                ^~~~~~~~~~~~~~~~~~~
    CC       bpf_glue.o
In file included from ../include/bpf_util.h:23,
                 from bpf_glue.c:12:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netinet/in.h:23,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
    CC       exec.o
In file included from exec.c:7:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       fs.o
In file included from fs.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
fs.c: In function 'get_task_name':
fs.c:360:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  360 |         if (!fgets(name, len, f))
      |                          ^~~
    CC       cg_map.o
In file included from cg_map.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
cg_map.c: In function 'cg_init_map':
cg_map.c:101:18: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  101 |         mntlen = strlen(mnt);
      |                  ^~~~~~
    CC       ppp_proto.o
In file included from ppp_proto.c:11:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       ax25_ntop.o
In file included from ax25_ntop.c:7:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
ax25_ntop.c: In function 'ax25_ntop1':
ax25_ntop.c:59:16: warning: conversion from 'int' to 'char' may change value [-Wconversion]
   59 |         *s++ = n + '0';
      |                ^
    CC       rose_ntop.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from rose_ntop.c:14:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from rose_ntop.c:3:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from rose_ntop.c:20:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       mpls_ntop.o
In file included from mpls_ntop.c:9:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
mpls_ntop.c: In function 'mpls_ntop1':
mpls_ntop.c:30:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   30 |                 destlen -= len;
      |                         ^~
    CC       mpls_pton.o
In file included from mpls_pton.c:9:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       netrom_ntop.o
In file included from netrom_ntop.c:7:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    AR       libutil.a

tc
    CC       tc.o
In file included from tc.c:28:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc.c:29:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc.c:16:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from tc.c:21:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24,
                 from tc.c:33:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
    CC       tc_qdisc.o
In file included from tc_qdisc.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_qdisc.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_qdisc.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
tc_qdisc.c: In function 'tc_qdisc_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
tc_qdisc.c:63:34: note: in expansion of macro 'NLM_F_REQUEST'
   63 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
tc_qdisc.c:64:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   64 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
tc_qdisc.c:150:70: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  150 |                 addattr_l(&req.n, sizeof(req), TCA_KIND, k, strlen(k)+1);
      |                                                             ~~~~~~~~~^~
tc_qdisc.c:192:53: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  192 |                                   stab.szopts.tsize * sizeof(__u16));
      |                                   ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
tc_qdisc.c:203:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  203 |                 idx = ll_name_to_index(d);
      |                       ^~~~~~~~~~~~~~~~
tc_qdisc.c: In function 'print_qdisc':
tc_qdisc.c:223:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  223 |         int len = n->nlmsg_len;
      |                   ^
tc_qdisc.c:232:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  232 |         len -= NLMSG_LENGTH(sizeof(*t));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
tc_qdisc.c:232:16: note: in expansion of macro 'NLMSG_LENGTH'
  232 |         len -= NLMSG_LENGTH(sizeof(*t));
      |                ^~~~~~~~~~~~
tc_qdisc.c: In function 'tc_qdisc_list':
tc_qdisc.c:420:37: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  420 |                 req.t.tcm_ifindex = ll_name_to_index(d);
      |                                     ^~~~~~~~~~~~~~~~
tc_qdisc.c: In function 'tc_qdisc_block_exists_cb':
tc_qdisc.c:480:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  480 |         int len = n->nlmsg_len;
      |                   ^
tc_qdisc.c:488:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  488 |         len -= NLMSG_LENGTH(sizeof(*t));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
tc_qdisc.c:488:16: note: in expansion of macro 'NLMSG_LENGTH'
  488 |         len -= NLMSG_LENGTH(sizeof(*t));
      |                ^~~~~~~~~~~~
    CC       tc_class.o
In file included from tc_class.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_class.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_class.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
tc_class.c: In function 'tc_class_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
tc_class.c:65:34: note: in expansion of macro 'NLM_F_REQUEST'
   65 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
tc_class.c:66:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   66 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
tc_class.c:123:70: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  123 |                 addattr_l(&req.n, sizeof(req), TCA_KIND, k, strlen(k)+1);
      |                                                             ~~~~~~~~~^~
tc_class.c:146:37: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  146 |                 req.t.tcm_ifindex = ll_name_to_index(d);
      |                                     ^~~~~~~~~~~~~~~~
tc_class.c: In function 'graph_node_add':
tc_class.c:170:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  170 |                 node->data       = malloc(len);
      |                                           ^~~
tc_class.c:172:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  172 |                 memcpy(node->data, data, len);
      |                                          ^~~
tc_class.c: In function 'graph_cls_show':
tc_class.c:267:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  267 |                                 int cls_indent = strlen(q->id) - 2 +
      |                                                  ^~~~~~
tc_class.c: In function 'print_class':
tc_class.c:304:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  304 |         int len = n->nlmsg_len;
      |                   ^
tc_class.c:313:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  313 |         len -= NLMSG_LENGTH(sizeof(*t));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
tc_class.c:313:16: note: in expansion of macro 'NLMSG_LENGTH'
  313 |         len -= NLMSG_LENGTH(sizeof(*t));
      |                ^~~~~~~~~~~~
tc_class.c:350:58: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  350 |                 fprintf(fp, "dev %s ", ll_index_to_name(t->tcm_ifindex));
      |                                                         ~^~~~~~~~~~~~~
tc_class.c: In function 'tc_class_list':
tc_class.c:443:33: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  443 |                 t.tcm_ifindex = ll_name_to_index(d);
      |                                 ^~~~~~~~~~~~~~~~
    CC       tc_filter.o
In file included from tc_filter.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_filter.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_filter.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
tc_filter.c: In function 'tc_filter_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
tc_filter.c:69:34: note: in expansion of macro 'NLM_F_REQUEST'
   69 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
tc_filter.c:70:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   70 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
tc_filter.c:192:70: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  192 |                 addattr_l(&req.n, sizeof(req), TCA_KIND, k, strlen(k)+1);
      |                                                             ~~~~~~~~~^~
tc_filter.c:197:37: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  197 |                 req.t.tcm_ifindex = ll_name_to_index(d);
      |                                     ^~~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:619:33: warning: signed conversion from 'unsigned int' to 'int' changes value from '4294967295' to '-1' [-Wsign-conversion]
  619 | #define TCM_IFINDEX_MAGIC_BLOCK (0xFFFFFFFFU)
      |                                 ^
tc_filter.c:203:37: note: in expansion of macro 'TCM_IFINDEX_MAGIC_BLOCK'
  203 |                 req.t.tcm_ifindex = TCM_IFINDEX_MAGIC_BLOCK;
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~
tc_filter.c: In function 'print_filter':
tc_filter.c:250:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  250 |         int len = n->nlmsg_len;
      |                   ^
tc_filter.c:264:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  264 |         len -= NLMSG_LENGTH(sizeof(*t));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
tc_filter.c:264:16: note: in expansion of macro 'NLMSG_LENGTH'
  264 |         len -= NLMSG_LENGTH(sizeof(*t));
      |                ^~~~~~~~~~~~
tc_filter.c: In function 'tc_filter_get':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
tc_filter.c:393:34: note: in expansion of macro 'NLM_F_REQUEST'
  393 |                 .n.nlmsg_flags = NLM_F_REQUEST | NLM_F_ECHO | flags,
      |                                  ^~~~~~~~~~~~~
tc_filter.c:394:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  394 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
tc_filter.c:532:78: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  532 |                         addattr_l(&req.n, sizeof(req), TCA_KIND, k, strlen(k)+1);
      |                                                                     ~~~~~~~~~^~
tc_filter.c:542:37: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  542 |                 req.t.tcm_ifindex = ll_name_to_index(d);
      |                                     ^~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:619:33: warning: signed conversion from 'unsigned int' to 'int' changes value from '4294967295' to '-1' [-Wsign-conversion]
  619 | #define TCM_IFINDEX_MAGIC_BLOCK (0xFFFFFFFFU)
      |                                 ^
tc_filter.c:547:37: note: in expansion of macro 'TCM_IFINDEX_MAGIC_BLOCK'
  547 |                 req.t.tcm_ifindex = TCM_IFINDEX_MAGIC_BLOCK;
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~
tc_filter.c: In function 'tc_filter_list':
tc_filter.c:594:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  594 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
tc_filter.c:707:37: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  707 |                 req.t.tcm_ifindex = ll_name_to_index(d);
      |                                     ^~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:619:33: warning: signed conversion from 'unsigned int' to 'int' changes value from '4294967295' to '-1' [-Wsign-conversion]
  619 | #define TCM_IFINDEX_MAGIC_BLOCK (0xFFFFFFFFU)
      |                                 ^
tc_filter.c:716:37: note: in expansion of macro 'TCM_IFINDEX_MAGIC_BLOCK'
  716 |                 req.t.tcm_ifindex = TCM_IFINDEX_MAGIC_BLOCK;
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~
    CC       tc_util.o
In file included from tc_util.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_util.c:27:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_util.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
tc_util.c: In function 'print_tc_classid':
tc_util.c:138:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  138 |                 snprintf(handle, hlen, "none");
      |                                  ^~~~
tc_util.c:140:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  140 |                 snprintf(handle, hlen, ":%x", TC_H_MIN(h));
      |                                  ^~~~
tc_util.c:142:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  142 |                 snprintf(handle, hlen, "%x:", TC_H_MAJ(h) >> 16);
      |                                  ^~~~
tc_util.c:144:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  144 |                 snprintf(handle, hlen, "%x:%x", TC_H_MAJ(h) >> 16, TC_H_MIN(h));
      |                                  ^~~~
tc_util.c:149:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  149 |                 if (id_to_name(cls_names, h, clname))
      |                                           ^
tc_util.c:150:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  150 |                         snprintf(buf, blen, "%s#%s", clname, handle);
      |                                       ^~~~
tc_util.c:152:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  152 |                         snprintf(buf, blen, "%s", handle);
      |                                       ^~~~
tc_util.c:154:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  154 |                 snprintf(buf, blen, "%s", handle);
      |                               ^~~~
tc_util.c: In function 'print_devname':
tc_util.c:293:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  293 |         const char *ifname = ll_index_to_name(ifindex);
      |                                               ^~~~~~~
tc_util.c: In function '__parse_action_control':
tc_util.c:404:24: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  404 |                 result |= chain_index;
      |                        ^~
tc_util.c:404:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  404 |                 result |= chain_index;
      |                           ^~~~~~~~~~~
tc_util.c:415:24: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  415 |                 result |= jump_cnt;
      |                        ^~
tc_util.c:415:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  415 |                 result |= jump_cnt;
      |                           ^~~~~~~~
tc_util.c: In function 'get_linklayer':
tc_util.c:568:16: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  568 |         *val = res;
      |                ^~~
tc_util.c: In function 'print_linklayer':
tc_util.c:576:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  576 |                 snprintf(buf, len, "%s", "unspec");
      |                               ^~~
tc_util.c:579:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  579 |                 snprintf(buf, len, "%s", "ethernet");
      |                               ^~~
tc_util.c:582:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  582 |                 snprintf(buf, len, "%s", "atm");
      |                               ^~~
tc_util.c:585:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  585 |                 snprintf(buf, len, "%s", "unknown");
      |                               ^~~
tc_util.c: In function 'print_tm':
tc_util.c:602:40: warning: conversion to '__u64' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  602 |                            tm->install / hz);
      |                                        ^
tc_util.c:602:40: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  602 |                            tm->install / hz);
      |                            ~~~~~~~~~~~~^~~~
tc_util.c:606:40: warning: conversion to '__u64' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  606 |                            tm->lastuse / hz);
      |                                        ^
tc_util.c:606:40: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  606 |                            tm->lastuse / hz);
      |                            ~~~~~~~~~~~~^~~~
tc_util.c:610:41: warning: conversion to '__u64' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  610 |                            tm->firstuse / hz);
      |                                         ^
tc_util.c:610:41: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  610 |                            tm->firstuse / hz);
      |                            ~~~~~~~~~~~~~^~~~
tc_util.c:614:40: warning: conversion to '__u64' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  614 |                            tm->expires / hz);
      |                                        ^
tc_util.c:614:40: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  614 |                            tm->expires / hz);
      |                            ~~~~~~~~~~~~^~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
tc_util.c: In function 'print_tcstats2_attr':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
tc_util.c:659:9: note: in expansion of macro 'parse_rtattr_nested'
  659 |         parse_rtattr_nested(tbs, TCA_STATS_MAX, rta);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       tc_monitor.o
In file included from tc_monitor.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_monitor.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_monitor.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       tc_exec.o
In file included from tc_exec.c:16:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_exec.c:18:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_exec.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       m_police.o
In file included from m_police.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_police.c:26:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_police.c:16:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_police.c: In function 'act_parse_police':
m_police.c:213:31: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  213 |                 p.rate.rate = (rate64 >= (1ULL << 32)) ? ~0U : rate64;
      |                               ^
m_police.c:214:30: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  214 |                 p.rate.mpu = mpu;
      |                              ^~~
m_police.c:225:35: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  225 |                 p.peakrate.rate = (prate64 >= (1ULL << 32)) ? ~0U : prate64;
      |                                   ^
m_police.c:226:34: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  226 |                 p.peakrate.mpu = mpu;
      |                                  ^~~
m_police.c:250:58: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  250 |                 addattr32(n, MAX_MSG, TCA_POLICE_RESULT, presult);
      |                                                          ^~~~~~~
m_police.c:254:54: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  254 |                 ppsburst64 = tc_calc_xmittime(pps64, ppsburst64);
      |                                                      ^~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_police.c: In function 'print_police':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_police.c:285:9: note: in expansion of macro 'parse_rtattr_nested'
  285 |         parse_rtattr_nested(tb, TCA_POLICE_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
m_police.c:331:54: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  331 |                 ppsburst64 = tc_calc_xmitsize(pps64, ppsburst64);
      |                                                      ^~~~~~~~~~
m_police.c:341:46: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  341 |                 print_action_control(f, "/", action, " ");
      |                                              ^~~~~~
    CC       m_estimator.o
In file included from m_estimator.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_estimator.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_estimator.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       m_action.o
In file included from m_action.c:27:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_action.c:29:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_action.c:16:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_action.c: In function 'print_hw_stats':
m_action.c:169:20: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  169 |         hw_stats = hw_stats_bf->value & hw_stats_bf->selector;
      |                    ^~~~~~~~~~~
m_action.c: In function 'parse_action':
m_action.c:272:74: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  272 |                         addattr_l(n, MAX_MSG, TCA_ACT_KIND, k, strlen(k) + 1);
      |                                                                ~~~~~~~~~~^~~
m_action.c:298:65: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  298 |                                     hex2mem(*argv, act_ck, slen / 2) < 0)
      |                                                            ~~~~~^~~
m_action.c:302:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  302 |                                 act_ck_len = slen / 2;
      |                                              ^~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_action.c: In function 'tc_print_one_action':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_action.c:377:9: note: in expansion of macro 'parse_rtattr_nested'
  377 |         parse_rtattr_nested(tb, TCA_ACT_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_action.c:408:29: note: in expansion of macro 'RTA_PAYLOAD'
  408 |                 int strsz = RTA_PAYLOAD(tb[TCA_ACT_COOKIE]);
      |                             ^~~~~~~~~~~
m_action.c:413:61: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  413 |                                            strsz, b1, sizeof(b1)));
      |                                                       ~~~~~~^~~~
m_action.c: In function 'tc_print_action_flush':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_action.c:481:9: note: in expansion of macro 'parse_rtattr_nested'
  481 |         parse_rtattr_nested(tb, TCA_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
m_action.c: In function 'tc_dump_action':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_action.c:513:9: note: in expansion of macro 'parse_rtattr_nested'
  513 |         parse_rtattr_nested(tb, tot_acts, arg);
      |         ^~~~~~~~~~~~~~~~~~~
m_action.c:524:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  524 |                                    "\taction order %u: ", i);
      |                                                           ^
m_action.c: In function 'print_action':
m_action.c:546:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  546 |         int len = n->nlmsg_len;
      |                   ^
m_action.c:550:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  550 |         len -= NLMSG_LENGTH(sizeof(*t));
      |             ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
m_action.c:550:16: note: in expansion of macro 'NLMSG_LENGTH'
  550 |         len -= NLMSG_LENGTH(sizeof(*t));
      |                ^~~~~~~~~~~~
m_action.c:592:65: warning: conversion from '__u32' {aka 'unsigned int'} to 'short unsigned int' may change value [-Wconversion]
  592 |         tc_dump_action(fp, tb[TCA_ACT_TAB], tot_acts ? *tot_acts:0, false);
      |                                             ~~~~~~~~~~~~~~~~~~~~^~
m_action.c: In function 'tc_action_gd':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
m_action.c:618:34: note: in expansion of macro 'NLM_F_REQUEST'
  618 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
m_action.c:619:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  619 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
m_action.c:677:71: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  677 |                 addattr_l(&req.n, MAX_MSG, TCA_ACT_KIND, k, strlen(k) + 1);
      |                                                             ~~~~~~~~~~^~~
m_action.c: In function 'tc_action_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
m_action.c:724:34: note: in expansion of macro 'NLM_F_REQUEST'
  724 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
m_action.c:725:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  725 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
m_action.c:736:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  736 |         tail->rta_len = (void *) NLMSG_TAIL(&req.n) - (void *) tail;
      |                         ^
m_action.c: In function 'tc_act_list_or_flush':
m_action.c:798:63: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  798 |         addattr_l(&req.n, MAX_MSG, TCA_ACT_KIND, k, strlen(k) + 1);
      |                                                     ~~~~~~~~~~^~~
m_action.c:799:26: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  799 |         tail2->rta_len = (void *) NLMSG_TAIL(&req.n) - (void *) tail2;
      |                          ^
m_action.c:811:26: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  811 |         tail3->rta_len = (void *) NLMSG_TAIL(&req.n) - (void *) tail3;
      |                          ^
m_action.c:815:34: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  815 |                 tail4->rta_len = (void *) NLMSG_TAIL(&req.n) - (void *) tail4;
      |                                  ^
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
m_action.c:817:20: note: in expansion of macro 'NLMSG_ALIGN'
  817 |         msg_size = NLMSG_ALIGN(req.n.nlmsg_len)
      |                    ^~~~~~~~~~~
    CC       m_ematch.o
In file included from m_ematch.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_ematch.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from m_ematch.c:26:
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
m_ematch.c: In function 'lookup_map':
m_ematch.c:79:59: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   79 |                                 strncpy(dst, namebuf, len - 1);
      |                                                       ~~~~^~~
m_ematch.c: In function 'em_parse_call':
m_ematch.c:184:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  184 |                 argv = calloc(argc, sizeof(char *));
      |                               ^~~~
m_ematch.c: In function 'parse_tree':
m_ematch.c:206:56: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  206 |                 struct tcf_ematch_hdr hdr = { .flags = t->relation };
      |                                                        ^
m_ematch.c:214:35: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  214 |                         __u32 r = t->child_ref;
      |                                   ^
m_ematch.c:241:36: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  241 |                         hdr.kind = num;
      |                                    ^~~
m_ematch.c: In function 'parse_ematch':
m_ematch.c:368:37: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  368 |                         .nmatches = flatten_tree(ematch_root, ematch_root),
      |                                     ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_ematch.c: In function 'print_ematch_seq':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_ematch.c:402:24: note: in expansion of macro 'RTA_PAYLOAD'
  402 |                 dlen = RTA_PAYLOAD(tb[i]) - sizeof(*hdr);
      |                        ^~~~~~~~~~~
m_ematch.c:423:58: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  423 |                         if (print_ematch_seq(fd, tb, ref + 1, prefix + 1) < 0)
      |                                                      ~~~~^~~
m_ematch.c: In function 'print_ematch_list':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_ematch.c:477:21: note: in expansion of macro 'parse_rtattr_nested'
  477 |                 if (parse_rtattr_nested(tb, hdr->nmatches, rta) < 0)
      |                     ^~~~~~~~~~~~~~~~~~~
m_ematch.c: In function 'print_ematch':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_ematch.c:496:13: note: in expansion of macro 'parse_rtattr_nested'
  496 |         if (parse_rtattr_nested(tb, TCA_EMATCH_TREE_MAX, rta) < 0)
      |             ^~~~~~~~~~~~~~~~~~~
    YACC     emp_ematch.tab.c
    CC       emp_ematch.tab.o
In file included from m_ematch.h:10,
                 from emp_ematch.y:6:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.h:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from emp_ematch.y:2:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
emp_ematch.y: In function 'ematch_parse':
emp_ematch.y:47:51: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   47 |                         $1->relation = $2;
      |                                                   ^
emp_ematch.y:57:73: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   57 |                         $$ = new_ematch($2, $1);
      |                                                                         ^  
emp_ematch.y:63:64: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   63 |                         $$ = new_ematch(NULL, $1);
      |                                                                ^  
    LEX      emp_ematch.lex.c
    CC       emp_ematch.lex.o
In file included from m_ematch.h:10,
                 from emp_ematch.l:4:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.h:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from emp_ematch.lex.c:278:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
emp_ematch.l: In function 'ematch_lex':
emp_ematch.l:138:65: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  138 |                                                 return yylval.i = *yytext;
emp_ematch.lex.c: In function 'yy_get_next_buffer':
emp_ematch.l:27:34: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   27 |                         result = strlen(*ematch_argv) + 1;              \
      |                                  ^~~~~~
emp_ematch.lex.c:1481:17: note: in expansion of macro 'YY_INPUT'
 1481 |                 /* Read in more data. */
      |                 ^~~~~~~~
    CC       q_fifo.o
In file included from q_fifo.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_fifo.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_fifo.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       q_sfq.o
In file included from q_sfq.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_sfq.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_sfq.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_sfq.c: In function 'sfq_parse_opt':
q_sfq.c:188:28: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  188 |                 opt.Wlog = wlog;
      |                            ^~~~
q_sfq.c:195:28: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  195 |                 opt.Plog = wlog;
      |                            ^~~~
q_sfq.c:196:29: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  196 |                 opt.max_P = probability * pow(2, 32);
      |                             ^~~~~~~~~~~
    CC       q_red.o
In file included from q_red.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_red.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_red.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_red.c: In function 'red_parse_opt':
q_red.c:164:20: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  164 |         opt.Wlog = parm;
      |                    ^~~~
q_red.c:169:20: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  169 |         opt.Plog = parm;
      |                    ^~~~
q_red.c:174:25: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  174 |         opt.Scell_log = parm;
      |                         ^~~~
q_red.c:179:17: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  179 |         max_P = probability * pow(2, 32);
      |                 ^~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_red.c: In function 'red_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_red.c:198:9: note: in expansion of macro 'parse_rtattr_nested'
  198 |         parse_rtattr_nested(tb, TCA_RED_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_red.c:213:31: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
  213 |                 qopt->flags = flags_bf->value;
      |                               ^~~~~~~~
q_red.c: In function 'red_has_block':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_red.c:267:9: note: in expansion of macro 'parse_rtattr_nested'
  267 |         parse_rtattr_nested(tb, TCA_RED_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_prio.o
In file included from q_prio.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_prio.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_prio.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_prio.c: In function 'prio_parse_opt':
q_prio.c:79:46: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
   79 |                         opt.priomap[idx++] = band;
      |                                              ^~~~
q_prio.c: In function 'prio_print_opt':
q_prio.c:110:57: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  110 |         print_uint(PRINT_ANY, "bands", "bands %u ", qopt->bands);
      |                                                     ~~~~^~~~~~~
    CC       q_skbprio.o
In file included from q_skbprio.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_skbprio.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_skbprio.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       q_tbf.o
In file included from q_tbf.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_tbf.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_tbf.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_tbf.c: In function 'tbf_parse_opt':
q_tbf.c:212:25: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  212 |         opt.rate.rate = (rate64 >= (1ULL << 32)) ? ~0U : rate64;
      |                         ^
q_tbf.c:213:29: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  213 |         opt.peakrate.rate = (prate64 >= (1ULL << 32)) ? ~0U : prate64;
      |                             ^
q_tbf.c:216:36: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
  216 |                 double lim = rate64*(double)latency/TIME_UNITS_PER_SEC + buffer;
      |                                    ^
q_tbf.c:219:46: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
  219 |                         double lim2 = prate64*(double)latency/TIME_UNITS_PER_SEC + mtu;
      |                                              ^
q_tbf.c:224:29: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  224 |                 opt.limit = lim;
      |                             ^~~
q_tbf.c:227:29: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  227 |         opt.rate.mpu      = mpu;
      |                             ^~~
q_tbf.c:236:41: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  236 |                 opt.peakrate.mpu      = mpu;
      |                                         ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_tbf.c: In function 'tbf_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_tbf.c:277:9: note: in expansion of macro 'parse_rtattr_nested'
  277 |         parse_rtattr_nested(tb, TCA_TBF_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_tbf.c:292:51: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  292 |                 sprintf(b1, "%s/%u",  sprint_size(buffer, b2),
      |                                                   ^~~~~~
q_tbf.c:297:61: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  297 |                 print_size(PRINT_ANY, "burst", "burst %s ", buffer);
      |                                                             ^~~~~~
q_tbf.c:310:67: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  310 |                                 sprintf(b1, "%s/%u",  sprint_size(mtu, b2),
      |                                                                   ^~~
q_tbf.c:317:60: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  317 |                                            "minburst %s ", mtu);
      |                                                            ^~~
q_tbf.c:335:52: warning: conversion from 'double' to 'uint64_t' {aka 'long long unsigned int'} may change value [-Wfloat-conversion]
  335 |                 print_u64(PRINT_JSON, "lat", NULL, latency);
      |                                                    ^~~~~~~
q_tbf.c:337:42: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  337 |                              sprint_time(latency, b1));
      |                                          ^~~~~~~
    CC       q_cbq.o
In file included from q_cbq.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_cbq.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_cbq.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_cbq.c: In function 'cbq_parse_opt':
q_cbq.c:156:17: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  156 |         r.mpu = mpu;
      |                 ^~~
q_cbq.c:165:24: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  165 |         lss.ewma_log = ewma_log;
      |                        ^~~~~~~~
q_cbq.c: In function 'cbq_parse_class_opt':
q_cbq.c:250:38: warning: unsigned conversion from 'int' to 'unsigned char' changes the value of '-2' [-Wsign-conversion]
  250 |                         lss.flags &= ~TCF_CBQ_LSS_BOUNDED;
      |                                      ^
q_cbq.c:256:38: warning: unsigned conversion from 'int' to 'unsigned char' changes the value of '-3' [-Wsign-conversion]
  256 |                         lss.flags &= ~TCF_CBQ_LSS_ISOLATED;
      |                                      ^
q_cbq.c:298:40: warning: conversion from 'unsigned int' to 'unsigned char' may change value [-Wconversion]
  298 |                         wrr.priority = prio;
      |                                        ^~~~
q_cbq.c:343:50: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  343 |                                 fopt.defchange = ~0;
      |                                                  ^
q_cbq.c:374:25: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  374 |                 r.mpu = mpu;
      |                         ^~~
q_cbq.c:383:24: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  383 |         lss.ewma_log = ewma_log;
      |                        ^~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_cbq.c: In function 'cbq_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_cbq.c:464:9: note: in expansion of macro 'parse_rtattr_nested'
  464 |         parse_rtattr_nested(tb, TCA_CBQ_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_rr.o
In file included from q_rr.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_rr.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_rr.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_rr.c: In function 'rr_parse_opt':
q_rr.c:79:46: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
   79 |                         opt.priomap[idx++] = band;
      |                                              ^~~~
    CC       q_multiq.o
In file included from q_multiq.c:34:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_multiq.c:35:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_multiq.c:25:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       q_netem.o
In file included from q_netem.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_netem.c:20:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_netem.c:6:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_netem.c: In function '__print_time64':
q_netem.c:71:62: warning: conversion to '__s64' {aka 'long long int'} from '__u64' {aka 'long long unsigned int'} may change the sign of the result [-Wsign-conversion]
   71 |         print_string(PRINT_FP, NULL, label_fp, sprint_time64(val, b1));
      |                                                              ^~~
q_netem.c:72:55: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
   72 |         print_float(PRINT_JSON, label_json, NULL, val / 1000000000.);
      |                                                       ^
q_netem.c: In function 'set_percent':
q_netem.c:94:20: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
   94 |         *percent = rint(per * UINT32_MAX);
      |                    ^~~~
q_netem.c: In function 'get_distribution':
q_netem.c:159:37: warning: conversion from 'long int' to '__s16' {aka 'short int'} may change value [-Wconversion]
  159 |                         data[n++] = x;
      |                                     ^
q_netem.c: In function 'netem_parse_opt':
q_netem.c:621:37: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  621 |                         rate.rate = rate64;
      |                                     ^~~~~~
q_netem.c:630:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  630 |                               dist_data, dist_size * sizeof(dist_data[0])) < 0)
      |                                                    ^
q_netem.c:630:52: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  630 |                               dist_data, dist_size * sizeof(dist_data[0])) < 0)
      |                                          ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
q_netem.c:638:62: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  638 |                               slot_dist_data, slot_dist_size * sizeof(slot_dist_data[0])) < 0)
      |                                                              ^
q_netem.c:638:62: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  638 |                               slot_dist_data, slot_dist_size * sizeof(slot_dist_data[0])) < 0)
      |                                               ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
q_netem.c:642:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  642 |         tail->rta_len = (void *) NLMSG_TAIL(n) - (void *) tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_netem.c: In function 'netem_print_opt':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_netem.c:665:15: note: in expansion of macro 'RTA_PAYLOAD'
  665 |         len = RTA_PAYLOAD(opt) - sizeof(qopt);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_netem.c:696:25: note: in expansion of macro 'parse_rtattr_nested'
  696 |                         parse_rtattr_nested(lb, NETEM_LOSS_MAX, tb[TCA_NETEM_LOSS]);
      |                         ^~~~~~~~~~~~~~~~~~~
q_netem.c:812:44: warning: conversion to '__u64' {aka 'long long unsigned int'} from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  812 |                                        slot->dist_delay);
      |                                            ^
q_netem.c:75:53: note: in definition of macro '__PRINT_TIME64'
   75 |         __print_time64(label_json, label_fp " %s", (val))
      |                                                     ^~~
q_netem.c:813:58: warning: conversion to '__u64' {aka 'long long unsigned int'} from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  813 |                         __PRINT_TIME64("jitter", "", slot->dist_jitter);
      |                                                          ^
q_netem.c:75:53: note: in definition of macro '__PRINT_TIME64'
   75 |         __print_time64(label_json, label_fp " %s", (val))
      |                                                     ^~~
q_netem.c:815:66: warning: conversion to '__u64' {aka 'long long unsigned int'} from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  815 |                         __PRINT_TIME64("min-delay", " slot", slot->min_delay);
      |                                                                  ^
q_netem.c:75:53: note: in definition of macro '__PRINT_TIME64'
   75 |         __print_time64(label_json, label_fp " %s", (val))
      |                                                     ^~~
q_netem.c:816:61: warning: conversion to '__u64' {aka 'long long unsigned int'} from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  816 |                         __PRINT_TIME64("max-delay", "", slot->max_delay);
      |                                                             ^
q_netem.c:75:53: note: in definition of macro '__PRINT_TIME64'
   75 |         __print_time64(label_json, label_fp " %s", (val))
      |                                                     ^~~
    CC       q_choke.o
In file included from q_choke.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_choke.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_choke.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_choke.c: In function 'choke_parse_opt':
q_choke.c:142:20: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  142 |         opt.Wlog = wlog;
      |                    ^~~~
q_choke.c:149:20: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  149 |         opt.Plog = wlog;
      |                    ^~~~
q_choke.c:156:25: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  156 |         opt.Scell_log = wlog;
      |                         ^~~~
q_choke.c:163:17: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  163 |         max_P = probability * pow(2, 32);
      |                 ^~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_choke.c: In function 'choke_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_choke.c:178:9: note: in expansion of macro 'parse_rtattr_nested'
  178 |         parse_rtattr_nested(tb, TCA_CHOKE_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_sfb.o
In file included from q_sfb.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_sfb.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_sfb.c:15:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_sfb.c: In function 'sfb_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_sfb.c:151:9: note: in expansion of macro 'parse_rtattr_nested'
  151 |         parse_rtattr_nested(tb, TCA_SFB_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       f_rsvp.o
In file included from f_rsvp.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from f_rsvp.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_rsvp.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
f_rsvp.c: In function 'rsvp_parse_opt':
f_rsvp.c:229:42: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  229 |                         pinfo.protocol = num;
      |                                          ^~~
f_rsvp.c:249:42: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  249 |                         pinfo.tunnelid = tid;
      |                                          ^~~
f_rsvp.c:268:43: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  268 |                         pinfo.tunnelhdr = tid;
      |                                           ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_rsvp.c: In function 'rsvp_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_rsvp.c:337:9: note: in expansion of macro 'parse_rtattr_nested'
  337 |         parse_rtattr_nested(tb, TCA_RSVP_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       f_u32.o
In file included from ../include/uapi/linux/if.h:23,
                 from f_u32.c:22:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_u32.c:14:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from f_u32.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
f_u32.c: In function 'sprint_u32_handle':
f_u32.c:88:29: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   88 |                 snprintf(b, bsize, "none");
      |                             ^~~~~
f_u32.c:92:37: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   92 |                 int l = snprintf(b, bsize, "%x:", htid>>20);
      |                                     ^~~~~
f_u32.c:99:45: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   99 |                         int l = snprintf(b, bsize, "%x", hash);
      |                                             ^~~~~
f_u32.c:105:45: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  105 |                         int l = snprintf(b, bsize, ":%x", nodeid);
      |                                             ^~~~~
f_u32.c:112:29: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  112 |                 snprintf(b, bsize, "[%08x]", handle);
      |                             ^~~~~
f_u32.c: In function 'parse_offset':
f_u32.c:753:36: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  753 |                         sel->off = off;
      |                                    ^~~
f_u32.c:761:39: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  761 |                         sel->offoff = off;
      |                                       ^~~
f_u32.c:778:41: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  778 |                         sel->offshift = shift;
      |                                         ^~~~~
f_u32.c: In function 'parse_hashkey':
f_u32.c:811:37: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  811 |                         sel->hoff = num;
      |                                     ^~~
f_u32.c: In function 'print_ipv4':
f_u32.c:847:51: warning: conversion to 'int' from '__uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  847 |                                   ntohl(key->val) >> 16);
      |                                                   ^
f_u32.c: In function 'print_ipv6':
f_u32.c:924:51: warning: conversion to 'int' from '__uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  924 |                                   ntohl(key->val) >> 16);
      |                                                   ^
f_u32.c: In function 'u32_hash_fold':
f_u32.c:1020:39: warning: conversion to 'int' from '__uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1020 |         __u8 fshift = key->mask ? ffs(ntohl(key->mask)) - 1 : 0;
      |                                       ^~~~~
f_u32.c:1020:23: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1020 |         __u8 fshift = key->mask ? ffs(ntohl(key->mask)) - 1 : 0;
      |                       ^~~
f_u32.c: In function 'u32_parse_opt':
f_u32.c:1172:47: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1172 |                                   strlen(ind) + 1);
      |                                   ~~~~~~~~~~~~^~~
f_u32.c:1223:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1223 |                           sizeof(sel.sel) +
      |                           ~~~~~~~~~~~~~~~~^
 1224 |                           sel.sel.nkeys * sizeof(struct tc_u32_key));
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_u32.c: In function 'u32_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_u32.c:1249:9: note: in expansion of macro 'parse_rtattr_nested'
 1249 |         parse_rtattr_nested(tb, TCA_U32_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
f_u32.c:1269:70: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1269 |                 print_int(PRINT_ANY, "ht_divisor", "ht divisor %d ", htdivisor);
      |                                                                      ^~~~~~~~~
f_u32.c:1329:84: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1329 |                         print_int(PRINT_ANY, "fwmark_success", "(success %d)", mark->success);
      |                                                                                ~~~~^~~~~~~~~
    CC       f_route.o
In file included from f_route.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from f_route.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_route.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
f_route.c: In function 'route_parse_opt':
f_route.c:67:28: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-33024' to '4294934272' [-Wsign-conversion]
   67 |                         fh &= ~0x80FF;
      |                            ^~
f_route.c:134:20: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-32513' to '4294934783' [-Wsign-conversion]
  134 |                 fh &= ~0x7F00;
      |                    ^~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_route.c: In function 'route_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_route.c:151:9: note: in expansion of macro 'parse_rtattr_nested'
  151 |         parse_rtattr_nested(tb, TCA_ROUTE4_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
f_route.c:163:55: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  163 |                 fprintf(f, "to %s ", rtnl_rtrealm_n2a(rta_getattr_u32(tb[TCA_ROUTE4_TO]), b1, sizeof(b1)));
      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
f_route.c:165:57: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  165 |                 fprintf(f, "from %s ", rtnl_rtrealm_n2a(rta_getattr_u32(tb[TCA_ROUTE4_FROM]), b1, sizeof(b1)));
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CC       f_fw.o
In file included from ../include/uapi/linux/if.h:23,
                 from f_fw.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_fw.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from f_fw.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
f_fw.c: In function 'fw_parse_opt':
f_fw.c:105:74: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  105 |                         addattr_l(n, MAX_MSG, TCA_FW_INDEV, d, strlen(d) + 1);
      |                                                                ~~~~~~~~~~^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_fw.c: In function 'fw_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_fw.c:127:9: note: in expansion of macro 'parse_rtattr_nested'
  127 |         parse_rtattr_nested(tb, TCA_FW_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       f_basic.o
In file included from ../include/uapi/linux/if.h:23,
                 from f_basic.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_basic.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from f_basic.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from f_basic.c:25:
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
f_basic.c: In function 'basic_parse_opt':
f_basic.c:55:25: warning: conversion to '__u32' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
   55 |         t->tcm_handle = h;
      |                         ^
f_basic.c:107:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  107 |         tail->rta_len = (((void *)n)+n->nlmsg_len) - (void *)tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_basic.c: In function 'basic_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_basic.c:119:9: note: in expansion of macro 'parse_rtattr_nested'
  119 |         parse_rtattr_nested(tb, TCA_BASIC_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       f_bpf.o
In file included from f_bpf.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from f_bpf.c:19:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_bpf.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netinet/in.h:23,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24,
                 from f_bpf.c:20:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
f_bpf.c: In function 'bpf_cbpf_cb':
f_bpf.c:62:49: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   62 |         addattr16(nl, MAX_MSG, TCA_BPF_OPS_LEN, ops_len);
      |                                                 ^~~~~~~
f_bpf.c:64:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   64 |                   ops_len * sizeof(struct sock_filter));
      |                           ^
f_bpf.c:64:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   64 |                   ops_len * sizeof(struct sock_filter));
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
f_bpf.c: In function 'bpf_ebpf_cb':
f_bpf.c:69:44: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         addattr32(nl, MAX_MSG, TCA_BPF_FD, fd);
      |                                            ^~
f_bpf.c: In function 'bpf_parse_opt':
f_bpf.c:175:31: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  175 |                 cfg.ifindex = t->tcm_ifindex;
      |                               ^
f_bpf.c:186:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  186 |         tail->rta_len = (((void *)n) + n->nlmsg_len) - (void *)tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_bpf.c: In function 'bpf_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_bpf.c:203:9: note: in expansion of macro 'parse_rtattr_nested'
  203 |         parse_rtattr_nested(tb, TCA_BPF_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
f_bpf.c:252:30: note: in expansion of macro 'RTA_PAYLOAD'
  252 |                              RTA_PAYLOAD(tb[TCA_BPF_TAG]), b, sizeof(b)));
      |                              ^~~~~~~~~~~
    CC       f_flow.o
In file included from f_flow.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from f_flow.c:18:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_flow.c:11:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from f_flow.c:19:
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
f_flow.c: In function 'flow_parse_opt':
f_flow.c:182:53: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  182 |                         transfer_bitop(&mask, &xor, ~0, tmp);
      |                                                     ^~
f_flow.c: In function 'flow_print_opt':
f_flow.c:272:22: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  272 |         __u32 mask = ~0, val = 0;
      |                      ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_flow.c:277:9: note: in expansion of macro 'parse_rtattr_nested'
  277 |         parse_rtattr_nested(tb, TCA_FLOW_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       f_cgroup.o
In file included from f_cgroup.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from f_cgroup.c:16:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_cgroup.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from f_cgroup.c:17:
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
f_cgroup.c: In function 'cgroup_parse_opt':
f_cgroup.c:41:25: warning: conversion to '__u32' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
   41 |         t->tcm_handle = h;
      |                         ^
f_cgroup.c:79:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   79 |         tail->rta_len = (((void *)n)+n->nlmsg_len) - (void *)tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_cgroup.c: In function 'cgroup_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_cgroup.c:91:9: note: in expansion of macro 'parse_rtattr_nested'
   91 |         parse_rtattr_nested(tb, TCA_CGROUP_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       f_flower.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ../include/uapi/linux/if_arp.h:27,
                 from f_flower.c:18:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_flower.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from f_flower.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
f_flower.c: In function 'flower_parse_eth_addr':
../include/utils.h:294:96: warning: conversion from 'long long unsigned int' to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  294 | #define htonll(x) ((1==htonl(1)) ? (x) : ((uint64_t)htonl((x) & 0xFFFFFFFF) << 32) | htonl((x) >> 32))
      |                                                                                            ~~~~^~~~~
f_flower.c:147:32: note: in expansion of macro 'htonll'
  147 |                         mask = htonll(0xffffffffffffULL << (16 + 48 - bits));
      |                                ^~~~~~
f_flower.c: In function 'flower_parse_matching_flags':
f_flower.c:229:46: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  229 |                                         *mtf &= ~flags_str[i].flag;
      |                                              ^~
f_flower.c:231:46: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  231 |                                         *mtf |= flags_str[i].flag;
      |                                              ^~
f_flower.c:233:43: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  233 |                                 *mtf_mask |= flags_str[i].flag;
      |                                           ^~
f_flower.c: In function 'flower_parse_ct_labels':
f_flower.c:344:39: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  344 |         if (hex2mem(str, labels, slen / 2) < 0)
      |                                  ~~~~~^~~
f_flower.c:346:70: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  346 |         addattr_l(n, MAX_MSG, TCA_FLOWER_KEY_CT_LABELS, labels, slen / 2);
      |                                                                 ~~~~~^~~
f_flower.c:349:52: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  349 |                 if (hex2mem(mask, lmask, slen_mask / 2) < 0)
      |                                          ~~~~~~~~~~^~~
f_flower.c:356:29: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  356 |                   slen_mask / 2);
      |                   ~~~~~~~~~~^~~
f_flower.c: In function 'flower_parse_ct_state':
f_flower.c:387:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  387 |                         len = strlen(flower_ct_states[i].str);
      |                               ^~~~~~
f_flower.c:388:71: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  388 |                         if (strncmp(str + 1, flower_ct_states[i].str, len))
      |                                                                       ^~~
f_flower.c:403:56: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  403 |         addattr16(n, MAX_MSG, TCA_FLOWER_KEY_CT_STATE, flags);
      |                                                        ^~~~~
f_flower.c:404:61: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  404 |         addattr16(n, MAX_MSG, TCA_FLOWER_KEY_CT_STATE_MASK, mask);
      |                                                             ^~~~
f_flower.c: In function 'flower_parse_geneve_opt':
f_flower.c:925:60: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  925 |                         if (hex2mem(token, opts, token_len / 2) < 0) {
      |                                                  ~~~~~~~~~~^~~
f_flower.c:929:66: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  929 |                         addattr_l(n, MAX_MSG, i, opts, token_len / 2);
      |                                                        ~~~~~~~~~~^~~
f_flower.c: In function 'flower_check_enc_opt_key':
f_flower.c:1111:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1111 |         key_len = strlen(key);
      |                   ^~~~~~
f_flower.c:1116:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1116 |                 key_len = strlen(key) - 1;
      |                           ^~~~~~
f_flower.c: In function 'flower_parse_enc_opts_geneve':
f_flower.c:1142:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1142 |                 if ((key_len + strlen(token) > XATTR_SIZE_MAX) ||
      |                              ^
f_flower.c:1147:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1147 |                 key_len += strlen(token) + 1;
      |                         ^~
f_flower.c:1147:28: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1147 |                 key_len += strlen(token) + 1;
      |                            ^~~~~~
f_flower.c:1152:38: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1152 |                         if (mask_len + strlen(token) > XATTR_SIZE_MAX)
      |                                      ^
f_flower.c:1155:36: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1155 |                         data_len = strlen(rindex(token, ':'));
      |                                    ^~~~~~
f_flower.c:1158:63: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1158 |                         memset(&mask[mask_len], 'f', data_len - 1);
      |                                                      ~~~~~~~~~^~~
f_flower.c:1165:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1165 |                 if (mask_len + strlen(slash + 1) > XATTR_SIZE_MAX)
      |                              ^
f_flower.c:1169:26: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1169 |                 mask_len += strlen(slash + 1) + 1;
      |                          ^~
f_flower.c:1169:29: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1169 |                 mask_len += strlen(slash + 1) + 1;
      |                             ^~~~~~
f_flower.c: In function 'flower_parse_enc_opts_erspan':
f_flower.c:1249:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1249 |                 memcpy(mask, str, index);
      |                                   ^~~~~
f_flower.c: In function 'flower_parse_opt':
f_flower.c:2056:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 2056 |         tail->rta_len = (((void *)n)+n->nlmsg_len) - (void *)tail;
      |                         ^
f_flower.c: In function 'flower_print_eth_addr':
f_flower.c:2094:16: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2094 |         done = sprintf(out, "%s",
      |                ^~~~~~~
f_flower.c: In function 'flower_print_matching_flags':
f_flower.c:2189:30: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2189 |                 if (mtf_mask & flags_str[i].flag) {
      |                              ^
f_flower.c:2199:40: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2199 |                                    mtf & flags_str[i].flag);
      |                                        ^
f_flower.c:2200:33: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2200 |                         if (mtf & flags_str[i].flag)
      |                                 ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_flower.c: In function 'flower_print_ip_addr':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
f_flower.c:2243:35: note: in expansion of macro 'rt_addr_n2a_rta'
 2243 |         done = sprintf(out, "%s", rt_addr_n2a_rta(family, addr_attr));
      |                                   ^~~~~~~~~~~~~~~
f_flower.c:2243:16: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2243 |         done = sprintf(out, "%s", rt_addr_n2a_rta(family, addr_attr));
      |                ^~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
f_flower.c:2246:44: note: in expansion of macro 'rt_addr_n2a_rta'
 2246 |                 sprintf(out + done, "/%s", rt_addr_n2a_rta(family, mask_attr));
      |                                            ^~~~~~~~~~~~~~~
f_flower.c: In function 'flower_print_port_range':
f_flower.c:2281:24: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2281 |                 done = sprintf(out, "%u", rta_getattr_be16(min_attr));
      |                        ^~~~~~~
f_flower.c: In function 'flower_print_tcp_flags':
f_flower.c:2296:16: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2296 |         done = sprintf(out, "0x%x", rta_getattr_be16(flags_attr));
      |                ^~~~~~~
f_flower.c: In function 'flower_print_ct_state':
f_flower.c:2326:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2326 |                         done += sprintf(out + done, "+%s",
      |                              ^~
f_flower.c:2329:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2329 |                         done += sprintf(out + done, "-%s",
      |                              ^~
f_flower.c: In function 'flower_print_ct_label':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
f_flower.c:2349:20: note: in expansion of macro 'RTA_PAYLOAD'
 2349 |         data_len = RTA_PAYLOAD(attr);
      |                    ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
f_flower.c:2353:20: note: in expansion of macro 'RTA_PAYLOAD'
 2353 |         data_len = RTA_PAYLOAD(attr);
      |                    ^~~~~~~~~~~
f_flower.c:2364:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2364 |                               sizeof(out)-(p-out));
      |                                          ^
f_flower.c:2364:42: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2364 |                               sizeof(out)-(p-out));
      |                               ~~~~~~~~~~~^~~~~~~~
f_flower.c: In function 'flower_print_geneve_opts':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
f_flower.c:2400:19: note: in expansion of macro 'RTA_PAYLOAD'
 2400 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
f_flower.c:2410:28: note: in expansion of macro 'RTA_PAYLOAD'
 2410 |                 data_len = RTA_PAYLOAD(tb[TCA_FLOWER_KEY_ENC_OPT_GENEVE_DATA]);
      |                            ^~~~~~~~~~~
f_flower.c:2412:53: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2412 |                               data_len, data, sizeof(data));
      |                                               ~~~~~~^~~~~~
f_flower.c: In function 'flower_print_vxlan_opts':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
f_flower.c:2440:19: note: in expansion of macro 'RTA_PAYLOAD'
 2440 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
f_flower.c: In function 'flower_print_erspan_opts':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
f_flower.c:2463:22: note: in expansion of macro 'RTA_PAYLOAD'
 2463 |                      RTA_PAYLOAD(attr));
      |                      ^~~~~~~~~~~
f_flower.c: In function 'flower_print_gtp_opts':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
f_flower.c:2494:22: note: in expansion of macro 'RTA_PAYLOAD'
 2494 |                      RTA_PAYLOAD(attr));
      |                      ^~~~~~~~~~~
f_flower.c:2499:26: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2499 |         snprintf(strbuf, len, "%02x:%02x", pdu_type, qfi);
      |                          ^~~
f_flower.c: In function 'flower_print_enc_opts':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
f_flower.c:2539:15: note: in expansion of macro 'RTA_PAYLOAD'
 2539 |         len = RTA_PAYLOAD(attr) * 2 + 1;
      |               ^~~~~~~~~~~
f_flower.c:2541:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2541 |         key = malloc(len);
      |                      ^~~
f_flower.c:2545:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2545 |         msk = malloc(len);
      |                      ^~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_flower.c:2549:9: note: in expansion of macro 'parse_rtattr_nested'
 2549 |         parse_rtattr_nested(key_tb, TCA_FLOWER_KEY_ENC_OPTS_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_flower.c:2550:9: note: in expansion of macro 'parse_rtattr_nested'
 2550 |         parse_rtattr_nested(msk_tb, TCA_FLOWER_KEY_ENC_OPTS_MAX, mask_attr);
      |         ^~~~~~~~~~~~~~~~~~~
f_flower.c: In function 'flower_print_masked_u8':
f_flower.c:2619:24: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2619 |                 done = sprintf(out, "%s", value_str);
      |                        ^~~~~~~
f_flower.c:2621:24: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2621 |                 done = sprintf(out, "%d", value);
      |                        ^~~~~~~
f_flower.c: In function 'flower_print_mpls_opt_lse':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
f_flower.c:2657:22: note: in expansion of macro 'RTA_PAYLOAD'
 2657 |                      RTA_PAYLOAD(lse));
      |                      ^~~~~~~~~~~
f_flower.c: In function 'flower_print_mpls_opts':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
f_flower.c:2693:15: note: in expansion of macro 'RTA_PAYLOAD'
 2693 |         rem = RTA_PAYLOAD(attr);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
f_flower.c:2697:23: note: in expansion of macro 'RTA_NEXT'
 2697 |                 lse = RTA_NEXT(lse, rem);
      |                       ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
f_flower.c:2697:23: note: in expansion of macro 'RTA_NEXT'
 2697 |                 lse = RTA_NEXT(lse, rem);
      |                       ^~~~~~~~
f_flower.c: In function 'flower_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_flower.c:2725:9: note: in expansion of macro 'parse_rtattr_nested'
 2725 |         parse_rtattr_nested(tb, TCA_FLOWER_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_dsmark.o
In file included from q_dsmark.c:18:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_dsmark.c:19:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_dsmark.c:9:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_dsmark.c: In function 'dsmark_parse_opt':
q_dsmark.c:36:15: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   36 |         ind = set_tc_index = 0;
      |               ^~~~~~~~~~~~
q_dsmark.c:41:31: warning: conversion from 'long unsigned int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   41 |                         ind = strtoul(*argv, &end, 0);
      |                               ^~~~~~~
q_dsmark.c:49:32: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
   49 |                         dflt = strtoul(*argv, &end, 0);
      |                                ^~~~~~~
q_dsmark.c:70:25: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   70 |             __u16 tmp = dflt;
      |                         ^~~~
q_dsmark.c: In function 'dsmark_parse_class_opt':
q_dsmark.c:98:31: warning: conversion from 'long unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
   98 |                         tmp = strtoul(*argv, &end, 0);
      |                               ^~~~~~~
q_dsmark.c:106:31: warning: conversion from 'long unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  106 |                         tmp = strtoul(*argv, &end, 0);
      |                               ^~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_dsmark.c: In function 'dsmark_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
q_dsmark.c:130:57: note: in expansion of macro 'RTA_PAYLOAD'
  130 |         parse_rtattr(tb, TCA_DSMARK_MAX, RTA_DATA(opt), RTA_PAYLOAD(opt));
      |                                                         ^~~~~~~~~~~
    CC       q_gred.o
In file included from q_gred.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_gred.c:26:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_gred.c:15:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_gred.c: In function 'gred_parse_opt':
q_gred.c:202:36: warning: conversion from 'long int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  202 |                         opt.prio = strtol(*argv, (char **)NULL, 10);
      |                                    ^~~~~~
q_gred.c:256:20: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  256 |         opt.Wlog = parm;
      |                    ^~~~
q_gred.c:261:20: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  261 |         opt.Plog = parm;
      |                    ^~~~
q_gred.c:267:25: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  267 |         opt.Scell_log = parm;
      |                         ^~~~
q_gred.c:272:17: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  272 |         max_P = probability * pow(2, 32);
      |                 ^~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_gred.c: In function 'gred_parse_vqs':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_gred.c:303:19: note: in expansion of macro 'RTA_PAYLOAD'
  303 |         int rem = RTA_PAYLOAD(vqs);
      |                   ^~~~~~~~~~~
q_gred.c:316:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  316 |                              rem - offset);
      |                                  ^
q_gred.c:316:34: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  316 |                              rem - offset);
      |                              ~~~~^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_gred.c:326:17: note: in expansion of macro 'parse_rtattr_nested'
  326 |                 parse_rtattr_nested(tb, TCA_GRED_VQ_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
q_gred.c: In function 'gred_print_stats':
q_gred.c:411:49: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  411 |         print_size(PRINT_ANY, "bytes", "(%s) ", bytes);
      |                                                 ^~~~~
q_gred.c: In function 'gred_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_gred.c:428:9: note: in expansion of macro 'parse_rtattr_nested'
  428 |         parse_rtattr_nested(tb, TCA_GRED_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       f_tcindex.o
In file included from f_tcindex.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from f_tcindex.c:16:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_tcindex.c:8:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
f_tcindex.c: In function 'tcindex_parse_opt':
f_tcindex.c:47:32: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
   47 |                         hash = strtoul(*argv, &end, 0);
      |                                ^~~~~~~
f_tcindex.c:58:32: warning: conversion from 'long unsigned int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   58 |                         mask = strtoul(*argv, &end, 0);
      |                                ^~~~~~~
f_tcindex.c:69:33: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
   69 |                         shift = strtoul(*argv, &end, 0);
      |                                 ^~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_tcindex.c: In function 'tcindex_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_tcindex.c:129:9: note: in expansion of macro 'parse_rtattr_nested'
  129 |         parse_rtattr_nested(tb, TCA_TCINDEX_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
f_tcindex.c:153:25: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  153 |                 shift = rta_getattr_u32(tb[TCA_TCINDEX_SHIFT]);
      |                         ^~~~~~~~~~~~~~~
f_tcindex.c:162:32: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  162 |                 fall_through = rta_getattr_u32(tb[TCA_TCINDEX_FALL_THROUGH]);
      |                                ^~~~~~~~~~~~~~~
    CC       q_ingress.o
In file included from q_ingress.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_ingress.c:16:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_ingress.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       q_hfsc.o
In file included from q_hfsc.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_hfsc.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_hfsc.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_hfsc.c: In function 'hfsc_print_class_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_hfsc.c:236:9: note: in expansion of macro 'parse_rtattr_nested'
  236 |         parse_rtattr_nested(tb, TCA_HFSC_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_hfsc.c: In function 'hfsc_get_sc2':
q_hfsc.c:385:26: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  385 |                 sc->m1 = ceil(1.0 * umax * TIME_UNITS_PER_SEC / dmax); /* in bps */
      |                          ^~~~
q_hfsc.c:394:45: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
  394 |                 sc->d  = tc_core_time2ktime(ceil(dmax - umax * TIME_UNITS_PER_SEC / rate));
      |                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CC       q_htb.o
In file included from q_htb.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_htb.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_htb.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_htb.c: In function 'htb_parse_opt':
q_htb.c:89:43: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   89 |                                 opt.debug |= (*p-'0')<<(2*i);
      |                                           ^~
q_htb.c: In function 'htb_parse_class_opt':
q_htb.c:228:25: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  228 |         opt.rate.rate = (rate64 >= (1ULL << 32)) ? ~0U : rate64;
      |                         ^
q_htb.c:229:25: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
  229 |         opt.ceil.rate = (ceil64 >= (1ULL << 32)) ? ~0U : ceil64;
      |                         ^
q_htb.c:234:33: warning: conversion to '__u64' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  234 |                 buffer = rate64 / get_hz() + mtu;
      |                                 ^
q_htb.c:234:26: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  234 |                 buffer = rate64 / get_hz() + mtu;
      |                          ^~~~~~
q_htb.c:236:34: warning: conversion to '__u64' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  236 |                 cbuffer = ceil64 / get_hz() + mtu;
      |                                  ^
q_htb.c:236:27: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
  236 |                 cbuffer = ceil64 / get_hz() + mtu;
      |                           ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_htb.c: In function 'htb_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_htb.c:286:9: note: in expansion of macro 'parse_rtattr_nested'
  286 |         parse_rtattr_nested(tb, TCA_HTB_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_htb.c:321:65: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  321 |                         print_size(PRINT_FP, NULL, "burst %s/", buffer);
      |                                                                 ^~~~~~
q_htb.c:324:66: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  324 |                         print_size(PRINT_FP, NULL, "cburst %s/", cbuffer);
      |                                                                  ^~~~~~~
q_htb.c:329:65: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  329 |                         print_size(PRINT_FP, NULL, "burst %s ", buffer);
      |                                                                 ^~~~~~
q_htb.c:330:66: warning: conversion from 'double' to '__u32' {aka 'unsigned int'} may change value [-Wfloat-conversion]
  330 |                         print_size(PRINT_FP, NULL, "cburst %s ", cbuffer);
      |                                                                  ^~~~~~~
q_htb.c:340:59: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  340 |                 print_int(PRINT_ANY, "r2q", "r2q %d", gopt->rate2quantum);
      |                                                       ~~~~^~~~~~~~~~~~~~
    CC       q_drr.o
In file included from q_drr.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_drr.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_drr.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_drr.c: In function 'drr_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_drr.c:90:9: note: in expansion of macro 'parse_rtattr_nested'
   90 |         parse_rtattr_nested(tb, TCA_DRR_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_qfq.o
In file included from q_qfq.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_qfq.c:20:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/fcntl.h:25,
                 from q_qfq.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_qfq.c: In function 'qfq_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_qfq.c:94:9: note: in expansion of macro 'parse_rtattr_nested'
   94 |         parse_rtattr_nested(tb, TCA_QFQ_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_gact.o
In file included from m_gact.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_gact.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_gact.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_gact.c: In function 'print_gact':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_gact.c:178:9: note: in expansion of macro 'parse_rtattr_nested'
  178 |         parse_rtattr_nested(tb, TCA_GACT_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_mirred.o
In file included from m_mirred.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_mirred.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_mirred.c:15:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_mirred.c: In function 'parse_direction':
m_mirred.c:196:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  196 |                 idx = ll_name_to_index(d);
      |                       ^~~~~~~~~~~~~~~~
m_mirred.c:200:29: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  200 |                 p.ifindex = idx;
      |                             ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_mirred.c: In function 'print_mirred':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_mirred.c:288:9: note: in expansion of macro 'parse_rtattr_nested'
  288 |         parse_rtattr_nested(tb, TCA_MIRRED_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_mpls.o
In file included from m_mpls.c:11:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_mpls.c:13:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_mpls.c:6:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_mpls.c: In function 'parse_mpls':
m_mpls.c:190:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  190 |         parm.m_action = action;
      |                         ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_mpls.c: In function 'print_mpls':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_mpls.c:221:9: note: in expansion of macro 'parse_rtattr_nested'
  221 |         parse_rtattr_nested(tb, TCA_MPLS_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_nat.o
In file included from m_nat.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_nat.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_nat.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_nat.c: In function 'print_nat':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_nat.c:153:9: note: in expansion of macro 'parse_rtattr_nested'
  153 |         parse_rtattr_nested(tb, TCA_NAT_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
m_nat.c:161:22: warning: conversion to 'int' from '__be32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  161 |         len = ffs(sel->mask);
      |                   ~~~^~~~~~
    CC       m_pedit.o
In file included from m_pedit.c:27:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_pedit.c:28:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_pedit.c:18:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_pedit.c: In function 'pack_key32':
m_pedit.c:161:36: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-4' to '4294967292' [-Wsign-conversion]
  161 |         if (tkey->off > (tkey->off & ~3)) {
      |                                    ^
m_pedit.c: In function 'pack_key16':
m_pedit.c:194:19: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-4' to '4294967292' [-Wsign-conversion]
  194 |         tkey->off &= ~3;
      |                   ^~
m_pedit.c: In function 'pack_key8':
m_pedit.c:220:19: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-4' to '4294967292' [-Wsign-conversion]
  220 |         tkey->off &= ~3;
      |                   ^~
m_pedit.c: In function 'pack_mac':
m_pedit.c:236:35: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  236 |                 ret |= pack_key32(~0, sel, tkey);
      |                                   ^~
m_pedit.c:241:35: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  241 |                 ret |= pack_key16(~0, sel, tkey);
      |                                   ^~
m_pedit.c:245:35: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  245 |                 ret |= pack_key16(~0, sel, tkey);
      |                                   ^~
m_pedit.c:250:35: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  250 |                 ret |= pack_key32(~0, sel, tkey);
      |                                   ^~
m_pedit.c: In function 'pack_ipv6':
m_pedit.c:276:34: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  276 |                 ret = pack_key32(~0, sel, tkey);
      |                                  ^~
m_pedit.c: In function 'parse_offset':
m_pedit.c:463:21: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  463 |         tkey->off = off;
      |                     ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_pedit.c: In function 'pedit_keys_ex_getattr':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_pedit.c:573:19: note: in expansion of macro 'RTA_PAYLOAD'
  573 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
m_pedit.c:577:54: note: in expansion of macro 'RTA_NEXT'
  577 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
m_pedit.c:577:54: note: in expansion of macro 'RTA_NEXT'
  577 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_pedit.c:584:17: note: in expansion of macro 'parse_rtattr_nested'
  584 |                 parse_rtattr_nested(tb, TCA_PEDIT_KEY_EX_MAX, i);
      |                 ^~~~~~~~~~~~~~~~~~~
m_pedit.c: In function 'parse_pedit':
m_pedit.c:704:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  704 |                           sizeof(sel.sel) +
      |                           ~~~~~~~~~~~~~~~~^
  705 |                           sel.sel.nkeys * sizeof(struct tc_pedit_key));
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
m_pedit.c:708:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  708 |                           sizeof(sel.sel) +
      |                           ~~~~~~~~~~~~~~~~^
  709 |                           sel.sel.nkeys * sizeof(struct tc_pedit_key));
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
m_pedit.c: In function 'print_pedit_location':
m_pedit.c:744:55: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  744 |                 print_int(PRINT_ANY, "offset", "%+d", off);
      |                                                       ^~~
m_pedit.c:747:54: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  747 |                 print_int(PRINT_ANY, "offset", "%d", off);
      |                                                      ^~~
m_pedit.c: In function 'print_pedit':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_pedit.c:765:9: note: in expansion of macro 'parse_rtattr_nested'
  765 |         parse_rtattr_nested(tb, TCA_PEDIT_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
m_pedit.c:832:73: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  832 |                         print_uint(PRINT_FP, NULL, "\n\t key #%d  at ", i);
      |                                                                         ^
    CC       m_ife.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from m_ife.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_ife.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from m_ife.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_ife.c: In function 'print_ife':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_ife.c:234:9: note: in expansion of macro 'parse_rtattr_nested'
  234 |         parse_rtattr_nested(tb, TCA_IFE_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_ife.c:259:17: note: in expansion of macro 'parse_rtattr_nested'
  259 |                 parse_rtattr_nested(metalist, IFE_META_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_ife.c:263:31: note: in expansion of macro 'RTA_PAYLOAD'
  263 |                         len = RTA_PAYLOAD(metalist[IFE_META_SKBMARK]);
      |                               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_ife.c:274:31: note: in expansion of macro 'RTA_PAYLOAD'
  274 |                         len = RTA_PAYLOAD(metalist[IFE_META_TCINDEX]);
      |                               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_ife.c:286:31: note: in expansion of macro 'RTA_PAYLOAD'
  286 |                         len = RTA_PAYLOAD(metalist[IFE_META_PRIO]);
      |                               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
m_ife.c:302:42: note: in expansion of macro 'RTA_PAYLOAD'
  302 |                                          RTA_PAYLOAD(tb[TCA_IFE_DMAC]), 0, b2,
      |                                          ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
m_ife.c:310:42: note: in expansion of macro 'RTA_PAYLOAD'
  310 |                                          RTA_PAYLOAD(tb[TCA_IFE_SMAC]), 0, b2,
      |                                          ^~~~~~~~~~~
    CC       m_skbedit.o
In file included from m_skbedit.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_skbedit.c:27:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_skbedit.c:22:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_skbedit.c: In function 'parse_skbedit':
m_skbedit.c:82:41: warning: conversion from 'unsigned int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   82 |                         queue_mapping = tmp;
      |                                         ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_skbedit.c: In function 'print_skbedit':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_skbedit.c:205:9: note: in expansion of macro 'parse_rtattr_nested'
  205 |         parse_rtattr_nested(tb, TCA_SKBEDIT_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_skbmod.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from m_skbmod.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_skbmod.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from m_skbmod.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_skbmod.c: In function 'print_skbmod':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_skbmod.c:176:9: note: in expansion of macro 'parse_rtattr_nested'
  176 |         parse_rtattr_nested(tb, TCA_SKBMOD_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
m_skbmod.c:201:37: note: in expansion of macro 'RTA_PAYLOAD'
  201 |                                     RTA_PAYLOAD(tb[TCA_SKBMOD_DMAC]), 0, b1,
      |                                     ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
m_skbmod.c:210:37: note: in expansion of macro 'RTA_PAYLOAD'
  210 |                                     RTA_PAYLOAD(tb[TCA_SKBMOD_SMAC]), 0, b2,
      |                                     ^~~~~~~~~~~
    CC       m_csum.o
In file included from m_csum.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_csum.c:20:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_csum.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_csum.c: In function 'print_csum':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_csum.c:173:9: note: in expansion of macro 'parse_rtattr_nested'
  173 |         parse_rtattr_nested(tb, TCA_CSUM_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_simple.o
In file included from m_simple.c:74:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_simple.c:75:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_simple.c:66:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_simple.c: In function 'print_simple':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_simple.c:171:9: note: in expansion of macro 'parse_rtattr_nested'
  171 |         parse_rtattr_nested(tb, TCA_DEF_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_vlan.o
In file included from m_vlan.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_vlan.c:19:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_vlan.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_vlan.c: In function 'print_vlan':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_vlan.c:245:9: note: in expansion of macro 'parse_rtattr_nested'
  245 |         parse_rtattr_nested(tb, TCA_VLAN_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_connmark.o
In file included from m_connmark.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_connmark.c:24:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_connmark.c:19:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_connmark.c: In function 'print_connmark':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_connmark.c:117:9: note: in expansion of macro 'parse_rtattr_nested'
  117 |         parse_rtattr_nested(tb, TCA_CONNMARK_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_ctinfo.o
In file included from m_ctinfo.c:12:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ctinfo.c:13:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_ctinfo.c:8:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ctinfo.c: In function 'parse_ctinfo':
m_ctinfo.c:90:38: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
   90 |                         cpmarkmask = ~0;
      |                                      ^
m_ctinfo.c:132:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  132 |         i = ffs(dscpmask);
      |                 ^~~~~~~~
m_ctinfo.c:132:13: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  132 |         i = ffs(dscpmask);
      |             ^~~
m_ctinfo.c:133:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  133 |         if (i && ((~0 & (dscpmask >> (i - 1))) != 0x3f)) {
      |                       ^
m_ctinfo.c: In function 'print_ctinfo':
m_ctinfo.c:186:35: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  186 |         unsigned int cpmarkmask = ~0, dscpmask = 0, dscpstatemask = 0;
      |                                   ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_ctinfo.c:195:9: note: in expansion of macro 'parse_rtattr_nested'
  195 |         parse_rtattr_nested(tb, TCA_CTINFO_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_bpf.o
In file included from m_bpf.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_bpf.c:21:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_bpf.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netinet/in.h:23,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24,
                 from m_bpf.c:22:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
m_bpf.c: In function 'bpf_cbpf_cb':
m_bpf.c:60:53: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   60 |         addattr16(nl, MAX_MSG, TCA_ACT_BPF_OPS_LEN, ops_len);
      |                                                     ^~~~~~~
m_bpf.c:62:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   62 |                   ops_len * sizeof(struct sock_filter));
      |                           ^
m_bpf.c:62:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   62 |                   ops_len * sizeof(struct sock_filter));
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
m_bpf.c: In function 'bpf_ebpf_cb':
m_bpf.c:67:48: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   67 |         addattr32(nl, MAX_MSG, TCA_ACT_BPF_FD, fd);
      |                                                ^~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_bpf.c: In function 'bpf_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_bpf.c:168:9: note: in expansion of macro 'parse_rtattr_nested'
  168 |         parse_rtattr_nested(tb, TCA_ACT_BPF_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
m_bpf.c:194:30: note: in expansion of macro 'RTA_PAYLOAD'
  194 |                              RTA_PAYLOAD(tb[TCA_ACT_BPF_TAG]),
      |                              ^~~~~~~~~~~
    CC       m_tunnel_key.o
In file included from m_tunnel_key.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_tunnel_key.c:19:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_tunnel_key.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_tunnel_key.c: In function 'tunnel_key_parse_geneve_opt':
m_tunnel_key.c:179:60: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  179 |                         if (hex2mem(token, opts, token_len / 2) < 0) {
      |                                                  ~~~~~~~~~~^~~
m_tunnel_key.c:183:66: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  183 |                         addattr_l(n, MAX_MSG, i, opts, token_len / 2);
      |                                                        ~~~~~~~~~~^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_tunnel_key.c: In function 'tunnel_key_print_ip_addr':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
m_tunnel_key.c:495:30: note: in expansion of macro 'rt_addr_n2a_rta'
  495 |                              rt_addr_n2a_rta(family, attr));
      |                              ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
m_tunnel_key.c:498:30: note: in expansion of macro 'rt_addr_n2a_rta'
  498 |                              rt_addr_n2a_rta(family, attr));
      |                              ^~~~~~~~~~~~~~~
m_tunnel_key.c: In function 'tunnel_key_print_geneve_options':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_tunnel_key.c:536:19: note: in expansion of macro 'RTA_PAYLOAD'
  536 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_tunnel_key.c:552:28: note: in expansion of macro 'RTA_PAYLOAD'
  552 |                 data_len = RTA_PAYLOAD(tb[TCA_TUNNEL_KEY_ENC_OPT_GENEVE_DATA]);
      |                            ^~~~~~~~~~~
m_tunnel_key.c:554:53: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  554 |                               data_len, data, sizeof(data));
      |                                               ~~~~~~^~~~~~
m_tunnel_key.c: In function 'tunnel_key_print_vxlan_options':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_tunnel_key.c:583:19: note: in expansion of macro 'RTA_PAYLOAD'
  583 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
m_tunnel_key.c: In function 'tunnel_key_print_erspan_options':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_tunnel_key.c:603:19: note: in expansion of macro 'RTA_PAYLOAD'
  603 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
m_tunnel_key.c: In function 'tunnel_key_print_key_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_tunnel_key.c:639:9: note: in expansion of macro 'parse_rtattr_nested'
  639 |         parse_rtattr_nested(tb, TCA_TUNNEL_KEY_ENC_OPTS_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
m_tunnel_key.c: In function 'print_tunnel_key':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_tunnel_key.c:677:9: note: in expansion of macro 'parse_rtattr_nested'
  677 |         parse_rtattr_nested(tb, TCA_TUNNEL_KEY_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_sample.o
In file included from m_sample.c:14:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_sample.c:15:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_sample.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_sample.c: In function 'print_sample':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_sample.c:150:9: note: in expansion of macro 'parse_rtattr_nested'
  150 |         parse_rtattr_nested(tb, TCA_SAMPLE_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_ct.o
In file included from m_ct.c:14:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ct.c:15:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_ct.c:10:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ct.c: In function 'ct_parse_labels':
m_ct.c:183:38: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  183 |         if (hex2mem(str, labels, slen/2) < 0)
      |                                  ~~~~^~
m_ct.c:185:58: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  185 |         addattr_l(n, MAX_MSG, TCA_CT_LABELS, labels, slen/2);
      |                                                      ~~~~^~
m_ct.c:188:51: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  188 |                 if (hex2mem(mask, lmask, slen_mask/2) < 0)
      |                                          ~~~~~~~~~^~
m_ct.c:194:67: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  194 |         addattr_l(n, MAX_MSG, TCA_CT_LABELS_MASK, lmask, slen_mask/2);
      |                                                          ~~~~~~~~~^~
m_ct.c: In function 'parse_ct':
m_ct.c:320:46: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  320 |         addattr16(n, MAX_MSG, TCA_CT_ACTION, ct_action);
      |                                              ^~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_ct.c: In function 'ct_sprint_ip_addr':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
m_ct.c:355:45: note: in expansion of macro 'rt_addr_n2a_rta'
  355 |         return sprintf(buf, "%s%s", prefix, rt_addr_n2a_rta(family, attr));
      |                                             ^~~~~~~~~~~~~~~
m_ct.c: In function 'ct_print_nat':
m_ct.c:369:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  369 |                 done += sprintf(out + done, "src");
      |                      ^~
m_ct.c:372:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  372 |                 done += sprintf(out + done, "dst");
      |                      ^~
m_ct.c:376:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  376 |                 done += ct_sprint_ip_addr(out + done, " addr ",
      |                      ^~
m_ct.c:378:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  378 |                 done += ct_sprint_ip_addr(out + done, " addr ",
      |                      ^~
m_ct.c:383:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  383 |                         done += ct_sprint_ip_addr(out + done, "-",
      |                              ^~
m_ct.c:388:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  388 |                         done += ct_sprint_ip_addr(out + done, "-",
      |                              ^~
m_ct.c:390:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  390 |                 done += ct_sprint_port(out + done, " port ",
      |                      ^~
m_ct.c:395:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  395 |                         done += ct_sprint_port(out + done, "-",
      |                              ^~
m_ct.c: In function 'ct_print_labels':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_ct.c:416:20: note: in expansion of macro 'RTA_PAYLOAD'
  416 |         data_len = RTA_PAYLOAD(attr);
      |                    ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_ct.c:420:20: note: in expansion of macro 'RTA_PAYLOAD'
  420 |         data_len = RTA_PAYLOAD(attr);
      |                    ^~~~~~~~~~~
m_ct.c:431:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  431 |                               sizeof(out)-(p-out));
      |                                          ^
m_ct.c:431:42: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  431 |                               sizeof(out)-(p-out));
      |                               ~~~~~~~~~~~^~~~~~~~
m_ct.c: In function 'print_ct':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_ct.c:450:9: note: in expansion of macro 'parse_rtattr_nested'
  450 |         parse_rtattr_nested(tb, TCA_CT_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       m_gate.o
In file included from m_gate.c:9:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_gate.c:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from m_gate.c:4:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_gate.c: In function 'parse_gate':
m_gate.c:300:44: warning: conversion from '__s64' {aka 'long long int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  300 |                                 interval = interval_s64;
      |                                            ^~~~~~~~~~~~
m_gate.c:330:45: warning: conversion to 'int32_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  330 |                                 maxoctets = maxoctets_uint;
      |                                             ^~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_gate.c: In function 'print_gate_list':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
m_gate.c:417:15: note: in expansion of macro 'RTA_PAYLOAD'
  417 |         rem = RTA_PAYLOAD(list);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
m_gate.c:425:21: note: in expansion of macro 'RTA_NEXT'
  425 |              item = RTA_NEXT(item, rem)) {
      |                     ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
m_gate.c:425:21: note: in expansion of macro 'RTA_NEXT'
  425 |              item = RTA_NEXT(item, rem)) {
      |                     ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_gate.c:432:17: note: in expansion of macro 'parse_rtattr_nested'
  432 |                 parse_rtattr_nested(tb, TCA_GATE_ENTRY_MAX, item);
      |                 ^~~~~~~~~~~~~~~~~~~
m_gate.c:461:70: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  461 |                         print_uint(PRINT_ANY, "ipv", "\t ipv %-10u", ipv);
      |                                                                      ^~~
m_gate.c:469:36: warning: conversion to '__u32' {aka 'unsigned int'} from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  469 |                                    maxoctets);
      |                                    ^~~~~~~~~
m_gate.c: In function 'print_gate':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_gate.c:499:9: note: in expansion of macro 'parse_rtattr_nested'
  499 |         parse_rtattr_nested(tb, TCA_GATE_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
m_gate.c:540:53: warning: conversion to 'long long unsigned int' from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  540 |         print_lluint(PRINT_JSON, "base_time", NULL, base_time);
      |                                                     ^~~~~~~~~
m_gate.c:548:54: warning: conversion to 'long long unsigned int' from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  548 |         print_lluint(PRINT_JSON, "cycle_time", NULL, cycle_time);
      |                                                      ^~~~~~~~~~
m_gate.c:556:58: warning: conversion to 'long long unsigned int' from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  556 |         print_lluint(PRINT_JSON, "cycle_time_ext", NULL, cycle_time_ext);
      |                                                          ^~~~~~~~~~~~~~
    CC       p_ip.o
In file included from p_ip.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from p_ip.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from p_ip.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       p_ip6.o
In file included from p_ip6.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from p_ip6.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from p_ip6.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       p_icmp.o
In file included from p_icmp.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from p_icmp.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from p_icmp.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       p_eth.o
In file included from p_eth.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from p_eth.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from p_eth.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       p_tcp.o
In file included from p_tcp.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from p_tcp.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from p_tcp.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       p_udp.o
In file included from p_udp.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from p_udp.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from p_udp.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       em_nbyte.o
In file included from m_ematch.h:10,
                 from em_nbyte.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.h:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from em_nbyte.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
em_nbyte.c: In function 'nbyte_parse_eopt':
em_nbyte.c:74:33: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   74 |                         layer = parse_layer(a);
      |                                 ^~~~~~~~~~~
em_nbyte.c:92:18: warning: conversion from 'unsigned int' to 'short unsigned int:12' may change value [-Wconversion]
   92 |         nb.len = needle->len;
      |                  ^~~~~~
em_nbyte.c:93:20: warning: conversion from 'unsigned char' to 'unsigned char:4' may change value [-Wconversion]
   93 |         nb.layer = (__u8) layer;
      |                    ^
em_nbyte.c:98:50: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   98 |         addraw_l(n, MAX_MSG, needle->data, needle->len);
      |                                            ~~~~~~^~~~~
    CC       em_cmp.o
In file included from m_ematch.h:10,
                 from em_cmp.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.h:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from em_cmp.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
em_cmp.c: In function 'cmp_parse_eopt':
em_cmp.c:80:33: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   80 |                         layer = parse_layer(a);
      |                                 ^~~~~~~~~~~
em_cmp.c:130:21: warning: conversion from 'unsigned char' to 'unsigned char:4' may change value [-Wconversion]
  130 |         cmp.align = (__u8) align;
      |                     ^
em_cmp.c:131:21: warning: conversion from 'unsigned char' to 'unsigned char:4' may change value [-Wconversion]
  131 |         cmp.layer = (__u8) layer;
      |                     ^
em_cmp.c:132:20: warning: conversion from 'unsigned char' to 'unsigned char:4' may change value [-Wconversion]
  132 |         cmp.opnd = (__u8) opnd;
      |                    ^
    CC       em_u32.o
In file included from m_ematch.h:10,
                 from em_u32.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.h:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from em_u32.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
em_u32.c: In function 'u32_parse_eopt':
em_u32.c:83:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   83 |         if (a->len > nh_len && !memcmp(a->data, "nexthdr+", nh_len)) {
      |                                                             ^~~~~~
em_u32.c:84:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   84 |                 char buf[a->len - nh_len + 1];
      |                                 ^
em_u32.c:86:27: warning: unsigned conversion from 'int' to 'long unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
   86 |                 offmask = -1;
      |                           ^
em_u32.c:87:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   87 |                 strncpy(buf, a->data + nh_len, a->len - nh_len + 1);
      |                                                       ^
em_u32.c:112:32: warning: unsigned conversion from 'int' to 'long unsigned int' changes value from '-4' to '4294967292' [-Wsign-conversion]
  112 |                         offset &= ~3;
      |                                ^~
em_u32.c:125:32: warning: unsigned conversion from 'int' to 'long unsigned int' changes value from '-4' to '4294967292' [-Wsign-conversion]
  125 |                         offset &= ~3;
      |                                ^~
em_u32.c:140:21: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
  140 |         u_key.off = offset;
      |                     ^~~~~~
em_u32.c:141:25: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
  141 |         u_key.offmask = offmask;
      |                         ^~~~~~~
    CC       em_canid.o
In file included from m_ematch.h:10,
                 from em_canid.c:31:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.h:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from em_canid.c:20:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
em_canid.c: In function 'canid_parse_rule':
em_canid.c:75:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   75 |                                 sizeof(struct can_filter) * rules->rules_capacity);
      |                                                           ^
em_canid.c: In function 'canid_parse_eopt':
em_canid.c:108:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  108 |         rules.rules_raw = calloc(rules.rules_capacity,
      |                                  ~~~~~^~~~~~~~~~~~~~~
em_canid.c:139:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  139 |                 sizeof(struct can_filter) * rules.rules_cnt);
      |                                           ^
em_canid.c:139:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  139 |                 sizeof(struct can_filter) * rules.rules_cnt);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
em_canid.c: In function 'canid_print_eopt':
em_canid.c:154:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  154 |         rules_count = data_len / sizeof(struct can_filter);
      |                                ^
em_canid.c:154:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  154 |         rules_count = data_len / sizeof(struct can_filter);
      |                       ^~~~~~~~
    CC       em_meta.o
In file included from m_ematch.h:10,
                 from em_meta.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from m_ematch.h:11:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from em_meta.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
em_meta.c: In function 'dump_value':
em_meta.c:162:70: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  162 |                                 addattr_l(n, MAX_MSG, tlv, a->data, a->len);
      |                                                                     ~^~~~~
em_meta.c: In function 'parse_object':
em_meta.c:278:21: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  278 |         obj->kind = entry->id | (map_type(entry->mask[0]) << 12);
      |                     ^~~~~
em_meta.c:288:46: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  288 |                                 left->kind = overwrite_type(left, right);
      |                                              ^~~~~~~~~~~~~~
em_meta.c:293:47: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  293 |                                 right->kind = overwrite_type(right, left);
      |                                               ^~~~~~~~~~~~~~
em_meta.c:298:46: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  298 |                                 left->kind = overwrite_type(left, right);
      |                                              ^~~~~~~~~~~~~~
em_meta.c:300:47: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  300 |                                 right->kind = overwrite_type(right, left);
      |                                               ^~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
em_meta.c: In function 'print_value':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
em_meta.c:453:57: note: in expansion of macro 'RTA_PAYLOAD'
  453 |                         print_binary(fd, RTA_DATA(rta), RTA_PAYLOAD(rta));
      |                                                         ^~~~~~~~~~~
    CC       q_mqprio.o
In file included from q_mqprio.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_mqprio.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_mqprio.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_mqprio.c: In function 'mqprio_parse_opt':
q_mqprio.c:220:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  220 |         tail->rta_len = (void *)NLMSG_TAIL(n) - (void *)tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_mqprio.c: In function 'mqprio_print_opt':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_mqprio.c:236:15: note: in expansion of macro 'RTA_PAYLOAD'
  236 |         len = RTA_PAYLOAD(opt) - RTA_ALIGN(sizeof(*qopt));
      |               ^~~~~~~~~~~
q_mqprio.c:253:86: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  253 |                 print_uint(PRINT_ANY, NULL, "%u) ", qopt->offset[i] + qopt->count[i] - 1);
      |                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_mqprio.c:285:35: note: in expansion of macro 'RTA_PAYLOAD'
  285 |                         int rem = RTA_PAYLOAD(tb[TCA_MQPRIO_MIN_RATE64]);
      |                                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
q_mqprio.c:289:50: note: in expansion of macro 'RTA_NEXT'
  289 |                              RTA_OK(r, rem); r = RTA_NEXT(r, rem)) {
      |                                                  ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
q_mqprio.c:289:50: note: in expansion of macro 'RTA_NEXT'
  289 |                              RTA_OK(r, rem); r = RTA_NEXT(r, rem)) {
      |                                                  ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_mqprio.c:302:35: note: in expansion of macro 'RTA_PAYLOAD'
  302 |                         int rem = RTA_PAYLOAD(tb[TCA_MQPRIO_MAX_RATE64]);
      |                                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
q_mqprio.c:306:50: note: in expansion of macro 'RTA_NEXT'
  306 |                              RTA_OK(r, rem); r = RTA_NEXT(r, rem)) {
      |                                                  ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
q_mqprio.c:306:50: note: in expansion of macro 'RTA_NEXT'
  306 |                              RTA_OK(r, rem); r = RTA_NEXT(r, rem)) {
      |                                                  ^~~~~~~~
    CC       q_codel.o
In file included from q_codel.c:50:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_codel.c:51:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_codel.c:41:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_codel.c: In function 'codel_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_codel.c:142:9: note: in expansion of macro 'parse_rtattr_nested'
  142 |         parse_rtattr_nested(tb, TCA_CODEL_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_codel.c: In function 'codel_print_xstats':
q_codel.c:207:42: warning: conversion to '__u32' {aka 'unsigned int'} from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  207 |                              sprint_time(-st->drop_next, b1));
      |                                          ^~~~~~~~~~~~~~
q_codel.c:210:44: warning: conversion to '__u32' {aka 'unsigned int'} from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  210 |                              sprint_time(st->drop_next, b1));
      |                                          ~~^~~~~~~~~~~
    CC       q_fq_codel.o
In file included from q_fq_codel.c:47:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_fq_codel.c:48:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_fq_codel.c:38:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_fq_codel.c: In function 'fq_codel_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_fq_codel.c:210:9: note: in expansion of macro 'parse_rtattr_nested'
  210 |         parse_rtattr_nested(tb, TCA_FQ_CODEL_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_fq_codel.c: In function 'fq_codel_print_xstats':
q_fq_codel.c:339:53: warning: conversion to '__u32' {aka 'unsigned int'} from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  339 |                                         sprint_time(-st->class_stats.drop_next, b1));
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
q_fq_codel.c:342:68: warning: conversion to '__u32' {aka 'unsigned int'} from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  342 |                                         sprint_time(st->class_stats.drop_next, b1));
      |                                                     ~~~~~~~~~~~~~~~^~~~~~~~~~
    CC       q_fq.o
In file included from q_fq.c:48:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_fq.c:49:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_fq.c:38:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_fq.c: In function 'fq_parse_opt':
q_fq.c:165:39: warning: conversion from '__s64' {aka 'long long int'} to 'unsigned int' may change value [-Wconversion]
  165 |                         timer_slack = t64;
      |                                       ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_fq.c: In function 'fq_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_fq.c:308:9: note: in expansion of macro 'parse_rtattr_nested'
  308 |         parse_rtattr_nested(tb, TCA_FQ_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_fq.c:335:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  335 |                 pacing = rta_getattr_u32(tb[TCA_FQ_RATE_ENABLE]);
      |                          ^~~~~~~~~~~~~~~
q_fq.c: In function 'fq_print_xstats':
q_fq.c:443:32: warning: conversion to 'long long unsigned int' from '__s64' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  443 |                              st->time_next_delayed_flow);
      |                              ~~^~~~~~~~~~~~~~~~~~~~~~~~
    CC       q_pie.o
In file included from q_pie.c:28:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_pie.c:29:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_pie.c:18:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_pie.c: In function 'pie_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_pie.c:154:9: note: in expansion of macro 'parse_rtattr_nested'
  154 |         parse_rtattr_nested(tb, TCA_PIE_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_fq_pie.o
In file included from q_fq_pie.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_fq_pie.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_fq_pie.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_fq_pie.c: In function 'fq_pie_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_fq_pie.c:196:9: note: in expansion of macro 'parse_rtattr_nested'
  196 |         parse_rtattr_nested(tb, TCA_FQ_PIE_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_fq_pie.c:250:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  250 |                 ecn = rta_getattr_u32(tb[TCA_FQ_PIE_ECN]);
      |                       ^~~~~~~~~~~~~~~
q_fq_pie.c:256:28: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  256 |                 bytemode = rta_getattr_u32(tb[TCA_FQ_PIE_BYTEMODE]);
      |                            ^~~~~~~~~~~~~~~
q_fq_pie.c:263:25: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  263 |                         rta_getattr_u32(tb[TCA_FQ_PIE_DQ_RATE_ESTIMATOR]);
      |                         ^~~~~~~~~~~~~~~
    CC       q_cake.o
In file included from q_cake.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_cake.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_cake.c:11:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_cake.c: In function 'cake_parse_opt':
q_cake.c:403:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  403 |         tail->rta_len = (void *) NLMSG_TAIL(n) - (void *) tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_cake.c: In function 'cake_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_cake.c:441:9: note: in expansion of macro 'parse_rtattr_nested'
  441 |         parse_rtattr_nested(tb, TCA_CAKE_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_cake.c:455:28: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  455 |                 autorate = rta_getattr_u32(tb[TCA_CAKE_AUTORATE]);
      |                            ^~~~~~~~~~~~~~~
q_cake.c:476:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  476 |                 nat = rta_getattr_u32(tb[TCA_CAKE_NAT]);
      |                       ^~~~~~~~~~~~~~~
q_cake.c:487:24: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  487 |                 wash = rta_getattr_u32(tb[TCA_CAKE_WASH]);
      |                        ^~~~~~~~~~~~~~~
q_cake.c:491:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  491 |                 atm = rta_getattr_u32(tb[TCA_CAKE_ATM]);
      |                       ^~~~~~~~~~~~~~~
q_cake.c:499:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  499 |                 mpu = rta_getattr_u32(tb[TCA_CAKE_MPU]);
      |                       ^~~~~~~~~~~~~~~
q_cake.c:503:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  503 |                 ingress = rta_getattr_u32(tb[TCA_CAKE_INGRESS]);
      |                           ^~~~~~~~~~~~~~~
q_cake.c:507:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  507 |                 ack_filter = rta_getattr_u32(tb[TCA_CAKE_ACK_FILTER]);
      |                              ^~~~~~~~~~~~~~~
q_cake.c:511:29: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  511 |                 split_gso = rta_getattr_u32(tb[TCA_CAKE_SPLIT_GSO]);
      |                             ^~~~~~~~~~~~~~~
q_cake.c:572:57: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  572 |                 print_uint(PRINT_ANY, "mpu", "mpu %u ", mpu);
      |                                                         ^~~
q_cake.c: In function 'cake_print_xstats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_cake.c:631:9: note: in expansion of macro 'parse_rtattr_nested'
  631 |         parse_rtattr_nested(st, TCA_CAKE_STATS_MAX, xstats);
      |         ^~~~~~~~~~~~~~~~~~~
q_cake.c:690:53: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  690 |                                         sprint_time(-drop_next, b1));
      |                                                     ^~~~~~~~~~
q_cake.c:693:41: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  693 |                                         drop_next);
      |                                         ^~~~~~~~~
q_cake.c:695:53: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  695 |                                         sprint_time(drop_next, b1));
      |                                                     ^~~~~~~~~
q_cake.c:708:53: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  708 |                                         sprint_time(blue_timer, b1));
      |                                                     ^~~~~~~~~~
q_cake.c:711:41: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  711 |                                         blue_timer);
      |                                         ^~~~~~~~~~
q_cake.c:713:53: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  713 |                                         sprint_time(blue_timer, b1));
      |                                                     ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_cake.c:727:17: note: in expansion of macro 'parse_rtattr_nested'
  727 |                 parse_rtattr_nested(tins, TC_CAKE_MAX_TINS,
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_cake.c:731:25: note: in expansion of macro 'parse_rtattr_nested'
  731 |                         parse_rtattr_nested(tstat[i-1], TCA_CAKE_TIN_STATS_MAX,
      |                         ^~~~~~~~~~~~~~~~~~~
    CC       q_hhf.o
In file included from q_hhf.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_hhf.c:16:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_hhf.c:6:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_hhf.c: In function 'hhf_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_hhf.c:136:9: note: in expansion of macro 'parse_rtattr_nested'
  136 |         parse_rtattr_nested(tb, TCA_HHF_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_clsact.o
In file included from q_clsact.c:5:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_clsact.c:6:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_clsact.c:2:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       e_bpf.o
In file included from e_bpf.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from e_bpf.c:17:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from e_bpf.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netinet/in.h:23,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24,
                 from e_bpf.c:19:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
e_bpf.c: In function 'parse_bpf':
e_bpf.c:135:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  135 |         envp_run = malloc(sizeof(*envp_run) * env_num);
      |                                             ^
    CC       f_matchall.o
In file included from ../include/uapi/linux/if.h:23,
                 from f_matchall.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from f_matchall.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from f_matchall.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
f_matchall.c: In function 'matchall_parse_opt':
f_matchall.c:55:25: warning: conversion to '__u32' {aka 'unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
   55 |         t->tcm_handle = h;
      |                         ^
f_matchall.c:111:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  111 |         tail->rta_len = (((void *)n)+n->nlmsg_len) - (void *)tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
f_matchall.c: In function 'matchall_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
f_matchall.c:124:9: note: in expansion of macro 'parse_rtattr_nested'
  124 |         parse_rtattr_nested(tb, TCA_MATCHALL_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_cbs.o
In file included from q_cbs.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_cbs.c:23:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_cbs.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_cbs.c: In function 'cbs_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_cbs.c:119:9: note: in expansion of macro 'parse_rtattr_nested'
  119 |         parse_rtattr_nested(tb, TCA_CBS_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       q_etf.o
In file included from q_etf.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_etf.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_etf.c:14:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_etf.c: In function 'etf_parse_opt':
q_etf.c:154:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  154 |         tail->rta_len = (void *) NLMSG_TAIL(n) - (void *) tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_etf.c: In function 'etf_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_etf.c:166:9: note: in expansion of macro 'parse_rtattr_nested'
  166 |         parse_rtattr_nested(tb, TCA_ETF_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_etf.c:178:57: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  178 |         print_uint(PRINT_ANY, "delta", "delta %d ", qopt->delta);
      |                                                     ~~~~^~~~~~~
    CC       q_taprio.o
In file included from q_taprio.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_taprio.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_taprio.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_taprio.c: In function 'taprio_parse_opt':
q_taprio.c:225:31: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  225 |                         cmd = err;
      |                               ^~~
q_taprio.c:354:25: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  354 |         tail->rta_len = (void *) NLMSG_TAIL(n) - (void *) tail;
      |                         ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_taprio.c: In function 'print_sched_list':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_taprio.c:367:15: note: in expansion of macro 'RTA_PAYLOAD'
  367 |         rem = RTA_PAYLOAD(list);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
q_taprio.c:373:63: note: in expansion of macro 'RTA_NEXT'
  373 |         for (item = RTA_DATA(list); RTA_OK(item, rem); item = RTA_NEXT(item, rem)) {
      |                                                               ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
q_taprio.c:373:63: note: in expansion of macro 'RTA_NEXT'
  373 |         for (item = RTA_DATA(list); RTA_OK(item, rem); item = RTA_NEXT(item, rem)) {
      |                                                               ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_taprio.c:378:17: note: in expansion of macro 'parse_rtattr_nested'
  378 |                 parse_rtattr_nested(tb, TCA_TAPRIO_SCHED_ENTRY_MAX, item);
      |                 ^~~~~~~~~~~~~~~~~~~
q_taprio.c: In function 'print_schedule':
q_taprio.c:421:66: warning: conversion to 'long long unsigned int' from 'int64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  421 |         print_lluint(PRINT_ANY, "base_time", "\tbase-time %lld", base_time);
      |                                                                  ^~~~~~~~~
q_taprio.c:423:67: warning: conversion to 'long long unsigned int' from 'int64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  423 |         print_lluint(PRINT_ANY, "cycle_time", " cycle-time %lld", cycle_time);
      |                                                                   ^~~~~~~~~~
q_taprio.c:426:52: warning: conversion to 'long long unsigned int' from 'int64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  426 |                      " cycle-time-extension %lld", cycle_time_extension);
      |                                                    ^~~~~~~~~~~~~~~~~~~~
q_taprio.c: In function 'taprio_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_taprio.c:443:9: note: in expansion of macro 'parse_rtattr_nested'
  443 |         parse_rtattr_nested(tb, TCA_TAPRIO_ATTR_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_taprio.c:485:32: warning: conversion to '__u32' {aka 'unsigned int'} from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  485 |                 txtime_delay = rta_getattr_s32(tb[TCA_TAPRIO_ATTR_TXTIME_DELAY]);
      |                                ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_taprio.c:494:17: note: in expansion of macro 'parse_rtattr_nested'
  494 |                 parse_rtattr_nested(t, TCA_TAPRIO_ATTR_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
    CC       q_plug.o
In file included from q_plug.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_plug.c:18:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_plug.c:8:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
    CC       q_ets.o
In file included from q_ets.c:16:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from q_ets.c:17:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from q_ets.c:7:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
q_ets.c: In function 'parse_nbands':
q_ets.c:56:20: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
   56 |         *pnbands = tmp;
      |                    ^~~
q_ets.c: In function 'ets_parse_opt':
q_ets.c:134:44: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  134 |                         priomap[nprio++] = band;
      |                                            ^~~~
q_ets.c:144:26: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  144 |                 nbands = nquanta + nstrict;
      |                          ^~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
q_ets.c: In function 'ets_print_opt_quanta':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_ets.c:223:19: note: in expansion of macro 'RTA_PAYLOAD'
  223 |         int len = RTA_PAYLOAD(opt);
      |                   ^~~~~~~~~~~
q_ets.c:233:57: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  233 |                 parse_rtattr(tb, TCA_ETS_MAX, attr, len - offset);
      |                                                         ^
q_ets.c:233:57: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  233 |                 parse_rtattr(tb, TCA_ETS_MAX, attr, len - offset);
      |                                                     ~~~~^~~~~~~~
q_ets.c: In function 'ets_print_opt_priomap':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
q_ets.c:252:19: note: in expansion of macro 'RTA_PAYLOAD'
  252 |         int len = RTA_PAYLOAD(opt);
      |                   ^~~~~~~~~~~
q_ets.c:262:57: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  262 |                 parse_rtattr(tb, TCA_ETS_MAX, attr, len - offset);
      |                                                         ^
q_ets.c:262:57: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  262 |                 parse_rtattr(tb, TCA_ETS_MAX, attr, len - offset);
      |                                                     ~~~~^~~~~~~~
q_ets.c: In function 'ets_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_ets.c:289:9: note: in expansion of macro 'parse_rtattr_nested'
  289 |         parse_rtattr_nested(tb, TCA_ETS_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
q_ets.c: In function 'ets_print_copt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
q_ets.c:321:9: note: in expansion of macro 'parse_rtattr_nested'
  321 |         parse_rtattr_nested(tb, TCA_ETS_MAX, opt);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       em_ipt.o
In file included from ../include/uapi/linux/in.h:23,
                 from ../include/uapi/linux/netfilter.h:7,
                 from ../include/xtables.h:19,
                 from em_ipt.c:15:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/getopt.h:24,
                 from em_ipt.c:11:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from m_ematch.h:10,
                 from em_ipt.c:16:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
em_ipt.c: In function 'fake_xt_entry_match':
em_ipt.c:53:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   53 |         m = xtables_calloc(1, XT_ALIGN(sizeof(*m)) + data_size);
      |                                                    ^
em_ipt.c:58:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   58 |                 memcpy(m->data, data, data_size);
      |                                       ^~~~~~~~~
em_ipt.c:60:32: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   60 |         m->u.user.match_size = data_size;
      |                                ^~~~~~~~~
em_ipt.c: In function 'em_ipt_parse_eopt_argv':
em_ipt.c:114:61: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  114 |                         match->m = fake_xt_entry_match(match->size, NULL);
      |                                                        ~~~~~^~~~~~
em_ipt.c:146:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  146 |                         xtables_option_mpcall(c, argv, 0, match, NULL);
      |                                               ^
em_ipt.c:165:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  165 |                   match->size);
      |                   ~~~~~^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
em_ipt.c: In function 'em_ipt_print_epot':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
em_ipt.c:193:40: note: in expansion of macro 'RTA_PAYLOAD'
  193 |         match->m = fake_xt_entry_match(RTA_PAYLOAD(tb[TCA_EM_IPT_MATCH_DATA]),
      |                                        ^~~~~~~~~~~
    CC       em_ipset.o
In file included from ../include/uapi/linux/in.h:23,
                 from ../include/uapi/linux/netfilter.h:7,
                 from ../include/xtables.h:19,
                 from em_ipset.c:26:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from em_ipset.c:18:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from m_ematch.h:10,
                 from em_ipset.c:42:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
m_ematch.h: In function 'bstrcmp':
m_ematch.h:39:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   39 |         int len = strlen(text);
      |                   ^~~~~~
m_ematch.h:40:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                        ^
m_ematch.h:40:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |         int d = b->len - len;
      |                 ^
m_ematch.h:43:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   43 |                 return strncmp(b->data, text, len);
      |                                               ^~~
em_ipset.c: In function 'get_set_byid':
em_ipset.c:127:25: warning: conversion from 'unsigned int' to 'ip_set_id_t' {aka 'short unsigned int'} may change value [-Wconversion]
  127 |         req.set.index = idx;
      |                         ^~~
    CC       tc_core.o
In file included from tc_core.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
tc_core.c: In function 'tc_core_time2big':
tc_core.c:35:11: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
   35 |         t *= tick_in_usec;
      |           ^~
tc_core.c:35:14: warning: conversion from 'double' to '__u64' {aka 'long long unsigned int'} may change value [-Wfloat-conversion]
   35 |         t *= tick_in_usec;
      |              ^~~~~~~~~~~~
tc_core.c: In function 'tc_core_time2tick':
tc_core.c:42:20: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   42 |         return time*tick_in_usec;
      |                ~~~~^~~~~~~~~~~~~
tc_core.c: In function 'tc_core_tick2time':
tc_core.c:47:20: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   47 |         return tick/tick_in_usec;
      |                ~~~~^~~~~~~~~~~~~
tc_core.c: In function 'tc_core_time2ktime':
tc_core.c:52:21: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   52 |         return time * clock_factor;
      |                ~~~~~^~~~~~~~~~~~~~
tc_core.c: In function 'tc_core_ktime2time':
tc_core.c:57:22: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   57 |         return ktime / clock_factor;
      |                ~~~~~~^~~~~~~~~~~~~~
tc_core.c: In function 'tc_calc_xmittime':
tc_core.c:62:52: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   62 |         return tc_core_time2tick(TIME_UNITS_PER_SEC*((double)size/(double)rate));
tc_core.c: In function 'tc_calc_xmitsize':
tc_core.c:67:55: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   67 |         return ((double)rate*tc_core_tick2time(ticks))/TIME_UNITS_PER_SEC;
tc_core.c: In function 'tc_align_to_atm':
tc_core.c:84:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   84 |         cells = size / ATM_CELL_PAYLOAD;
      |                 ^~~~
tc_core.c:89:16: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   89 |         return linksize;
      |                ^~~~~~~~
tc_core.c: In function 'tc_calc_rtable':
tc_core.c:145:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  145 |                 sz = tc_adjust_size((i + 1) << cell_log, mpu, linklayer);
      |                                     ~~~~~~~~^~~~~~~~~~~
tc_core.c:150:23: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  150 |         r->cell_log = cell_log;
      |                       ^~~~~~~~
tc_core.c: In function 'tc_calc_rtable_64':
tc_core.c:174:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  174 |                 sz = tc_adjust_size((i + 1) << cell_log, mpu, linklayer);
      |                                     ~~~~~~~~^~~~~~~~~~~
tc_core.c:179:23: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  179 |         r->cell_log = cell_log;
      |                       ^~~~~~~~
tc_core.c: In function 'tc_calc_size_table':
tc_core.c:218:18: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  218 |         for (i = s->tsize - 1; i >= 0; i--) {
      |                  ^
tc_core.c:219:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  219 |                 sz = tc_adjust_size((i + 1) << s->cell_log, s->mpu, linklayer);
      |                                     ~~~~~~~~^~~~~~~~~~~~~~
tc_core.c:224:30: warning: conversion from 'unsigned int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  224 |                 (*stab)[i] = sz >> s->size_log;
      |                              ^~
    CC       tc_red.o
In file included from tc_red.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_red.c:25:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_red.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
tc_red.c: In function 'tc_red_eval_P':
tc_red.c:33:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   33 |         int i = qmax - qmin;
      |                 ^~~~
tc_red.c: In function 'tc_red_eval_idle_damping':
tc_red.c:95:27: warning: conversion from 'double' to '__u8' {aka 'unsigned char'} may change value [-Wfloat-conversion]
   95 |                 sbuf[i] = (i<<clog)*lW;
      |                           ^
    CC       tc_cbq.o
In file included from tc_cbq.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
tc_cbq.c: In function 'tc_cbq_calc_maxidle':
tc_cbq.c:42:55: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   42 |         return tc_core_time2tick(maxidle*(1<<ewma_log)*TIME_UNITS_PER_SEC);
tc_cbq.c: In function 'tc_cbq_calc_offtime':
tc_cbq.c:57:41: warning: conversion from 'double' to 'unsigned int' may change value [-Wfloat-conversion]
   57 |         return tc_core_time2tick(offtime*TIME_UNITS_PER_SEC);
    CC       tc_estimator.o
In file included from tc_estimator.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       tc_stab.o
In file included from tc_stab.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from tc_util.h:7,
                 from tc_stab.c:26:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tc_stab.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
tc_stab.c: In function 'print_size_table':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
tc_stab.c:112:9: note: in expansion of macro 'parse_rtattr_nested'
  112 |         parse_rtattr_nested(tb, TCA_STAB_MAX, rta);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       tc_qevent.o
In file included from tc_qevent.c:11:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    AR       libtc.a
    LINK     tc
    CC       m_xt.so
In file included from ../include/uapi/linux/in.h:23,
                 from ../include/uapi/linux/netfilter.h:7,
                 from m_xt.c:18:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:22,
                 from m_xt.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from m_xt.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
m_xt.c: In function 'build_st':
m_xt.c:96:44: warning: conversion from 'size_t' {aka 'unsigned int'} to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   96 |                 target->t->u.target_size = size;
      |                                            ^~~~
m_xt.c: In function 'parse_ipt':
m_xt.c:212:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  212 |                                 xtables_option_tpcall(c, argv, 0, m, &fw);
      |                                                       ^
m_xt.c:283:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  283 |                 size = 1 + strlen(tname);
      |                        ^
m_xt.c:285:27: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  285 |         strncpy(k, tname, size);
      |                           ^~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
m_xt.c: In function 'print_ipt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
m_xt.c:331:9: note: in expansion of macro 'parse_rtattr_nested'
  331 |         parse_rtattr_nested(tb, TCA_IPT_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
rm emp_ematch.lex.c

ip
    CC       ip.o
In file included from ip.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ip.c:23:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from ip.c:16:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24,
                 from ip.c:27:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
ip.c: In function 'main':
ip.c:284:34: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  284 |                         rcvbuf = size;
      |                                  ^~~~
    CC       ipaddress.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ipaddress.c:28:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ipaddress.c:14:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipaddress.c:35:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipaddress.c:37:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipaddress.c: In function 'print_link_flags':
ipaddress.c:90:15: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-65' to '4294967231' [-Wsign-conversion]
   90 |         flags &= ~IFF_RUNNING;
      |               ^~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-9' to '4294967287' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:94:9: note: in expansion of macro '_PF'
   94 |         _PF(LOOPBACK);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-3' to '4294967293' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:95:9: note: in expansion of macro '_PF'
   95 |         _PF(BROADCAST);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-17' to '4294967279' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:96:9: note: in expansion of macro '_PF'
   96 |         _PF(POINTOPOINT);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-4097' to '4294963199' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:97:9: note: in expansion of macro '_PF'
   97 |         _PF(MULTICAST);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-129' to '4294967167' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:98:9: note: in expansion of macro '_PF'
   98 |         _PF(NOARP);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-513' to '4294966783' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:99:9: note: in expansion of macro '_PF'
   99 |         _PF(ALLMULTI);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-257' to '4294967039' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:100:9: note: in expansion of macro '_PF'
  100 |         _PF(PROMISC);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1025' to '4294966271' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:101:9: note: in expansion of macro '_PF'
  101 |         _PF(MASTER);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-2049' to '4294965247' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:102:9: note: in expansion of macro '_PF'
  102 |         _PF(SLAVE);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-5' to '4294967291' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:103:9: note: in expansion of macro '_PF'
  103 |         _PF(DEBUG);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-32769' to '4294934527' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:104:9: note: in expansion of macro '_PF'
  104 |         _PF(DYNAMIC);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-16385' to '4294950911' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:105:9: note: in expansion of macro '_PF'
  105 |         _PF(AUTOMEDIA);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-8193' to '4294959103' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:106:9: note: in expansion of macro '_PF'
  106 |         _PF(PORTSEL);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-33' to '4294967263' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:107:9: note: in expansion of macro '_PF'
  107 |         _PF(NOTRAILERS);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-2' to '4294967294' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:108:9: note: in expansion of macro '_PF'
  108 |         _PF(UP);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-65537' to '4294901759' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:109:9: note: in expansion of macro '_PF'
  109 |         _PF(LOWER_UP);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-131073' to '4294836223' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:110:9: note: in expansion of macro '_PF'
  110 |         _PF(DORMANT);
      |         ^~~
ipaddress.c:92:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-262145' to '4294705151' [-Wsign-conversion]
   92 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
ipaddress.c:111:9: note: in expansion of macro '_PF'
  111 |         _PF(ECHO);
      |         ^~~
ipaddress.c: In function 'print_queuelen':
ipaddress.c:166:24: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  166 |                 qlen = rta_getattr_u32(tb[IFLA_TXQLEN]);
      |                        ^~~~~~~~~~~~~~~
ipaddress.c: In function 'print_linkmode':
ipaddress.c:201:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  201 |                           mode);
      |                           ^~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
ipaddress.c: In function 'parse_link_kind':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:214:9: note: in expansion of macro 'parse_rtattr_nested'
  214 |         parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb);
      |         ^~~~~~~~~~~~~~~~~~~
ipaddress.c: In function 'print_linktype':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:237:9: note: in expansion of macro 'parse_rtattr_nested'
  237 |         parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:252:33: note: in expansion of macro 'parse_rtattr_nested'
  252 |                                 parse_rtattr_nested(attr, lu->maxattr,
      |                                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:286:33: note: in expansion of macro 'parse_rtattr_nested'
  286 |                                 parse_rtattr_nested(attr, slave_lu->maxattr,
      |                                 ^~~~~~~~~~~~~~~~~~~
ipaddress.c: In function 'print_af_spec':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:230:48: note: in expansion of macro 'RTA_PAYLOAD'
  230 |         (parse_rtattr_one(type, RTA_DATA(rta), RTA_PAYLOAD(rta)))
      |                                                ^~~~~~~~~~~
ipaddress.c:303:22: note: in expansion of macro 'parse_rtattr_one_nested'
  303 |         inet6_attr = parse_rtattr_one_nested(AF_INET6, af_spec_attr);
      |                      ^~~~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:307:9: note: in expansion of macro 'parse_rtattr_nested'
  307 |         parse_rtattr_nested(tb, IFLA_INET6_MAX, inet6_attr);
      |         ^~~~~~~~~~~~~~~~~~~
ipaddress.c: In function 'print_vfinfo':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:365:9: note: in expansion of macro 'parse_rtattr_nested'
  365 |         parse_rtattr_nested(vf, IFLA_VF_MAX, vfinfo);
      |         ^~~~~~~~~~~~~~~~~~~
ipaddress.c:372:52: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  372 |         print_int(PRINT_ANY, "vf", "vf %d ", vf_mac->vf);
      |                                              ~~~~~~^~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipaddress.c:406:27: note: in expansion of macro 'RTA_PAYLOAD'
  406 |                 int rem = RTA_PAYLOAD(vfvlanlist);
      |                           ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ipaddress.c:410:42: note: in expansion of macro 'RTA_NEXT'
  410 |                      RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                          ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ipaddress.c:410:42: note: in expansion of macro 'RTA_NEXT'
  410 |                      RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                          ^~~~~~~~
ipaddress.c:419:55: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  419 |                                           vf_vlan_info->vlan);
      |                                           ~~~~~~~~~~~~^~~~~~
ipaddress.c:424:55: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  424 |                                           vf_vlan_info->qos);
      |                                           ~~~~~~~~~~~~^~~~~
ipaddress.c:443:42: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  443 |                                   vf_vlan->vlan);
      |                                   ~~~~~~~^~~~~~
ipaddress.c:445:72: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  445 |                         print_int(PRINT_ANY, "qos", ", qos %d", vf_vlan->qos);
      |                                                                 ~~~~~~~^~~~~
ipaddress.c:456:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  456 |                 int max_tx = vf_rate->max_tx_rate;
      |                              ^~~~~~~
ipaddress.c:457:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  457 |                 int min_tx = vf_rate->min_tx_rate;
      |                              ^~~~~~~
ipaddress.c:461:64: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  461 |                         print_uint(PRINT_JSON, "max_tx", NULL, max_tx);
      |                                                                ^~~~~~
ipaddress.c:462:63: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  462 |                         print_uint(PRINT_ANY, "min_tx", NULL, min_tx);
      |                                                               ^~~~~~
In file included from ipaddress.c:23:
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
ipaddress.c:486:38: note: in expansion of macro 'ntohll'
  486 |                 uint64_t node_guid = ntohll(guid->guid);
      |                                      ^~~~~~
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
ipaddress.c:495:38: note: in expansion of macro 'ntohll'
  495 |                 uint64_t port_guid = ntohll(guid->guid);
      |                                      ^~~~~~
ipaddress.c: In function 'print_num':
ipaddress.c:607:33: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
  607 |                  (double) count / powi, *prefix, use_iec ? "i" : "");
      |                                 ^
ipaddress.c: In function 'print_vf_stats64':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:621:9: note: in expansion of macro 'parse_rtattr_nested'
  621 |         parse_rtattr_nested(vf, IFLA_VF_STATS_MAX, vfstats);
      |         ^~~~~~~~~~~~~~~~~~~
ipaddress.c: In function 'print_link_stats':
ipaddress.c:905:35: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  905 |                      n->nlmsg_len - NLMSG_LENGTH(sizeof(*ifi)));
ipaddress.c: In function 'print_linkinfo_brief':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipaddress.c:929:52: note: in expansion of macro 'RTA_PAYLOAD'
  929 |                                                    RTA_PAYLOAD(tb[IFLA_ADDRESS]),
      |                                                    ^~~~~~~~~~~
ipaddress.c: In function 'print_link_event':
ipaddress.c:957:60: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  957 |                 print_int(PRINT_ANY, "event", "event %d ", event);
      |                                                            ^~~~~
ipaddress.c: In function 'print_proto_down':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:981:17: note: in expansion of macro 'parse_rtattr_nested'
  981 |                 parse_rtattr_nested(preason, IFLA_PROTO_DOWN_REASON_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
ipaddress.c: In function 'print_linkinfo':
ipaddress.c:1010:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1010 |         int len = n->nlmsg_len;
      |                   ^
ipaddress.c:1019:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1019 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |             ^~
In file included from ../include/uapi/linux/if_link.h:6,
                 from ../include/uapi/linux/netdevice.h:32:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipaddress.c:1019:16: note: in expansion of macro 'NLMSG_LENGTH'
 1019 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |                ^~~~~~~~~~~~
ipaddress.c:1038:29: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1038 |                 int group = rta_getattr_u32(tb[IFLA_GROUP]);
      |                             ^~~~~~~~~~~~~~~
ipaddress.c:1045:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1045 |                 int master = rta_getattr_u32(tb[IFLA_MASTER]);
      |                              ^~~~~~~~~~~~~~~
ipaddress.c:1072:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1072 |                           rta_getattr_u32(tb[IFLA_MTU]));
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ipaddress.c:1081:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1081 |                 int master = rta_getattr_u32(tb[IFLA_MASTER]);
      |                              ^~~~~~~~~~~~~~~
ipaddress.c:1085:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1085 |                              ll_index_to_name(master));
      |                                               ^~~~~~
ipaddress.c:1095:29: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1095 |                 int group = rta_getattr_u32(tb[IFLA_GROUP]);
      |                             ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipaddress.c:1121:56: note: in expansion of macro 'RTA_PAYLOAD'
 1121 |                                                        RTA_PAYLOAD(tb[IFLA_ADDRESS]),
      |                                                        ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipaddress.c:1138:56: note: in expansion of macro 'RTA_PAYLOAD'
 1138 |                                                        RTA_PAYLOAD(tb[IFLA_BROADCAST]),
      |                                                        ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipaddress.c:1155:64: note: in expansion of macro 'RTA_PAYLOAD'
 1155 |                                                                RTA_PAYLOAD(tb[IFLA_PERM_ADDRESS]),
      |                                                                ^~~~~~~~~~~
ipaddress.c:1163:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1163 |                 int id = rta_getattr_u32(tb[IFLA_LINK_NETNSID]);
      |                          ^~~~~~~~~~~~~~~
ipaddress.c:1184:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1184 |                 int id = rta_getattr_u32(tb[IFLA_NEW_NETNSID]);
      |                          ^~~~~~~~~~~~~~~
ipaddress.c:1193:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1193 |                 int id = rta_getattr_u32(tb[IFLA_NEW_IFINDEX]);
      |                          ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipaddress.c:1278:46: note: in expansion of macro 'RTA_PAYLOAD'
 1278 |                                              RTA_PAYLOAD(tb[IFLA_PHYS_PORT_ID]),
      |                                              ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipaddress.c:1287:52: note: in expansion of macro 'RTA_PAYLOAD'
 1287 |                                                    RTA_PAYLOAD(tb[IFLA_PHYS_SWITCH_ID]),
      |                                                    ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipaddress.c:1324:27: note: in expansion of macro 'RTA_PAYLOAD'
 1324 |                 int rem = RTA_PAYLOAD(vflist), count = 0;
      |                           ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ipaddress.c:1327:64: note: in expansion of macro 'RTA_NEXT'
 1327 |                 for (i = RTA_DATA(vflist); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                                ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ipaddress.c:1327:64: note: in expansion of macro 'RTA_NEXT'
 1327 |                 for (i = RTA_DATA(vflist); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                                ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipaddress.c:1340:27: note: in expansion of macro 'RTA_PAYLOAD'
 1340 |                 int rem = RTA_PAYLOAD(proplist);
      |                           ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ipaddress.c:1344:26: note: in expansion of macro 'RTA_NEXT'
 1344 |                      i = RTA_NEXT(i, rem)) {
      |                          ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ipaddress.c:1344:26: note: in expansion of macro 'RTA_NEXT'
 1344 |                      i = RTA_NEXT(i, rem)) {
      |                          ^~~~~~~~
ipaddress.c: In function 'get_filter':
ipaddress.c:1496:30: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1496 |                 filter.flags &= ~flag_data->mask;
      |                              ^~
ipaddress.c:1496:33: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
 1496 |                 filter.flags &= ~flag_data->mask;
      |                                 ^
ipaddress.c:1498:30: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1498 |                 filter.flags |= flag_data->mask;
      |                              ^~
ipaddress.c:1498:33: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
 1498 |                 filter.flags |= flag_data->mask;
      |                                 ^~~~~~~~~
ipaddress.c:1499:25: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1499 |         filter.flagmask |= flag_data->mask;
      |                         ^~
ipaddress.c:1499:28: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
 1499 |         filter.flagmask |= flag_data->mask;
      |                            ^~~~~~~~~
ipaddress.c: In function 'ifa_label_match_rta':
ipaddress.c:1513:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1513 |                 label = ll_index_to_name(ifindex);
      |                                          ^~~~~~~
ipaddress.c: In function 'print_addrinfo':
ipaddress.c:1522:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1522 |         int len = n->nlmsg_len;
      |                   ^
ipaddress.c:1530:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1530 |         len -= NLMSG_LENGTH(sizeof(*ifa));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipaddress.c:1530:16: note: in expansion of macro 'NLMSG_LENGTH'
 1530 |         len -= NLMSG_LENGTH(sizeof(*ifa));
      |                ^~~~~~~~~~~~
ipaddress.c:1540:35: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1540 |                      n->nlmsg_len - NLMSG_LENGTH(sizeof(*ifa)));
ipaddress.c:1553:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1553 |         if ((filter.flags ^ ifa_flags) & filter.flagmask)
      |                           ^
ipaddress.c:1553:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1553 |         if ((filter.flags ^ ifa_flags) & filter.flagmask)
      |                                        ^
ipaddress.c:1559:36: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1559 |         if (ifa_label_match_rta(ifa->ifa_index, rta_tb[IFA_LABEL]))
      |                                 ~~~^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
ipaddress.c:1568:21: note: in expansion of macro 'NLMSG_ALIGN'
 1568 |                 if (NLMSG_ALIGN(filter.flushp) + n->nlmsg_len > filter.flushe) {
      |                     ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
ipaddress.c:1572:58: note: in expansion of macro 'NLMSG_ALIGN'
 1572 |                 fn = (struct nlmsghdr *)(filter.flushb + NLMSG_ALIGN(filter.flushp));
      |                                                          ^~~~~~~~~~~
ipaddress.c:1594:61: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1594 |                                           "index", NULL, ifa->ifa_index);
      |                                                          ~~~^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipaddress.c:1614:36: note: in expansion of macro 'format_host_rta'
 1614 |                                    format_host_rta(ifa->ifa_family,
      |                                    ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipaddress.c:1625:44: note: in expansion of macro 'format_host_rta'
 1625 |                                            format_host_rta(ifa->ifa_family,
      |                                            ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipaddress.c:1644:36: note: in expansion of macro 'format_host_rta'
 1644 |                                    format_host_rta(ifa->ifa_family,
      |                                    ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipaddress.c:1654:36: note: in expansion of macro 'format_host_rta'
 1654 |                                    format_host_rta(ifa->ifa_family,
      |                                    ^~~~~~~~~~~~~~~
ipaddress.c:1698:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1698 |                                           ci->ifa_prefered);
      |                                           ~~^~~~~~~~~~~~~~
ipaddress.c: In function 'ipadd_dump_check_magic':
ipaddress.c:1799:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1799 |         ret = fread(&magic, sizeof(magic), 1, stdin);
      |               ^~~~~
ipaddress.c: In function 'show_handler':
ipaddress.c:1827:51: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1827 |         print_int(PRINT_ANY, "index", "if%d:", ifa->ifa_index);
      |                                                ~~~^~~~~~~~~~~
ipaddress.c: In function 'ipaddr_filter':
../include/uapi/linux/netlink.h:102:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  102 | #define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/if_addr.h:69:24: note: in expansion of macro 'NLMSG_PAYLOAD'
   69 | #define IFA_PAYLOAD(n) NLMSG_PAYLOAD(n,sizeof(struct ifaddrmsg))
      |                        ^~~~~~~~~~~~~
ipaddress.c:1913:65: note: in expansion of macro 'IFA_PAYLOAD'
 1913 |                         parse_rtattr(tb, IFA_MAX, IFA_RTA(ifa), IFA_PAYLOAD(n));
      |                                                                 ^~~~~~~~~~~
ipaddress.c:1916:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1916 |                         if ((filter.flags ^ ifa_flags) & filter.flagmask)
      |                                           ^
ipaddress.c:1916:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1916 |                         if ((filter.flags ^ ifa_flags) & filter.flagmask)
      |                                                        ^
ipaddress.c:1919:52: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1919 |                         if (ifa_label_match_rta(ifa->ifa_index, tb[IFA_LABEL]))
      |                                                 ~~~^~~~~~~~~~~
ipaddress.c: In function 'ipaddr_dump_filter':
ipaddress.c:1945:26: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1945 |         ifa->ifa_index = filter.ifindex;
      |                          ^~~~~~
ipaddress.c: In function 'iplink_filter_req':
ipaddress.c:2013:65: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2013 |                 err = addattr32(nlh, reqlen, IFLA_MASTER, filter.master);
      |                                                           ~~~~~~^~~~~~~
ipaddress.c:2024:33: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2024 |                                 strlen(filter.kind));
      |                                 ^~~~~~~~~~~~~~~~~~~
ipaddress.c: In function 'ipaddr_link_get':
ipaddress.c:2040:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 2040 |                 .i.ifi_family = filter.family,
      |                                 ^~~~~~
ipaddress.c: In function 'ipaddr_list_flush_or_save':
ipaddress.c:2143:40: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2143 |                         filter.scope = scope;
      |                                        ^~~~~
ipaddress.c:2159:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2159 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
ipaddress.c:2167:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2167 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
ipaddress.c:2179:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2179 |                         soff = strlen(*argv) - strlen("_slave");
      |                                ^~~~~~
ipaddress.c:2199:34: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2199 |                 filter.ifindex = ll_name_to_index(filter_dev);
      |                                  ^~~~~~~~~~~~~~~~
ipaddress.c: In function 'ipaddr_loop_each_vf':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipaddress.c:2297:15: note: in expansion of macro 'RTA_PAYLOAD'
 2297 |         rem = RTA_PAYLOAD(vflist);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ipaddress.c:2299:56: note: in expansion of macro 'RTA_NEXT'
 2299 |         for (i = RTA_DATA(vflist); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                        ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ipaddress.c:2299:56: note: in expansion of macro 'RTA_NEXT'
 2299 |         for (i = RTA_DATA(vflist); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                        ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipaddress.c:2300:17: note: in expansion of macro 'parse_rtattr_nested'
 2300 |                 parse_rtattr_nested(vf, IFLA_VF_MAX, i);
      |                 ^~~~~~~~~~~~~~~~~~~
ipaddress.c:2309:32: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2309 |                         *min = vf_rate->min_tx_rate;
      |                                ^~~~~~~
ipaddress.c:2310:32: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2310 |                         *max = vf_rate->max_tx_rate;
      |                                ^~~~~~~
ipaddress.c: In function 'ipaddr_get_vf_rate':
ipaddress.c:2327:15: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2327 |         idx = ll_name_to_index(dev);
      |               ^~~~~~~~~~~~~~~~
ipaddress.c:2345:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2345 |                 len = n->nlmsg_len - NLMSG_LENGTH(sizeof(*ifi));
      |                       ^
ipaddress.c: In function 'ipaddr_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
ipaddress.c:2400:34: note: in expansion of macro 'NLM_F_REQUEST'
 2400 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
ipaddress.c:2401:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 2401 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
ipaddress.c:2402:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 2402 |                 .ifa.ifa_family = preferred_family,
      |                                   ^~~~~~~~~~~~~~~~
ipaddress.c:2430:54: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2430 |                                 req.ifa.ifa_family = peer.family;
      |                                                      ^~~~
ipaddress.c:2432:49: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2432 |                         req.ifa.ifa_prefixlen = peer.bitlen;
      |                                                 ^~~~
ipaddress.c:2447:62: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2447 |                                         req.ifa.ifa_family = addr.family;
      |                                                              ^~~~
ipaddress.c:2459:54: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2459 |                                 req.ifa.ifa_family = addr.family;
      |                                                      ^~~~
ipaddress.c:2468:45: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2468 |                         req.ifa.ifa_scope = scope;
      |                                             ^~~~~
ipaddress.c:2476:79: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2476 |                         addattr_l(&req.n, sizeof(req), IFA_LABEL, l, strlen(l)+1);
      |                                                                      ~~~~~~~~~^~
ipaddress.c:2519:54: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2519 |                                 req.ifa.ifa_family = lcl.family;
      |                                                      ^~~
ipaddress.c:2526:37: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2526 |                 req.ifa.ifa_flags = ifa_flags;
      |                                     ^~~~~~~~~
ipaddress.c:2548:41: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2548 |                 req.ifa.ifa_prefixlen = lcl.bitlen;
      |                                         ^~~
ipaddress.c:2562:63: warning: conversion to '__uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2562 |                                         brd.data[0] |= htonl(1<<(31-i));
      |                                                              ~^~~~~~~~
ipaddress.c:2564:64: warning: conversion to '__uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2564 |                                         brd.data[0] &= ~htonl(1<<(31-i));
      |                                                               ~^~~~~~~~
ipaddress.c:2571:37: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2571 |                 req.ifa.ifa_scope = default_scope(&lcl);
      |                                     ^~~~~~~~~~~~~
    CC       ipaddrlabel.o
In file included from ipaddrlabel.c:39:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipaddrlabel.c:40:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipaddrlabel.c: In function 'print_addrlabel':
ipaddrlabel.c:61:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   61 |         int len = n->nlmsg_len;
      |                   ^
ipaddrlabel.c:67:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   67 |         len -= NLMSG_LENGTH(sizeof(*ifal));
      |             ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipaddrlabel.c:67:16: note: in expansion of macro 'NLMSG_LENGTH'
   67 |         len -= NLMSG_LENGTH(sizeof(*ifal));
      |                ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipaddrlabel.c:79:27: note: in expansion of macro 'format_host_rta'
   79 |                         = format_host_rta(ifal->ifal_family,
      |                           ^~~~~~~~~~~~~~~
ipaddrlabel.c: In function 'ipaddrlabel_modify':
ipaddrlabel.c:145:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  145 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
ipaddrlabel.c:148:37: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  148 |                 .ifal.ifal_family = preferred_family,
      |                                     ^~~~~~~~~~~~~~~~
ipaddrlabel.c:188:35: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  188 |         req.ifal.ifal_prefixlen = prefix.bitlen;
      |                                   ^~~~~~
ipaddrlabel.c: In function 'flush_addrlabel':
ipaddrlabel.c:204:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  204 |         int len = n->nlmsg_len;
      |                   ^
ipaddrlabel.c:207:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  207 |         len -= NLMSG_LENGTH(sizeof(*r));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipaddrlabel.c:207:16: note: in expansion of macro 'NLMSG_LENGTH'
  207 |         len -= NLMSG_LENGTH(sizeof(*r));
      |                ^~~~~~~~~~~~
    CC       iproute.o
In file included from iproute.c:29:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iproute.c:30:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iproute.c: In function 'filter_nlmsg':
iproute.c:167:17: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  167 |         table = rtm_get_table(r, tb);
      |                 ^~~~~~~~~~~~~
iproute.c:254:76: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  254 |                 memcpy(&dst.data, RTA_DATA(tb[RTA_DST]), (r->rtm_dst_len+7)/8);
      |                                                          ~~~~~~~~~~~~~~~~~~^~
iproute.c:259:84: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  259 |                         memcpy(&src.data, RTA_DATA(tb[RTA_SRC]), (r->rtm_src_len+7)/8);
      |                                                                  ~~~~~~~~~~~~~~~~~~^~
iproute.c:263:78: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  263 |                         memcpy(&via.data, RTA_DATA(tb[RTA_GATEWAY]), host_len/8);
      |                                                                      ~~~~~~~~^~
iproute.c:274:82: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  274 |                         memcpy(&prefsrc.data, RTA_DATA(tb[RTA_PREFSRC]), host_len/8);
      |                                                                          ~~~~~~~~^~
iproute.c:301:28: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  301 |                 if ((realms^filter.realm)&filter.realmmask)
      |                            ^
iproute.c:301:42: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  301 |                 if ((realms^filter.realm)&filter.realmmask)
      |                                          ^
iproute.c:308:31: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  308 |                         iif = rta_getattr_u32(tb[RTA_IIF]);
      |                               ^~~~~~~~~~~~~~~
iproute.c:316:31: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  316 |                         oif = rta_getattr_u32(tb[RTA_OIF]);
      |                               ^~~~~~~~~~~~~~~
iproute.c:324:32: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  324 |                         mark = rta_getattr_u32(tb[RTA_MARK]);
      |                                ^~~~~~~~~~~~~~~
iproute.c: In function 'print_rtax_features':
iproute.c:353:26: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-2' to '4294967294' [-Wsign-conversion]
  353 |                 features &= ~RTAX_FEATURE_ECN;
      |                          ^~
iproute.c: In function 'print_cache_flags':
iproute.c:429:15: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-65536' to '4294901760' [-Wsign-conversion]
  429 |         flags &= ~0xFFFF;
      |               ^~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1073741825' to '3221225471' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:451:9: note: in expansion of macro 'PRTFL'
  451 |         PRTFL(REJECT, "reject");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-536870913' to '3758096383' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:452:9: note: in expansion of macro 'PRTFL'
  452 |         PRTFL(MULTICAST, "mc");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-268435457' to '4026531839' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:453:9: note: in expansion of macro 'PRTFL'
  453 |         PRTFL(BROADCAST, "brd");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-134217729' to '4160749567' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:454:9: note: in expansion of macro 'PRTFL'
  454 |         PRTFL(DNAT, "dst-nat");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-8388609' to '4286578687' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:455:9: note: in expansion of macro 'PRTFL'
  455 |         PRTFL(SNAT, "src-nat");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-4194305' to '4290772991' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:456:9: note: in expansion of macro 'PRTFL'
  456 |         PRTFL(MASQ, "masq");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-131073' to '4294836223' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:457:9: note: in expansion of macro 'PRTFL'
  457 |         PRTFL(DIRECTDST, "dst-direct");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-67108865' to '4227858431' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:458:9: note: in expansion of macro 'PRTFL'
  458 |         PRTFL(DIRECTSRC, "src-direct");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-262145' to '4294705151' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:459:9: note: in expansion of macro 'PRTFL'
  459 |         PRTFL(REDIRECTED, "redirected");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-16777217' to '4278190079' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:460:9: note: in expansion of macro 'PRTFL'
  460 |         PRTFL(DOREDIRECT, "redirect");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2097153' to '4292870143' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:461:9: note: in expansion of macro 'PRTFL'
  461 |         PRTFL(FAST, "fastroute");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-65537' to '4294901759' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:462:9: note: in expansion of macro 'PRTFL'
  462 |         PRTFL(NOTIFY, "notify");
      |         ^~~~~
iproute.c:443:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-524289' to '4294443007' [-Wsign-conversion]
  443 |                 flags &= ~RTCF_##fl;                                    \
      |                       ^~
iproute.c:463:9: note: in expansion of macro 'PRTFL'
  463 |         PRTFL(TPROXY, "proxy");
      |         ^~~~~
iproute.c: In function 'print_rta_cacheinfo':
iproute.c:496:65: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  496 |                                    "age %usec ", ci->rta_lastuse/hz);
      |                                                                 ^
iproute.c: In function 'print_rta_flow':
iproute.c:521:55: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  521 |                                      rtnl_rtrealm_n2a(from, b1, sizeof(b1)));
      |                                                       ^~~~
iproute.c:523:47: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  523 |                              rtnl_rtrealm_n2a(to, b1, sizeof(b1)));
      |                                               ^~
iproute.c:530:55: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  530 |                                      rtnl_rtrealm_n2a(from, b1, sizeof(b1)));
      |                                                       ^~~~
iproute.c:532:47: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  532 |                              rtnl_rtrealm_n2a(to, b1, sizeof(b1)));
      |                                               ^~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iproute.c: In function 'print_rta_newdst':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute.c:539:30: note: in expansion of macro 'format_host_rta'
  539 |         const char *newdst = format_host_rta(r->rtm_family, rta);
      |                              ^~~~~~~~~~~~~~~
iproute.c: In function 'print_rta_gateway':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute.c:565:31: note: in expansion of macro 'format_host_rta'
  565 |         const char *gateway = format_host_rta(family, rta);
      |                               ^~~~~~~~~~~~~~~
iproute.c: In function 'print_rta_via':
iproute.c:580:61: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  580 |                              format_host(via->rtvia_family, len,
      |                                                             ^~~
iproute.c:587:56: warning: conversion from '__kernel_sa_family_t' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  587 |                                    ifa_family_color(via->rtvia_family),
      |                                                     ~~~^~~~~~~~~~~~~~
iproute.c:590:48: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  590 |                                                len, via->rtvia_addr));
      |                                                ^~~
iproute.c: In function 'print_rta_metrics':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iproute.c:603:54: note: in expansion of macro 'RTA_PAYLOAD'
  603 |         parse_rtattr(mxrta, RTAX_MAX, RTA_DATA(rta), RTA_PAYLOAD(rta));
      |                                                      ^~~~~~~~~~~
iproute.c: In function 'print_rta_multipath':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iproute.c:671:19: note: in expansion of macro 'RTA_PAYLOAD'
  671 |         int len = RTA_PAYLOAD(rta);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:432:50: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-4' to '4294967292' [-Wsign-conversion]
  432 | #define RTNH_ALIGN(len) ( ((len)+RTNH_ALIGNTO-1) & ~(RTNH_ALIGNTO-1) )
      |                                                  ^
../include/uapi/linux/rtnetlink.h:436:27: note: in expansion of macro 'RTNH_ALIGN'
  436 | #define RTNH_LENGTH(len) (RTNH_ALIGN(sizeof(struct rtnexthop)) + (len))
      |                           ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:438:63: note: in expansion of macro 'RTNH_LENGTH'
  438 | #define RTNH_DATA(rtnh)   ((struct rtattr*)(((char*)(rtnh)) + RTNH_LENGTH(0)))
      |                                                               ^~~~~~~~~~~
iproute.c:696:51: note: in expansion of macro 'RTNH_DATA'
  696 |                         parse_rtattr(tb, RTA_MAX, RTNH_DATA(nh),
      |                                                   ^~~~~~~~~
iproute.c:697:51: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  697 |                                      nh->rtnh_len - sizeof(*nh));
      |                                      ~~~~~~~~~~~~~^~~~~~~~~~~~~
iproute.c:717:63: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  717 |                                      "%s", ll_index_to_name(nh->rtnh_ifindex));
      |                                                             ~~^~~~~~~~~~~~~~
iproute.c:725:68: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  725 |                                      "dev %s ", ll_index_to_name(nh->rtnh_ifindex));
      |                                                                  ~~^~~~~~~~~~~~~~
iproute.c:734:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  734 |                 len -= NLMSG_ALIGN(nh->rtnh_len);
      |                     ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
iproute.c:734:24: note: in expansion of macro 'NLMSG_ALIGN'
  734 |                 len -= NLMSG_ALIGN(nh->rtnh_len);
      |                        ^~~~~~~~~~~
iproute.c: In function 'print_route':
iproute.c:746:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  746 |         int len = n->nlmsg_len;
      |                   ^
iproute.c:761:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  761 |         len -= NLMSG_LENGTH(sizeof(*r));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iproute.c:761:16: note: in expansion of macro 'NLMSG_LENGTH'
  761 |         len -= NLMSG_LENGTH(sizeof(*r));
      |                ^~~~~~~~~~~~
iproute.c:770:17: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  770 |         table = rtm_get_table(r, tb);
      |                 ^~~~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
iproute.c:778:21: note: in expansion of macro 'NLMSG_ALIGN'
  778 |                 if (NLMSG_ALIGN(filter.flushp) + n->nlmsg_len > filter.flushe) {
      |                     ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
iproute.c:783:58: note: in expansion of macro 'NLMSG_ALIGN'
  783 |                 fn = (struct nlmsghdr *)(filter.flushb + NLMSG_ALIGN(filter.flushp));
      |                                                          ^~~~~~~~~~~
iproute.c:806:42: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  806 |                 color = ifa_family_color(family);
      |                                          ^~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute.c:810:43: note: in expansion of macro 'rt_addr_n2a_rta'
  810 |                                  "%s/%u", rt_addr_n2a_rta(family, tb[RTA_DST]),
      |                                           ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:173:27: note: in expansion of macro 'RTA_PAYLOAD'
  173 |         format_host_r(af, RTA_PAYLOAD(rta), RTA_DATA(rta), \
      |                           ^~~~~~~~~~~
iproute.c:813:48: note: in expansion of macro 'format_host_rta_r'
  813 |                         const char *hostname = format_host_rta_r(family, tb[RTA_DST],
      |                                                ^~~~~~~~~~~~~~~~~
iproute.c:828:42: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  828 |                 color = ifa_family_color(family);
      |                                          ^~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute.c:833:34: note: in expansion of macro 'rt_addr_n2a_rta'
  833 |                                  rt_addr_n2a_rta(family, tb[RTA_SRC]),
      |                                  ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:173:27: note: in expansion of macro 'RTA_PAYLOAD'
  173 |         format_host_r(af, RTA_PAYLOAD(rta), RTA_DATA(rta), \
      |                           ^~~~~~~~~~~
iproute.c:836:48: note: in expansion of macro 'format_host_rta_r'
  836 |                         const char *hostname = format_host_rta_r(family, tb[RTA_SRC],
      |                                                ^~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute.c:896:27: note: in expansion of macro 'rt_addr_n2a_rta'
  896 |                         = rt_addr_n2a_rta(r->rtm_family, tb[RTA_PREFSRC]);
      |                           ^~~~~~~~~~~~~~~
iproute.c: In function 'parse_one_nh':
iproute.c:1010:49: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1010 |                                 r->rtm_family = addr.family;
      |                                                 ^~~~
iproute.c:1012:56: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1012 |                                 if (rta_addattr_l(rta, len, RTA_GATEWAY,
      |                                                        ^~~
iproute.c:1015:51: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
 1015 |                                 rtnh->rtnh_len += sizeof(struct rtattr)
      |                                                   ^~~~~~
iproute.c:1018:56: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1018 |                                 if (rta_addattr_l(rta, len, RTA_VIA,
      |                                                        ^~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:226:25: note: in expansion of macro 'RTA_ALIGN'
  226 | #define RTA_SPACE(len)  RTA_ALIGN(RTA_LENGTH(len))
      |                         ^~~~~~~~~
iproute.c:1021:51: note: in expansion of macro 'RTA_SPACE'
 1021 |                                 rtnh->rtnh_len += RTA_SPACE(addr.bytelen + 2);
      |                                                   ^~~~~~~~~
iproute.c:1025:46: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1025 |                         rtnh->rtnh_ifindex = ll_name_to_index(*argv);
      |                                              ^~~~~~~~~~~~~~~~
iproute.c:1034:43: warning: conversion from 'unsigned int' to 'unsigned char' may change value [-Wconversion]
 1034 |                         rtnh->rtnh_hops = w - 1;
      |                                           ^
iproute.c:1043:48: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1043 |                         if (rta_addattr32(rta, len, RTA_FLOW, realm))
      |                                                ^~~
iproute.c:1052:43: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1052 |                         rtnh->rtnh_len += rta->rta_len - old_len;
      |                                           ^~~
iproute.c:1060:48: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1060 |                         if (rta_addattr_l(rta, len, RTA_NEWDST,
      |                                                ^~~
iproute.c:1063:43: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
 1063 |                         rtnh->rtnh_len += sizeof(struct rtattr) + addr.bytelen;
      |                                           ^~~~~~
iproute.c: In function 'parse_nexthops':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iproute.c:1104:49: note: in expansion of macro 'RTA_PAYLOAD'
 1104 |                                  RTA_DATA(rta), RTA_PAYLOAD(rta));
      |                                                 ^~~~~~~~~~~
iproute.c: In function 'iproute_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
iproute.c:1116:34: note: in expansion of macro 'NLM_F_REQUEST'
 1116 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
iproute.c:1117:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1117 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
iproute.c:1118:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1118 |                 .r.rtm_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
iproute.c:1151:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1151 |                                 req.r.rtm_family = addr.family;
      |                                                    ^~~~
iproute.c:1163:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1163 |                                 req.r.rtm_family = addr.family;
      |                                                    ^~~~
iproute.c:1183:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1183 |                                 req.r.rtm_family = addr.family;
      |                                                    ^~~~
iproute.c:1196:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1196 |                                 req.r.rtm_family = addr.family;
      |                                                    ^~~~
iproute.c:1199:45: warning: conversion from '__s16' {aka 'short int'} to 'unsigned char' may change value [-Wconversion]
 1199 |                         req.r.rtm_src_len = addr.bitlen;
      |                                             ^~~~
iproute.c:1207:41: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1207 |                         req.r.rtm_tos = tos;
      |                                         ^~~
iproute.c:1230:43: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1230 |                         req.r.rtm_scope = scope;
      |                                           ^~~~~
iproute.c:1376:39: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1376 |                                       strlen(*argv));
      |                                       ^~~~~~~~~~~~~
iproute.c:1423:46: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1423 |                         req.r.rtm_protocol = prot;
      |                                              ^~~~
iproute.c:1431:51: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1431 |                                 req.r.rtm_table = tid;
      |                                                   ^~~
iproute.c:1445:51: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1445 |                                 req.r.rtm_table = tid;
      |                                                   ^~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iproute.c:1480:59: note: in expansion of macro 'RTA_PAYLOAD'
 1480 |                                          , RTA_DATA(rta), RTA_PAYLOAD(rta));
      |                                                           ^~~~~~~~~~~
iproute.c:1514:50: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1514 |                                 req.r.rtm_type = type;
      |                                                  ^~~~
iproute.c:1524:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 1524 |                                 req.r.rtm_family = dst.family;
      |                                                    ^~~
iproute.c:1525:45: warning: conversion from '__s16' {aka 'short int'} to 'unsigned char' may change value [-Wconversion]
 1525 |                         req.r.rtm_dst_len = dst.bitlen;
      |                                             ^~~
iproute.c:1538:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1538 |                 int idx = ll_name_to_index(d);
      |                           ^~~~~~~~~~~~~~~~
iproute.c:1542:57: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1542 |                 addattr32(&req.n, sizeof(req), RTA_OIF, idx);
      |                                                         ^~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iproute.c:1548:78: note: in expansion of macro 'RTA_PAYLOAD'
 1548 |                 addattr_l(&req.n, sizeof(req), RTA_METRICS, RTA_DATA(mxrta), RTA_PAYLOAD(mxrta));
      |                                                                              ^~~~~~~~~~~
iproute.c: In function 'iproute_flush_cache':
iproute.c:1607:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1607 |         len = strlen(buffer);
      |               ^~~~~~
iproute.c:1609:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1609 |         if ((write(flush_fd, (void *)buffer, len)) < len) {
      |                                              ^~~
iproute.c: In function 'save_route':
iproute.c:1623:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1623 |         int len = n->nlmsg_len;
      |                   ^
iproute.c:1629:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1629 |         len -= NLMSG_LENGTH(sizeof(*r));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iproute.c:1629:16: note: in expansion of macro 'NLMSG_LENGTH'
 1629 |         len -= NLMSG_LENGTH(sizeof(*r));
      |                ^~~~~~~~~~~~
iproute.c: In function 'iproute_dump_filter':
iproute.c:1667:29: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1667 |         rtm->rtm_protocol = filter.protocol;
      |                             ^~~~~~
iproute.c:1678:61: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1678 |                 err = addattr32(nlh, reqlen, RTA_OIF, filter.oif);
      |                                                       ~~~~~~^~~~
iproute.c: In function 'iproute_list_flush_or_save':
iproute.c:1809:43: warning: unsigned conversion from 'int' to '__u64' {aka 'long long unsigned int'} changes value from '-13' to '18446744073709551603' [-Wsign-conversion]
 1809 |                         filter.typemask = ~(1 << RTN_LOCAL | 1<<RTN_BROADCAST);
      |                                           ^
iproute.c:1820:38: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1820 |                         filter.tos = tos;
      |                                      ^~~
iproute.c:1833:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1833 |                         filter.protocol = prot;
      |                                           ^~~~
iproute.c:1845:40: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1845 |                         filter.scope = scope;
      |                                        ^~~~~
iproute.c:1874:45: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
 1874 |                         filter.metricmask = -1;
      |                                             ^
iproute.c:1894:40: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1894 |                         filter.realm = realm;
      |                                        ^~~~~
iproute.c:1895:44: warning: signed conversion from 'unsigned int' to 'int' changes value from '4294967295' to '-1' [-Wsign-conversion]
 1895 |                         filter.realmmask = ~0U;
      |                                            ^
iproute.c:1899:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1899 |                         if ((filter.realm&0xFFFF0000U) == 0 &&
      |                                          ^
iproute.c:1902:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1902 |                                 filter.realmmask &= ~0xFFFF0000U;
      |                                                  ^~
iproute.c:1946:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1946 |                         idx = ll_name_to_index(id);
      |                               ^~~~~~~~~~~~~~~~
iproute.c:1953:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1953 |                         idx = ll_name_to_index(od);
      |                               ^~~~~~~~~~~~~~~~
iproute.c:1960:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1960 |         filter.mark = mark;
      |                       ^~~~
iproute.c: In function 'iproute_get':
iproute.c:1994:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1994 |                 .r.rtm_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
iproute.c:2016:41: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
 2016 |                         req.r.rtm_tos = tos;
      |                                         ^~~
iproute.c:2026:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 2026 |                                 req.r.rtm_family = addr.family;
      |                                                    ^~~~
iproute.c:2030:45: warning: conversion from '__s16' {aka 'short int'} to 'unsigned char' may change value [-Wconversion]
 2030 |                         req.r.rtm_src_len = addr.bitlen;
      |                                             ^~~~
iproute.c:2068:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 2068 |                                 req.r.rtm_family = addr.family;
      |                                                    ^~~~
iproute.c:2093:69: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 2093 |                         addattr8(&req.n, sizeof(req), RTA_IP_PROTO, ipproto);
      |                                                                     ^~~~~~~
iproute.c:2104:52: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
 2104 |                                 req.r.rtm_family = addr.family;
      |                                                    ^~~~
iproute.c:2119:53: warning: conversion from '__s16' {aka 'short int'} to 'unsigned char' may change value [-Wconversion]
 2119 |                                 req.r.rtm_dst_len = addr.bitlen;
      |                                                     ^~~~
iproute.c:2134:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2134 |                         idx = ll_name_to_index(idev);
      |                               ^~~~~~~~~~~~~~~~
iproute.c:2137:65: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2137 |                         addattr32(&req.n, sizeof(req), RTA_IIF, idx);
      |                                                                 ^~~
iproute.c:2140:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2140 |                         idx = ll_name_to_index(odev);
      |                               ^~~~~~~~~~~~~~~~
iproute.c:2143:65: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2143 |                         addattr32(&req.n, sizeof(req), RTA_OIF, idx);
      |                                                                 ^~~
iproute.c:2165:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2165 |                 int len = answer->nlmsg_len;
      |                           ^~~~~~
iproute.c:2179:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2179 |                 len -= NLMSG_LENGTH(sizeof(*r));
      |                     ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iproute.c:2179:24: note: in expansion of macro 'NLMSG_LENGTH'
 2179 |                 len -= NLMSG_LENGTH(sizeof(*r));
      |                        ^~~~~~~~~~~~
iproute.c:2190:42: warning: conversion from 'unsigned int' to 'unsigned char' may change value [-Wconversion]
 2190 |                         r->rtm_src_len = 8*RTA_PAYLOAD(tb[RTA_PREFSRC]);
      |                                          ^
iproute.c: In function 'restore_handler':
iproute.c:2237:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2237 |         int len = n->nlmsg_len - NLMSG_LENGTH(sizeof(*r));
      |                   ^
iproute.c: In function 'route_dump_check_magic':
iproute.c:2280:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2280 |         ret = fread(&magic, sizeof(magic), 1, stdin);
      |               ^~~~~
    CC       iprule.o
In file included from ../include/uapi/linux/if.h:23,
                 from iprule.c:22:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iprule.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iprule.c:27:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iprule.c:28:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iprule.c: In function 'frh_get_table':
iprule.c:93:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   93 |         return table;
      |                ^~~~~
In file included from iprule.c:18:
iprule.c: In function 'filter_nlmsg':
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
iprule.c:219:34: note: in expansion of macro 'ntohll'
  219 |                         tun_id = ntohll(rta_getattr_u64(tb[FRA_TUN_ID]));
      |                                  ^~~~~~
iprule.c:227:17: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  227 |         table = frh_get_table(frh, tb);
      |                 ^~~~~~~~~~~~~
iprule.c: In function 'print_rule':
iprule.c:238:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  238 |         int len = n->nlmsg_len;
      |                   ^
iprule.c:247:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  247 |         len -= NLMSG_LENGTH(sizeof(*frh));
      |             ^~
In file included from ../include/uapi/linux/rtnetlink.h:6,
                 from ../include/uapi/linux/fib_rules.h:6,
                 from iprule.c:23:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iprule.c:247:16: note: in expansion of macro 'NLMSG_LENGTH'
  247 |         len -= NLMSG_LENGTH(sizeof(*frh));
      |                ^~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iprule.c:271:35: note: in expansion of macro 'rt_addr_n2a_rta'
  271 |                 const char *src = rt_addr_n2a_rta(frh->family, tb[FRA_SRC]);
      |                                   ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iprule.c:286:35: note: in expansion of macro 'rt_addr_n2a_rta'
  286 |                 const char *dst = rt_addr_n2a_rta(frh->family, tb[FRA_DST]);
      |                                   ^~~~~~~~~~~~~~~
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
iprule.c:390:32: note: in expansion of macro 'ntohll'
  390 |                 __u64 tun_id = ntohll(rta_getattr_u64(tb[FRA_TUN_ID]));
      |                                ^~~~~~
iprule.c:395:17: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  395 |         table = frh_get_table(frh, tb);
      |                 ^~~~~~~~~~~~~
iprule.c:402:34: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  402 |                         int pl = rta_getattr_u32(tb[FRA_SUPPRESS_PREFIXLEN]);
      |                                  ^~~~~~~~~~~~~~~
iprule.c:410:37: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  410 |                         int group = rta_getattr_u32(tb[FRA_SUPPRESS_IFGROUP]);
      |                                     ^~~~~~~~~~~~~~~
iprule.c:430:55: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  430 |                                      rtnl_rtrealm_n2a(from, b1, sizeof(b1)));
      |                                                       ^~~~
iprule.c:435:47: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  435 |                              rtnl_rtrealm_n2a(to, b1, sizeof(b1)));
      |                                               ^~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iprule.c:442:35: note: in expansion of macro 'format_host_rta'
  442 |                         gateway = format_host_rta(frh->family, tb[RTA_GATEWAY]);
      |                                   ^~~~~~~~~~~~~~~
iprule.c: In function 'flush_rule':
iprule.c:517:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  517 |         int len = n->nlmsg_len;
      |                   ^
iprule.c:521:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  521 |         len -= NLMSG_LENGTH(sizeof(*frh));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iprule.c:521:16: note: in expansion of macro 'NLMSG_LENGTH'
  521 |         len -= NLMSG_LENGTH(sizeof(*frh));
      |                ^~~~~~~~~~~~
iprule.c: In function 'iprule_list_flush_or_save':
iprule.c:672:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  672 |                         filter.protocol = prot;
      |                                           ^~~~
iprule.c:680:42: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  680 |                         filter.ipproto = ipproto;
      |                                          ^~~~~~~
iprule.c: In function 'rule_dump_check_magic':
iprule.c:739:15: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  739 |         ret = fread(&magic, sizeof(magic), 1, stdin);
      |               ^~~~~
iprule.c: In function 'iprule_modify':
iprule.c:784:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  784 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
iprule.c:787:31: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  787 |                 .frh.family = preferred_family,
      |                               ^~~~~~~~~~~~~~~~
iprule.c:814:43: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  814 |                         req.frh.src_len = dst.bitlen;
      |                                           ^~~
iprule.c:822:43: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  822 |                         req.frh.dst_len = dst.bitlen;
      |                                           ^~~
iprule.c:841:39: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  841 |                         req.frh.tos = tos;
      |                                       ^~~
iprule.c:874:69: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  874 |                         addattr8(&req.n, sizeof(req), FRA_PROTOCOL, proto);
      |                                                                     ^~~~~
iprule.c:888:49: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  888 |                                 req.frh.table = tid;
      |                                                 ^~~
iprule.c:903:59: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  903 |                                   FRA_SUPPRESS_PREFIXLEN, pl);
      |                                                           ^~
iprule.c:913:57: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  913 |                                   FRA_SUPPRESS_IFGROUP, group);
      |                                                         ^~~~~
iprule.c:920:55: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  920 |                                   *argv, strlen(*argv)+1);
      |                                          ~~~~~~~~~~~~~^~
iprule.c:926:55: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  926 |                                   *argv, strlen(*argv)+1);
      |                                          ~~~~~~~~~~~~~^~
iprule.c:954:69: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  954 |                         addattr8(&req.n, sizeof(req), FRA_IP_PROTO, ipproto);
      |                                                                     ^~~~~~~
iprule.c:1000:42: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1000 |                         req.frh.action = type;
      |                                          ^~~~
    CC       ipnetns.o
In file included from ipnetns.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipnetns.c:24:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipnetns.c: In function 'ipnetns_have_nsid':
ipnetns.c:89:52: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   89 |                 addattr32(&req.n, 1024, NETNSA_FD, fd);
      |                                                    ^~
ipnetns.c:91:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   91 |                 if (rtnl_send(&rth, &req.n, req.n.nlmsg_len) < 0) {
      |                                             ~~~~~^~~~~~~~~~
ipnetns.c: In function 'get_netnsid_from_name':
ipnetns.c:129:44: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  129 |         addattr32(&req.n, 1024, NETNSA_FD, fd);
      |                                            ^~
ipnetns.c:141:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  141 |         len = answer->nlmsg_len - NLMSG_SPACE(sizeof(*rthdr));
      |               ^~~~~~
ipnetns.c: In function 'print_nsid':
ipnetns.c:312:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  312 |         int len = n->nlmsg_len;
      |                   ^
ipnetns.c:321:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  321 |         len -= NLMSG_SPACE(sizeof(*rthdr));
      |             ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
ipnetns.c:321:16: note: in expansion of macro 'NLMSG_SPACE'
  321 |         len -= NLMSG_SPACE(sizeof(*rthdr));
      |                ^~~~~~~~~~~
ipnetns.c: In function 'get_netnsid_from_netnsid':
ipnetns.c:392:59: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  392 |         err = addattr32(&req.n, sizeof(req), NETNSA_NSID, nsid);
      |                                                           ^~~~
ipnetns.c:398:39: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  398 |                                 filter.target_nsid);
      |                                 ~~~~~~^~~~~~~~~~~~
ipnetns.c: In function 'netns_filter_req':
ipnetns.c:424:39: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  424 |                                 filter.target_nsid);
      |                                 ~~~~~~^~~~~~~~~~~~
ipnetns.c: In function 'netns_identify_pid':
ipnetns.c:691:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  691 |                         strlcpy(name, entry->d_name, len);
      |                                                      ^~~
ipnetns.c: In function 'set_netnsid_from_name':
ipnetns.c:959:44: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  959 |         addattr32(&req.n, 1024, NETNSA_FD, fd);
      |                                            ^~
ipnetns.c:960:46: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  960 |         addattr32(&req.n, 1024, NETNSA_NSID, nsid);
      |                                              ^~~~
    CC       rtm_map.o
In file included from rtm_map.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
rtm_map.c: In function 'rtnl_rtntype_n2a':
rtm_map.c:28:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   28 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rtm_map.c:58:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   58 |                 snprintf(buf, len, "%d", id);
      |                               ^~~
rtm_map.c: In function 'rtnl_rtntype_a2n':
rtm_map.c:97:15: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
   97 |         *id = res;
      |               ^~~
    CC       iptunnel.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_tunnel.h:6,
                 from iptunnel.c:24:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iptunnel.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iptunnel.c:27:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iptunnel.c:28:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iptunnel.c: In function 'set_tunnel_proto':
iptunnel.c:59:27: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
   59 |         p->iph.protocol = proto;
      |                           ^~~~~
iptunnel.c: In function 'parse_args':
iptunnel.c:167:47: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  167 |                                 p->iph.tos |= uval;
      |                                               ^~~~
iptunnel.c:217:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  217 |                 p->link = ll_name_to_index(medium);
      |                           ^~~~~~~~~~~~~~~~
iptunnel.c: In function 'print_tunnel':
iptunnel.c:336:51: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  336 |                 const char *n = ll_index_to_name(p->link);
      |                                                  ~^~~~~~
iptunnel.c: In function 'do_6rd':
iptunnel.c:498:43: warning: conversion to '__u16' {aka 'short unsigned int'} from '__s16' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  498 |                         ip6rd.prefixlen = prefix.bitlen;
      |                                           ^~~~~~
iptunnel.c:505:49: warning: conversion to '__u16' {aka 'short unsigned int'} from '__s16' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  505 |                         ip6rd.relay_prefixlen = prefix.bitlen;
      |                                                 ^~~~~~
    CC       ip6tunnel.o
In file included from ../include/uapi/linux/if.h:23,
                 from ip6tunnel.c:31:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ip6tunnel.c:22:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ip6tunnel.c:36:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ip6tunnel.c:38:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ip6tunnel.c: In function 'print_tunnel':
ip6tunnel.c:91:51: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 |                 const char *n = ll_index_to_name(p->link);
      |                                                  ~^~~~~~
ip6tunnel.c: In function 'parse_args':
ip6tunnel.c:200:42: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2' to '4294967294' [-Wsign-conversion]
  200 |                                 p->flags &= ~IP6_TNL_F_IGN_ENCAP_LIMIT;
      |                                          ^~
ip6tunnel.c:225:42: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-3' to '4294967293' [-Wsign-conversion]
  225 |                                 p->flags &= ~IP6_TNL_F_USE_ORIG_TCLASS;
      |                                          ^~
ip6tunnel.c:241:42: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-5' to '4294967291' [-Wsign-conversion]
  241 |                                 p->flags &= ~IP6_TNL_F_USE_ORIG_FLOWLABEL;
      |                                          ^~
ip6tunnel.c:251:34: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-65' to '4294967231' [-Wsign-conversion]
  251 |                         p->flags &= ~IP6_TNL_F_ALLOW_LOCAL_REMOTE;
      |                                  ^~
ip6tunnel.c:300:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  300 |                 p->link = ll_name_to_index(medium);
      |                           ^~~~~~~~~~~~~~~~
    CC       tunnel.o
In file included from ../include/uapi/linux/if.h:23,
                 from tunnel.c:33:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tunnel.c:25:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from tunnel.c:38:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
tunnel.c: In function 'tnl_add_ioctl':
tunnel.c:104:25: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  104 |         err = ioctl(fd, cmd, &ifr);
      |                         ^~~
tunnel.c: In function 'tnl_gen_ioctl':
tunnel.c:155:25: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  155 |         err = ioctl(fd, cmd, &ifr);
      |                         ^~~
In file included from ../include/uapi/linux/if_link.h:6,
                 from ../include/uapi/linux/netdevice.h:32,
                 from ../include/uapi/linux/if_arp.h:27,
                 from tunnel.c:36:
tunnel.c: In function 'print_nlmsg_tunnel':
../include/uapi/linux/netlink.h:102:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  102 | #define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/if_link.h:391:25: note: in expansion of macro 'NLMSG_PAYLOAD'
  391 | #define IFLA_PAYLOAD(n) NLMSG_PAYLOAD(n,sizeof(struct ifinfomsg))
      |                         ^~~~~~~~~~~~~
tunnel.c:395:51: note: in expansion of macro 'IFLA_PAYLOAD'
  395 |         parse_rtattr(tb, IFLA_MAX, IFLA_RTA(ifi), IFLA_PAYLOAD(n));
      |                                                   ^~~~~~~~~~~~
    CC       ipneigh.o
In file included from ipneigh.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipneigh.c:25:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
ipneigh.c: In function 'ipneigh_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
ipneigh.c:114:34: note: in expansion of macro 'NLM_F_REQUEST'
  114 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
ipneigh.c:115:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  115 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
ipneigh.c:116:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  116 |                 .ndm.ndm_family = preferred_family,
      |                                   ^~~~~~~~~~~~~~~~
ipneigh.c:140:45: warning: conversion from 'unsigned int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  140 |                         req.ndm.ndm_state = state;
      |                                             ^~~~~
ipneigh.c:170:73: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  170 |                         if (addattr8(&req.n, sizeof(req), NDA_PROTOCOL, proto))
      |                                                                         ^~~~~
ipneigh.c:190:30: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  190 |         req.ndm.ndm_family = dst.family;
      |                              ^~~
ipneigh.c:212:39: warning: conversion to '__s32' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  212 |                 req.ndm.ndm_ifindex = ll_name_to_index(dev);
      |                                       ^~~~~~~~~~~~~~~~
ipneigh.c: In function 'print_cacheinfo':
ipneigh.c:234:64: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  234 |         print_uint(PRINT_ANY, "used", " used %u", ci->ndm_used / hz);
      |                                                                ^
ipneigh.c:235:69: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  235 |         print_uint(PRINT_ANY, "confirmed", "/%u", ci->ndm_confirmed / hz);
      |                                                                     ^
ipneigh.c:236:65: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  236 |         print_uint(PRINT_ANY, "updated", "/%u", ci->ndm_updated / hz);
      |                                                                 ^
ipneigh.c: In function 'print_neigh_state':
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-2' to '4294967294' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:251:9: note: in expansion of macro 'PRINT_FLAG'
  251 |         PRINT_FLAG(INCOMPLETE);
      |         ^~~~~~~~~~
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-3' to '4294967293' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:252:9: note: in expansion of macro 'PRINT_FLAG'
  252 |         PRINT_FLAG(REACHABLE);
      |         ^~~~~~~~~~
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-5' to '4294967291' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:253:9: note: in expansion of macro 'PRINT_FLAG'
  253 |         PRINT_FLAG(STALE);
      |         ^~~~~~~~~~
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-9' to '4294967287' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:254:9: note: in expansion of macro 'PRINT_FLAG'
  254 |         PRINT_FLAG(DELAY);
      |         ^~~~~~~~~~
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-17' to '4294967279' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:255:9: note: in expansion of macro 'PRINT_FLAG'
  255 |         PRINT_FLAG(PROBE);
      |         ^~~~~~~~~~
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-33' to '4294967263' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:256:9: note: in expansion of macro 'PRINT_FLAG'
  256 |         PRINT_FLAG(FAILED);
      |         ^~~~~~~~~~
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-65' to '4294967231' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:257:9: note: in expansion of macro 'PRINT_FLAG'
  257 |         PRINT_FLAG(NOARP);
      |         ^~~~~~~~~~
ipneigh.c:247:21: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-129' to '4294967167' [-Wsign-conversion]
  247 |                 nud &= ~NUD_##f;                                \
      |                     ^~
ipneigh.c:258:9: note: in expansion of macro 'PRINT_FLAG'
  258 |         PRINT_FLAG(PERMANENT);
      |         ^~~~~~~~~~
In file included from ../include/libnetlink.h:9:
ipneigh.c: In function 'print_neigh_brief':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipneigh.c:277:23: note: in expansion of macro 'format_host_rta'
  277 |                 dst = format_host_rta(family, tb[NDA_DST]);
      |                       ^~~~~~~~~~~~~~~
ipneigh.c:278:64: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  278 |                 print_color_string(PRINT_ANY, ifa_family_color(family),
      |                                                                ^~~~~~
ipneigh.c:285:54: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  285 |                                    ll_index_to_name(r->ndm_ifindex));
      |                                                     ~^~~~~~~~~~~~~
ipneigh.c:295:56: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  295 |                                      ll_index_to_type(r->ndm_ifindex),
      |                                                       ~^~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipneigh.c:294:38: note: in expansion of macro 'RTA_PAYLOAD'
  294 |                                      RTA_PAYLOAD(tb[NDA_LLADDR]),
      |                                      ^~~~~~~~~~~
ipneigh.c: In function 'print_neigh':
ipneigh.c:313:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  313 |         int len = n->nlmsg_len;
      |                   ^
ipneigh.c:326:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  326 |         len -= NLMSG_LENGTH(sizeof(*r));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipneigh.c:326:16: note: in expansion of macro 'NLMSG_LENGTH'
  326 |         len -= NLMSG_LENGTH(sizeof(*r));
      |                ^~~~~~~~~~~~
ipneigh.c:353:60: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  353 |         parse_rtattr(tb, NDA_MAX, NDA_RTA(r), n->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
ipneigh.c:376:21: note: in expansion of macro 'NLMSG_ALIGN'
  376 |                 if (NLMSG_ALIGN(filter.flushp) + n->nlmsg_len > filter.flushe) {
      |                     ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
ipneigh.c:380:58: note: in expansion of macro 'NLMSG_ALIGN'
  380 |                 fn = (struct nlmsghdr *)(filter.flushb + NLMSG_ALIGN(filter.flushp));
      |                                                          ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipneigh.c:411:23: note: in expansion of macro 'format_host_rta'
  411 |                 dst = format_host_rta(family, tb[NDA_DST]);
      |                       ^~~~~~~~~~~~~~~
ipneigh.c:413:53: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  413 |                                    ifa_family_color(family),
      |                                                     ^~~~~~
ipneigh.c:423:54: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  423 |                                    ll_index_to_name(r->ndm_ifindex));
      |                                                     ~^~~~~~~~~~~~~
ipneigh.c:432:56: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  432 |                                      ll_index_to_type(r->ndm_ifindex),
      |                                                       ~^~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipneigh.c:431:38: note: in expansion of macro 'RTA_PAYLOAD'
  431 |                                      RTA_PAYLOAD(tb[NDA_LLADDR]),
      |                                      ^~~~~~~~~~~
ipneigh.c: In function 'ipneigh_dump_filter':
ipneigh.c:494:65: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  494 |                 err = addattr32(nlh, reqlen, NDA_IFINDEX, filter.index);
      |                                                           ~~~~~~^~~~~~
ipneigh.c:499:64: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  499 |                 err = addattr32(nlh, reqlen, NDA_MASTER, filter.master);
      |                                                          ~~~~~~^~~~~~~
ipneigh.c: In function 'do_show_or_flush':
ipneigh.c:536:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  536 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
ipneigh.c:544:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  544 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
ipneigh.c:565:41: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  565 |                                 state = ~0;
      |                                         ^
ipneigh.c:567:47: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-65' to '4294967231' [-Wsign-conversion]
  567 |                                         state &= ~NUD_NOARP;
      |                                               ^~
ipneigh.c:571:38: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  571 |                         filter.state |= state;
      |                                      ^~
ipneigh.c:571:41: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  571 |                         filter.state |= state;
      |                                         ^~~~~
ipneigh.c:583:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  583 |                         filter.protocol = prot;
      |                                           ^~~~
ipneigh.c:601:32: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  601 |                 filter.index = ll_name_to_index(filter_dev);
      |                                ^~~~~~~~~~~~~~~~
ipneigh.c: In function 'ipneigh_get':
ipneigh.c:674:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  674 |                 .ndm.ndm_family = preferred_family,
      |                                   ^~~~~~~~~~~~~~~~
ipneigh.c:716:30: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  716 |         req.ndm.ndm_family = dst.family;
      |                              ^~~
ipneigh.c:721:39: warning: conversion to '__s32' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  721 |                 req.ndm.ndm_ifindex = ll_name_to_index(d);
      |                                       ^~~~~~~~~~~~~~~~
    CC       ipntable.o
In file included from ipntable.c:32:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipntable.c:33:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
ipntable.c: In function 'ipntable_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
ipntable.c:72:34: note: in expansion of macro 'NLM_F_REQUEST'
   72 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
ipntable.c:73:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   73 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
ipntable.c:74:37: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   74 |                 .ndtm.ndtm_family = preferred_family,
      |                                     ^~~~~~~~~~~~~~~~
ipntable.c:95:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   95 |                         len = strlen(namep) + 1;
      |                               ^~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipntable.c:303:27: note: in expansion of macro 'RTA_PAYLOAD'
  303 |                           RTA_PAYLOAD(parms_rta));
      |                           ^~~~~~~~~~~
ipntable.c: In function 'print_ntable':
ipntable.c:532:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  532 |         int len = n->nlmsg_len;
      |                   ^
ipntable.c:542:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  542 |         len -= NLMSG_LENGTH(sizeof(*ndtm));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipntable.c:542:16: note: in expansion of macro 'NLMSG_LENGTH'
  542 |         len -= NLMSG_LENGTH(sizeof(*ndtm));
      |                ^~~~~~~~~~~~
ipntable.c:552:35: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  552 |                      n->nlmsg_len - NLMSG_LENGTH(sizeof(*ndtm)));
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipntable.c:563:30: note: in expansion of macro 'RTA_PAYLOAD'
  563 |                              RTA_PAYLOAD(tb[NDTA_PARMS]));
      |                              ^~~~~~~~~~~
ipntable.c: In function 'ipntable_show':
ipntable.c:653:50: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  653 |                         else if ((filter.index = ll_name_to_index(*argv)) == 0)
      |                                                  ^~~~~~~~~~~~~~~~
    CC       iplink.o
In file included from ../include/uapi/linux/if.h:23,
                 from iplink.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iplink.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iplink.c:32:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink.c:33:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink.c: In function 'iplink_have_newlink':
iplink.c:243:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  243 |                 if (rtnl_send(&rth, &req.n, req.n.nlmsg_len) < 0) {
      |                                             ~~~~~^~~~~~~~~~
iplink.c: In function 'nl_get_ll_addr_len':
iplink.c:261:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  261 |         int dev_index = ll_name_to_index(ifname);
      |                         ^~~~~~~~~~~~~~~~
iplink.c:269:39: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  269 |                         .ifi_family = preferred_family,
      |                                       ^~~~~~~~~~~~~~~~
iplink.c:282:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  282 |         len = answer->nlmsg_len - NLMSG_LENGTH(sizeof(struct ifinfomsg));
      |               ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink.c:295:15: note: in expansion of macro 'RTA_PAYLOAD'
  295 |         len = RTA_PAYLOAD(tb[IFLA_ADDRESS]);
      |               ^~~~~~~~~~~
iplink.c: In function 'iplink_parse_vf_vlan_info':
iplink.c:312:21: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  312 |         ivvip->vf = vf;
      |                     ^~
iplink.c: In function 'iplink_parse_vf':
iplink.c:366:28: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  366 |         tivt.min_tx_rate = -1;
      |                            ^
iplink.c:367:28: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  367 |         tivt.max_tx_rate = -1;
      |                            ^
iplink.c:397:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  397 |                         ivm.vf = vf;
      |                                  ^~
iplink.c:452:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  452 |                         ivt.vf = vf;
      |                                  ^~
iplink.c:464:35: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  464 |                         tivt.vf = vf;
      |                                   ^~
iplink.c:471:35: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  471 |                         tivt.vf = vf;
      |                                   ^~
iplink.c:480:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  480 |                         ivs.vf = vf;
      |                                  ^~
iplink.c:491:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  491 |                         ivs.vf = vf;
      |                                  ^~
iplink.c:502:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  502 |                         ivt.vf = vf;
      |                                  ^~
iplink.c:518:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  518 |                         ivl.vf = vf;
      |                                  ^~
iplink.c:525:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  525 |                         ivg.vf = vf;
      |                                  ^~
iplink.c:536:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  536 |                         ivg.vf = vf;
      |                                  ^~
iplink.c:554:48: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  554 |                         ipaddr_get_vf_rate(tivt.vf, &tmin, &tmax, dev);
      |                                            ~~~~^~~
iplink.c:556:52: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  556 |                                 tivt.min_tx_rate = tmin;
      |                                                    ^~~~
iplink.c:558:52: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  558 |                                 tivt.max_tx_rate = tmax;
      |                                                    ^~~~
iplink.c: In function 'iplink_parse':
iplink.c:610:42: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-2' to '4294967294' [-Wsign-conversion]
  610 |                         req->i.ifi_flags &= ~IFF_UP;
      |                                          ^~
iplink.c:698:50: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-4097' to '4294963199' [-Wsign-conversion]
  698 |                                 req->i.ifi_flags &= ~IFF_MULTICAST;
      |                                                  ^~
iplink.c:708:50: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-513' to '4294966783' [-Wsign-conversion]
  708 |                                 req->i.ifi_flags &= ~IFF_ALLMULTI;
      |                                                  ^~
iplink.c:718:50: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-257' to '4294967039' [-Wsign-conversion]
  718 |                                 req->i.ifi_flags &= ~IFF_PROMISC;
      |                                                  ^~
iplink.c:728:50: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-33' to '4294967263' [-Wsign-conversion]
  728 |                                 req->i.ifi_flags &= ~IFF_NOTRAILERS;
      |                                                  ^~
iplink.c:736:50: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-129' to '4294967167' [-Wsign-conversion]
  736 |                                 req->i.ifi_flags &= ~IFF_NOARP;
      |                                                  ^~
iplink.c:749:71: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  749 |                         addattr8(&req->n, sizeof(*req), IFLA_CARRIER, carrier);
      |                                                                       ^~~~~~~
iplink.c:773:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  773 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
iplink.c:782:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  782 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
iplink.c:801:50: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-32769' to '4294934527' [-Wsign-conversion]
  801 |                                 req->i.ifi_flags &= ~IFF_DYNAMIC;
      |                                                  ^~
iplink.c:811:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  811 |                         len = strlen(*argv);
      |                               ^~~~~~
iplink.c:822:70: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  822 |                         addattr32(&req->n, sizeof(*req), IFLA_GROUP, group);
      |                                                                      ^~~~~
iplink.c:830:72: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  830 |                         addattr8(&req->n, sizeof(*req), IFLA_LINKMODE, mode);
      |                                                                        ^~~~
iplink.c:839:73: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  839 |                         addattr8(&req->n, sizeof(*req), IFLA_OPERSTATE, state);
      |                                                                         ^~~~~
iplink.c:870:60: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  870 |                                  IFLA_INET6_ADDR_GEN_MODE, mode);
      |                                                            ^~~~
iplink.c:886:35: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  886 |                                   link_netnsid);
      |                                   ^~~~~~~~~~~~
iplink.c:895:35: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  895 |                                   link_netnsid);
      |                                   ^~~~~~~~~~~~
iplink.c:904:34: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  904 |                                  proto_down);
      |                                  ^~~~~~~~~~
iplink.c:958:56: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  958 |                                   *argv, strlen(*argv) + 1);
      |                                          ~~~~~~~~~~~~~~^~~
iplink.c:1030:36: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1030 |                 req->i.ifi_index = ll_name_to_index(dev);
      |                                    ^~~~~~~~~~~~~~~~
iplink.c:1039:76: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1039 |                         addattr32(&req->n, sizeof(*req), IFLA_NEW_IFINDEX, index);
      |                                                                            ^~~~~
iplink.c:1050:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1050 |                         ifindex = ll_name_to_index(link);
      |                                   ^~~~~~~~~~~~~~~~
iplink.c:1053:69: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1053 |                         addattr32(&req->n, sizeof(*req), IFLA_LINK, ifindex);
      |                                                                     ^~~~~~~
iplink.c:1061:59: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1061 |                           IFLA_IFNAME, name, strlen(name) + 1);
      |                                              ~~~~~~~~~~~~~^~~
In file included from ../include/libnetlink.h:8:
iplink.c: In function 'iplink_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
iplink.c:1072:34: note: in expansion of macro 'NLM_F_REQUEST'
 1072 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
iplink.c:1073:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1073 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
iplink.c:1074:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1074 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
iplink.c:1090:26: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1090 |                          strlen(type));
      |                          ^~~~~~~~~~~~
iplink.c:1130:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1130 |         ll_drop_by_index(req.i.ifi_index);
      |                          ~~~~~^~~~~~~~~~
iplink.c: In function 'iplink_get':
iplink.c:1141:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1141 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
iplink.c:1148:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1148 |                           name, strlen(name) + 1);
      |                                 ~~~~~~~~~~~~~^~~
iplink.c: In function 'do_chflags':
iplink.c:1200:27: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1200 |         if ((ifr.ifr_flags^flags)&mask) {
      |                           ^
iplink.c:1201:31: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1201 |                 ifr.ifr_flags &= ~mask;
      |                               ^~
iplink.c:1201:34: warning: conversion from '__u32' {aka 'unsigned int'} to 'short int' may change value [-Wconversion]
 1201 |                 ifr.ifr_flags &= ~mask;
      |                                  ^
iplink.c:1202:31: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1202 |                 ifr.ifr_flags |= mask&flags;
      |                               ^~
iplink.c:1202:34: warning: conversion from '__u32' {aka 'unsigned int'} to 'short int' may change value [-Wconversion]
 1202 |                 ifr.ifr_flags |= mask&flags;
      |                                  ^~~~
iplink.c: In function 'parse_address':
iplink.c:1320:37: warning: conversion from 'int' to 'sa_family_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1320 |         ifr->ifr_hwaddr.sa_family = hatype;
      |                                     ^~~~~~
iplink.c: In function 'do_set':
iplink.c:1368:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2' to '4294967294' [-Wsign-conversion]
 1368 |                         flags &= ~IFF_UP;
      |                               ^~
iplink.c:1402:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-4097' to '4294963199' [-Wsign-conversion]
 1402 |                                 flags &= ~IFF_MULTICAST;
      |                                       ^~
iplink.c:1412:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-513' to '4294966783' [-Wsign-conversion]
 1412 |                                 flags &= ~IFF_ALLMULTI;
      |                                       ^~
iplink.c:1422:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-257' to '4294967039' [-Wsign-conversion]
 1422 |                                 flags &= ~IFF_PROMISC;
      |                                       ^~
iplink.c:1432:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-33' to '4294967263' [-Wsign-conversion]
 1432 |                                 flags &= ~IFF_NOTRAILERS;
      |                                       ^~
iplink.c:1440:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-129' to '4294967167' [-Wsign-conversion]
 1440 |                                 flags &= ~IFF_NOARP;
      |                                       ^~
iplink.c:1452:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-32769' to '4294934527' [-Wsign-conversion]
 1452 |                                 flags &= ~IFF_DYNAMIC;
      |                                       ^~
iplink.c: In function 'print_mpls_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink.c:1586:22: note: in expansion of macro 'RTA_PAYLOAD'
 1586 |                      RTA_PAYLOAD(attr));
      |                      ^~~~~~~~~~~
iplink.c: In function 'print_af_stats_attr':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink.c:1602:15: note: in expansion of macro 'RTA_PAYLOAD'
 1602 |         rem = RTA_PAYLOAD(attr);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
iplink.c:1603:54: note: in expansion of macro 'RTA_NEXT'
 1603 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
iplink.c:1603:54: note: in expansion of macro 'RTA_NEXT'
 1603 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
iplink.c:1610:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1610 |                                 ll_index_to_name(ifindex));
      |                                                  ^~~~~~~
iplink.c: In function 'print_af_stats':
iplink.c:1634:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1634 |         int len = n->nlmsg_len;
      |                   ^
iplink.c:1638:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1638 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iplink.c:1638:16: note: in expansion of macro 'NLMSG_LENGTH'
 1638 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |                ^~~~~~~~~~~~
iplink.c:1650:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1650 |                 print_af_stats_attr(fp, ifsm->ifindex, tb[IFLA_STATS_AF_SPEC]);
      |                                         ~~~~^~~~~~~~~
iplink.c: In function 'iplink_afstats':
iplink.c:1684:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1684 |                 ctx.ifindex = ll_name_to_index(filter_dev);
      |                               ^~~~~~~~~~~~~~~~
iplink.c: In function 'iplink_prop_mod':
iplink.c:1723:54: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1723 |                                   name, strlen(name) + 1);
      |                                         ~~~~~~~~~~~~~^~~
iplink.c:1744:28: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1744 |         req->i.ifi_index = ll_name_to_index(dev);
      |                            ^~~~~~~~~~~~~~~~
iplink.c: In function 'iplink_prop':
iplink.c:1759:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1759 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
    CC       ipmaddr.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ipmaddr.c:23:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ipmaddr.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipmaddr.c:29:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipmaddr.c:30:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipmaddr.c: In function 'parse_hex':
ipmaddr.c:59:29: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   59 |                 addr[len] = tmp;
      |                             ^~~
ipmaddr.c: In function 'read_dev_mcast':
ipmaddr.c:111:44: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  111 |                         ma->addr.bytelen = len;
      |                                            ^~~
ipmaddr.c:112:43: warning: conversion from 'int' to '__s16' {aka 'short int'} may change value [-Wconversion]
  112 |                         ma->addr.bitlen = len<<3;
      |                                           ^~~
ipmaddr.c: In function 'read_igmp6':
ipmaddr.c:188:44: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  188 |                         ma->addr.bytelen = len;
      |                                            ^~~
ipmaddr.c:189:43: warning: conversion from 'int' to '__s16' {aka 'short int'} may change value [-Wconversion]
  189 |                         ma->addr.bitlen = len<<3;
      |                                           ^~~
ipmaddr.c: In function 'print_maddr':
ipmaddr.c:211:74: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  211 |                 print_color_string(PRINT_ANY, ifa_family_color(list->addr.family),
      |                                                                ~~~~~~~~~~^~~~~~~
ipmaddr.c:218:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  218 |                 print_uint(PRINT_ANY, "users", " users %u", list->users);
      |                                                             ~~~~^~~~~~~
ipmaddr.c: In function 'print_mlist':
ipmaddr.c:241:69: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  241 |                         print_uint(PRINT_ANY, "ifindex", "%d:", list->index);
      |                                                                 ~~~~^~~~~~~
ipmaddr.c: In function 'multiaddr_modify':
ipmaddr.c:349:23: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |         if (ioctl(fd, cmd, (char *)&ifr) != 0) {
      |                       ^~~
    CC       ipmonitor.o
In file included from ipmonitor.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipmonitor.c:24:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipmonitor.c: In function 'accept_msg':
ipmonitor.c:67:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   67 |                 int len = n->nlmsg_len - NLMSG_LENGTH(sizeof(*r));
      |                           ^
ipmonitor.c: In function 'do_ipmonitor':
ipmonitor.c:240:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  240 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
ipmonitor.c:193:33: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  193 | #define IPMON_L_ALL             (~0)
      |                                 ^
ipmonitor.c:257:25: note: in expansion of macro 'IPMON_L_ALL'
  257 |                 lmask = IPMON_L_ALL;
      |                         ^~~~~~~~~~~
    CC       ipmroute.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ipmroute.c:24:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ipmroute.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipmroute.c:30:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipmroute.c:31:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipmroute.c: In function 'print_mroute':
ipmroute.c:60:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   60 |         int len = n->nlmsg_len;
      |                   ^
ipmroute.c:76:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   76 |         len -= NLMSG_LENGTH(sizeof(*r));
      |             ^~
In file included from ../include/uapi/linux/if_link.h:6,
                 from ../include/uapi/linux/netdevice.h:32:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipmroute.c:76:16: note: in expansion of macro 'NLMSG_LENGTH'
   76 |         len -= NLMSG_LENGTH(sizeof(*r));
      |                ^~~~~~~~~~~~
ipmroute.c:89:17: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   89 |         table = rtm_get_table(r, tb);
      |                 ^~~~~~~~~~~~~
ipmroute.c:95:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   95 |                 iif = rta_getattr_u32(tb[RTA_IIF]);
      |                       ^~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipmroute.c:115:45: note: in expansion of macro 'RTA_PAYLOAD'
  115 |                 src = rt_addr_n2a_r(family, RTA_PAYLOAD(tb[RTA_SRC]),
      |                                             ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipmroute.c:121:45: note: in expansion of macro 'RTA_PAYLOAD'
  121 |                 dst = rt_addr_n2a_r(family, RTA_PAYLOAD(tb[RTA_DST]),
      |                                             ^~~~~~~~~~~
ipmroute.c:139:70: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  139 |                                    "iif", "%-10s ", ll_index_to_name(iif));
      |                                                                      ^~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipmroute.c:148:23: note: in expansion of macro 'RTA_PAYLOAD'
  148 |                 len = RTA_PAYLOAD(tb[RTA_MULTIPATH]);
      |                       ^~~~~~~~~~~
ipmroute.c:163:76: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  163 |                                            "oif", "%s", ll_index_to_name(nh->rtnh_ifindex));
      |                                                                          ~~^~~~~~~~~~~~~~
ipmroute.c:172:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  172 |                         len -= NLMSG_ALIGN(nh->rtnh_len);
      |                             ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
ipmroute.c:172:32: note: in expansion of macro 'NLMSG_ALIGN'
  172 |                         len -= NLMSG_ALIGN(nh->rtnh_len);
      |                                ^~~~~~~~~~~
ipmroute.c:202:38: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'long unsigned int' may change value [-Wconversion]
  202 |                 __jiffies_to_tv(&tv, rta_getattr_u64(tb[RTA_EXPIRES]));
      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ipmroute.c:203:23: warning: conversion from '__time64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  203 |                 age = tv.tv_sec;
      |                       ^~
ipmroute.c:204:35: warning: conversion from '__suseconds64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  204 |                 age += tv.tv_usec / 1000000.;
      |                                   ^
ipmroute.c: In function 'iproute_dump_filter':
ipmroute.c:232:63: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  232 |                 err = addattr32(nlh, reqlen, RTA_TABLE, filter.tb);
      |                                                         ~~~~~~^~~
ipmroute.c: In function 'mroute_list':
ipmroute.c:258:51: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  258 |         filter.msrc.family = filter.mdst.family = family;
      |                                                   ^~~~~~
ipmroute.c:274:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  274 |                                 filter.tb = tid;
      |                                             ^~~
ipmroute.c:299:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  299 |                 idx = ll_name_to_index(id);
      |                       ^~~~~~~~~~~~~~~~
    CC       ipprefix.o
In file included from ipprefix.c:31:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipprefix.c:32:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipprefix.c: In function 'print_prefix':
ipprefix.c:42:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   42 |         int len = n->nlmsg_len;
      |                   ^
ipprefix.c:52:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   52 |         len -= NLMSG_LENGTH(sizeof(*prefix));
      |             ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipprefix.c:52:16: note: in expansion of macro 'NLMSG_LENGTH'
   52 |         len -= NLMSG_LENGTH(sizeof(*prefix));
      |                ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipprefix.c:76:25: note: in expansion of macro 'rt_addr_n2a_rta'
   76 |                         rt_addr_n2a_rta(family, tb[PREFIX_ADDRESS]),
      |                         ^~~~~~~~~~~~~~~
ipprefix.c:79:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   79 |         fprintf(fp, "dev %s ", ll_index_to_name(prefix->prefix_ifindex));
      |                                                 ~~~~~~^~~~~~~~~~~~~~~~
    CC       iptuntap.o
In file included from ../include/uapi/linux/if.h:23,
                 from iptuntap.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iptuntap.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iptuntap.c:32:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iptuntap.c:33:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from iptuntap.c:22:
iptuntap.c: In function 'tap_add_ioctl':
../include/uapi/linux/if_tun.h:76:25: warning: conversion from 'int' to 'short int' changes the value of '32768' [-Wconversion]
   76 | #define IFF_TUN_EXCL    0x8000
      |                         ^~~~~~
iptuntap.c:59:27: note: in expansion of macro 'IFF_TUN_EXCL'
   59 |         ifr->ifr_flags |= IFF_TUN_EXCL;
      |                           ^~~~~~~~~~~~
iptuntap.c: In function 'parse_args':
iptuntap.c:145:48: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]
  145 |                         if (**argv && ((user = strtol(*argv, &end, 10)), !*end))
      |                                                ^~~~~~
iptuntap.c:162:49: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]
  162 |                         if (**argv && ((group = strtol(*argv, &end, 10)), !*end))
      |                                                 ^~~~~~
iptuntap.c: In function 'do_add':
iptuntap.c:211:21: warning: unsigned conversion from 'int' to 'uid_t' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  211 |         uid_t uid = -1;
      |                     ^
iptuntap.c:212:21: warning: unsigned conversion from 'int' to 'gid_t' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  212 |         gid_t gid = -1;
      |                     ^
iptuntap.c: In function 'print_flags':
iptuntap.c:262:56: warning: conversion to 'long long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]
  262 |                 print_0xhex(PRINT_ANY, NULL, " %#llx", flags);
      |                                                        ^~~~~
iptuntap.c: In function 'show_processes':
iptuntap.c:333:70: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  333 |                                 print_uint(PRINT_ANY, "pid", "(%d)", pid);
      |                                                                      ^~~
In file included from ../include/uapi/linux/if_link.h:6,
                 from ../include/uapi/linux/netdevice.h:32,
                 from ../include/uapi/linux/if_arp.h:27,
                 from iptuntap.c:23:
iptuntap.c: In function 'print_tuntap':
../include/uapi/linux/netlink.h:102:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  102 | #define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/if_link.h:391:25: note: in expansion of macro 'NLMSG_PAYLOAD'
  391 | #define IFLA_PAYLOAD(n) NLMSG_PAYLOAD(n,sizeof(struct ifinfomsg))
      |                         ^~~~~~~~~~~~~
iptuntap.c:389:51: note: in expansion of macro 'IFLA_PAYLOAD'
  389 |         parse_rtattr(tb, IFLA_MAX, IFLA_RTA(ifi), IFLA_PAYLOAD(n));
      |                                                   ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iptuntap.c:397:9: note: in expansion of macro 'parse_rtattr_nested'
  397 |         parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |         ^~~~~~~~~~~~~~~~~~~
iptuntap.c:421:41: warning: conversion to 'uint64_t' {aka 'long long unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
  421 |                            " user %ld", owner);
      |                                         ^~~~~
iptuntap.c:424:42: warning: conversion to 'uint64_t' {aka 'long long unsigned int'} from 'long int' may change the sign of the result [-Wsign-conversion]
  424 |                            " group %ld", group);
      |                                          ^~~~~
    CC       iptoken.o
In file included from ../include/uapi/linux/if.h:23,
                 from iptoken.c:23:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iptoken.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iptoken.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iptoken.c:27:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iptoken.c: In function 'print_token':
iptoken.c:51:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   51 |         int len = n->nlmsg_len;
      |                   ^
iptoken.c:58:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   58 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |             ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iptoken.c:58:16: note: in expansion of macro 'NLMSG_LENGTH'
   58 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |                ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iptoken.c:75:9: note: in expansion of macro 'parse_rtattr_nested'
   75 |         parse_rtattr_nested(ltb, IFLA_INET6_MAX, tb[IFLA_PROTINFO]);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iptoken.c:86:28: note: in expansion of macro 'format_host_rta'
   86 |                            format_host_rta(ifi->ifi_family, ltb[IFLA_INET6_TOKEN]));
      |                            ^~~~~~~~~~~~~~~
iptoken.c:90:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   90 |                            ll_index_to_name(ifi->ifi_index));
      |                                             ~~~^~~~~~~~~~~
iptoken.c: In function 'iptoken_list':
iptoken.c:105:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  105 |                         if ((da.ifindex = ll_name_to_index(*argv)) == 0)
      |                                           ^~~~~~~~~~~~~~~~
iptoken.c: In function 'iptoken_set':
iptoken.c:149:38: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  149 |                                      ll_name_to_index(*argv)) == 0)
      |                                      ^~~~~~~~~~~~~~~~
    CC       ipxfrm.o
In file included from ipxfrm.c:39:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/in.h:23,
                 from xfrm.h:29,
                 from ipxfrm.c:40:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/alloca.h:21,
                 from ipxfrm.c:27:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipxfrm.c:41:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipxfrm.c: In function 'xfrm_addr_match':
ipxfrm.c:67:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   67 |                 if (memcmp(a1, a2, words << 2))
      |                                    ~~~~~~^~~~
ipxfrm.c: In function 'xfrm_selector_print':
ipxfrm.c:441:21: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  441 |                 f = preferred_family;
      |                     ^~~~~~~~~~~~~~~~
ipxfrm.c:492:60: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  492 |                 fprintf(fp, "dev %s ", ll_index_to_name(sel->ifindex));
      |                                                         ~~~^~~~~~~~~
ipxfrm.c: In function '__xfrm_algo_print':
ipxfrm.c:516:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  516 |         len -= sizeof(*algo);
      |             ^~
ipxfrm.c:516:16: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  516 |         len -= sizeof(*algo);
      |                ^~~~~~
ipxfrm.c:520:18: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  520 |         keylen = algo->alg_key_len / 8;
      |                  ^~~~
ipxfrm.c: In function 'xfrm_tmpl_print':
ipxfrm.c:585:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  585 |         int ntmpls = len / sizeof(struct xfrm_user_tmpl);
      |                          ^
ipxfrm.c:585:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  585 |         int ntmpls = len / sizeof(struct xfrm_user_tmpl);
      |                      ^~~
In file included from ipxfrm.c:36:
ipxfrm.c: In function 'xfrm_xfrma_print':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipxfrm.c:713:64: note: in expansion of macro 'RTA_PAYLOAD'
  713 |                 xfrm_algo_print(RTA_DATA(rta), XFRMA_ALG_AUTH, RTA_PAYLOAD(rta),
      |                                                                ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipxfrm.c:720:54: note: in expansion of macro 'RTA_PAYLOAD'
  720 |                 xfrm_auth_trunc_print(RTA_DATA(rta), RTA_PAYLOAD(rta), fp,
      |                                                      ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipxfrm.c:727:48: note: in expansion of macro 'RTA_PAYLOAD'
  727 |                 xfrm_aead_print(RTA_DATA(rta), RTA_PAYLOAD(rta), fp, prefix,
      |                                                ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipxfrm.c:735:33: note: in expansion of macro 'RTA_PAYLOAD'
  735 |                                 RTA_PAYLOAD(rta), fp, prefix, nokeys);
      |                                 ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipxfrm.c:741:64: note: in expansion of macro 'RTA_PAYLOAD'
  741 |                 xfrm_algo_print(RTA_DATA(rta), XFRMA_ALG_COMP, RTA_PAYLOAD(rta),
      |                                                                ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipxfrm.c:786:33: note: in expansion of macro 'RTA_PAYLOAD'
  786 |                                 RTA_PAYLOAD(rta), fp, prefix);
      |                                 ^~~~~~~~~~~
ipxfrm.c:898:66: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  898 |                 fprintf(fp, "dev %s dir %s", ll_index_to_name(xuo->ifindex),
      |                                                               ~~~^~~~~~~~~
ipxfrm.c: In function 'xfrm_state_info_print':
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-2' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:963:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  963 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_NOECN, "noecn");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-3' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:964:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  964 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_DECAP_DSCP, "decap-dscp");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-5' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:965:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  965 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_NOPMTUDISC, "nopmtudisc");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-9' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:966:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  966 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_WILDRECV, "wildrecv");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-17' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:967:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  967 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_ICMP, "icmp");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-33' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:968:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  968 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_AF_UNSPEC, "af-unspec");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-65' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:969:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  969 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_ALIGN4, "align4");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-129' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:970:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  970 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_STATE_ESN, "esn");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2' to '4294967294' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                               ^~
ipxfrm.c:978:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  978 |                 XFRM_FLAG_PRINT(fp, extra_flags,
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-3' to '4294967293' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                               ^~
ipxfrm.c:981:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
  981 |                 XFRM_FLAG_PRINT(fp, extra_flags,
      |                 ^~~~~~~~~~~~~~~
ipxfrm.c: In function 'xfrm_policy_info_print':
ipxfrm.c:1017:43: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 1017 |         xfrm_selector_print(&xpinfo->sel, preferred_family, fp, title);
      |                                           ^~~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-2' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:1085:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
 1085 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_POLICY_LOCALOK, "localok");
      |                 ^~~~~~~~~~~~~~~
xfrm.h:59:34: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes the value of '-3' [-Wsign-conversion]
   59 |                         flags &= ~f; \
      |                                  ^
ipxfrm.c:1086:17: note: in expansion of macro 'XFRM_FLAG_PRINT'
 1086 |                 XFRM_FLAG_PRINT(fp, flags, XFRM_POLICY_ICMP, "icmp");
      |                 ^~~~~~~~~~~~~~~
ipxfrm.c: In function 'xfrm_id_parse':
ipxfrm.c:1120:46: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1120 |                         filter.id_src_mask = src.bitlen;
      |                                              ^~~
ipxfrm.c:1133:46: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1133 |                         filter.id_dst_mask = dst.bitlen;
      |                                              ^~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1146:48: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1146 |                         filter.id_proto_mask = XFRM_FILTER_MASK_FULL;
      |                                                ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1153:46: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1153 |                         filter.id_spi_mask = XFRM_FILTER_MASK_FULL;
      |                                              ^~~~~~~~~~~~~~~~~~~~~
ipxfrm.c: In function 'xfrm_selector_upspec_parse':
ipxfrm.c:1274:50: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1274 |                                         upspec = pp->p_proto;
      |                                                  ^~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1282:52: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1282 |                         filter.upspec_proto_mask = XFRM_FILTER_MASK_FULL;
      |                                                    ^~~~~~~~~~~~~~~~~~~~~
ipxfrm.c:1292:51: warning: unsigned conversion from 'int' to '__be16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
 1292 |                                 sel->sport_mask = ~((__u16)0);
      |                                                   ^
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1294:52: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1294 |                         filter.upspec_sport_mask = XFRM_FILTER_MASK_FULL;
      |                                                    ^~~~~~~~~~~~~~~~~~~~~
ipxfrm.c:1304:51: warning: unsigned conversion from 'int' to '__be16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
 1304 |                                 sel->dport_mask = ~((__u16)0);
      |                                                   ^
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1306:52: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1306 |                         filter.upspec_dport_mask = XFRM_FILTER_MASK_FULL;
      |                                                    ^~~~~~~~~~~~~~~~~~~~~
ipxfrm.c:1317:43: warning: unsigned conversion from 'int' to '__be16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
 1317 |                         sel->sport_mask = ~((__u16)0);
      |                                           ^
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1319:52: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1319 |                         filter.upspec_sport_mask = XFRM_FILTER_MASK_FULL;
      |                                                    ^~~~~~~~~~~~~~~~~~~~~
ipxfrm.c:1331:43: warning: unsigned conversion from 'int' to '__be16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
 1331 |                         sel->dport_mask = ~((__u16)0);
      |                                           ^
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1333:52: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1333 |                         filter.upspec_dport_mask = XFRM_FILTER_MASK_FULL;
      |                                                    ^~~~~~~~~~~~~~~~~~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netdb.h:27,
                 from ipxfrm.c:34:
ipxfrm.c:1351:49: warning: conversion from 'unsigned int' to '__uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1351 |                         sel->sport = htons(uval >> 16);
      |                                            ~~~~~^~~~~
ipxfrm.c:1353:43: warning: unsigned conversion from 'int' to '__be16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
 1353 |                         sel->sport_mask = ~((__u16)0);
      |                                           ^
ipxfrm.c:1354:43: warning: unsigned conversion from 'int' to '__be16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
 1354 |                         sel->dport_mask = ~((__u16)0);
      |                                           ^
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes value from '-1' to '65535' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1356:52: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1356 |                         filter.upspec_dport_mask = XFRM_FILTER_MASK_FULL;
      |                                                    ^~~~~~~~~~~~~~~~~~~~~
ipxfrm.c: In function 'xfrm_selector_parse':
ipxfrm.c:1427:44: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1427 |                         sel->prefixlen_s = src.bitlen;
      |                                            ^~~
ipxfrm.c:1429:47: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1429 |                         filter.sel_src_mask = src.bitlen;
      |                                               ^~~
ipxfrm.c:1440:44: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1440 |                         sel->prefixlen_d = dst.bitlen;
      |                                            ^~~
ipxfrm.c:1442:47: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1442 |                         filter.sel_dst_mask = dst.bitlen;
      |                                               ^~~
ipxfrm.c:1452:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1452 |                                 ifindex = ll_name_to_index(*argv);
      |                                           ^~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
ipxfrm.c:1458:47: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1458 |                         filter.sel_dev_mask = XFRM_FILTER_MASK_FULL;
      |                                               ^~~~~~~~~~~~~~~~~~~~~
    CC       xfrm_state.o
In file included from xfrm_state.c:31:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/in.h:23,
                 from xfrm.h:29,
                 from xfrm_state.c:32:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from xfrm_state.c:27:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from xfrm_state.c:33:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
xfrm_state.c: In function 'xfrm_algo_parse':
xfrm_state.c:125:20: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  125 |         int slen = strlen(key);
      |                    ^~~~~~
xfrm_state.c:170:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  170 |                         memcpy(buf, key, len);
      |                                          ^~~
xfrm_state.c:174:28: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  174 |         alg->alg_key_len = len * 8;
      |                            ^~~
xfrm_state.c: In function 'xfrm_state_flag_parse':
xfrm_state.c:197:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  197 |         int len = strlen(*argv);
      |                   ^~~~~~
xfrm_state.c: In function 'xfrm_state_extra_flag_parse':
xfrm_state.c:244:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  244 |         int len = strlen(*argv);
      |                   ^~~~~~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
xfrm_state.c: In function 'xfrm_state_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
xfrm_state.c:302:34: note: in expansion of macro 'NLM_F_REQUEST'
  302 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
xfrm_state.c:303:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  303 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
xfrm_state.c:304:34: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  304 |                 .xsinfo.family = preferred_family,
      |                                  ^~~~~~~~~~~~~~~~
xfrm_state.c:575:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  575 |                                 len += alg.u.alg.alg_key_len / 8;
      |                                     ^~
xfrm_state.c:575:40: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  575 |                                 len += alg.u.alg.alg_key_len / 8;
      |                                        ^~~
xfrm_state.c:611:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  611 |                 xuo.ifindex = ifindex;
      |                               ^~~~~~~
xfrm_state.c:634:44: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  634 |                 req.xsinfo.replay_window = replay_window;
      |                                            ^~~~~~~~~~~~~
xfrm_state.c: In function 'xfrm_state_allocspi':
xfrm_state.c:793:37: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  793 |                 .xspi.info.family = preferred_family,
      |                                     ^~~~~~~~~~~~~~~~
xfrm_state.c: In function '__do_xfrm_state_print':
xfrm_state.c:959:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  959 |         int len = n->nlmsg_len;
      |                   ^
xfrm_state.c:973:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  973 |                 len -= NLMSG_SPACE(sizeof(*xsid));
      |                     ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_state.c:973:24: note: in expansion of macro 'NLMSG_SPACE'
  973 |                 len -= NLMSG_SPACE(sizeof(*xsid));
      |                        ^~~~~~~~~~~
xfrm_state.c:977:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  977 |                 len -= NLMSG_SPACE(sizeof(*xexp));
      |                     ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_state.c:977:24: note: in expansion of macro 'NLMSG_SPACE'
  977 |                 len -= NLMSG_SPACE(sizeof(*xexp));
      |                        ^~~~~~~~~~~
xfrm_state.c:981:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  981 |                 len -= NLMSG_SPACE(sizeof(*xsinfo));
      |                     ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_state.c:981:24: note: in expansion of macro 'NLMSG_SPACE'
  981 |                 len -= NLMSG_SPACE(sizeof(*xsinfo));
      |                        ^~~~~~~~~~~
xfrm_state.c: In function 'xfrm_state_get_or_delete':
xfrm_state.c:1058:32: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1058 |                 .xsid.family = preferred_family,
      |                                ^~~~~~~~~~~~~~~~
xfrm_state.c: In function 'xfrm_state_keep':
xfrm_state.c:1137:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1137 |         int len = n->nlmsg_len;
      |                   ^
xfrm_state.c:1148:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1148 |         len -= NLMSG_LENGTH(sizeof(*xsinfo));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
xfrm_state.c:1148:16: note: in expansion of macro 'NLMSG_LENGTH'
 1148 |         len -= NLMSG_LENGTH(sizeof(*xsinfo));
      |                ^~~~~~~~~~~~
xfrm_state.c:1192:20: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1192 |         xb->offset += new_n->nlmsg_len;
      |                    ^~
xfrm_state.c:1192:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1192 |         xb->offset += new_n->nlmsg_len;
      |                       ^~~~~
xfrm_state.c: In function 'xfrm_state_list_or_deleteall':
xfrm_state.c:1206:32: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 1206 |         filter.xsinfo.family = preferred_family;
      |                                ^~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_state.c:1215:44: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1215 |                         filter.mode_mask = XFRM_FILTER_MASK_FULL;
      |                                            ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_state.c:1221:45: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1221 |                         filter.reqid_mask = XFRM_FILTER_MASK_FULL;
      |                                             ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_state.c:1227:51: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
 1227 |                         filter.state_flags_mask = XFRM_FILTER_MASK_FULL;
      |                                                   ^~~~~~~~~~~~~~~~~~~~~
xfrm_state.c:1272:64: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1272 |                         if (rtnl_send(&rth, (void *)&req, req.n.nlmsg_len) < 0) {
      |                                                           ~~~~~^~~~~~~~~~
xfrm_state.c:1322:56: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1322 |                 if (rtnl_send(&rth, (void *)&req, req.n.nlmsg_len) < 0) {
      |                                                   ~~~~~^~~~~~~~~~
xfrm_state.c: In function 'print_sadinfo':
xfrm_state.c:1346:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1346 |         int len = n->nlmsg_len;
      |                   ^
xfrm_state.c:1348:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1348 |         len -= NLMSG_LENGTH(sizeof(__u32));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
xfrm_state.c:1348:16: note: in expansion of macro 'NLMSG_LENGTH'
 1348 |         len -= NLMSG_LENGTH(sizeof(__u32));
      |                ^~~~~~~~~~~~
    CC       xfrm_policy.o
In file included from xfrm_policy.c:32:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/in.h:23,
                 from xfrm.h:29,
                 from xfrm_policy.c:33:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from xfrm_policy.c:27:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from xfrm_policy.c:34:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
xfrm_policy.c: In function 'xfrm_policy_flag_parse':
xfrm_policy.c:143:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  143 |         int len = strlen(*argv);
      |                   ^~~~~~
xfrm_policy.c: In function 'xfrm_sctx_parse':
xfrm_policy.c:229:16: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  229 |         slen = strlen(s) + 1;
      |                ^~~~~~
xfrm_policy.c:234:25: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  234 |         sctx->ctx_len = slen;
      |                         ^~~~
xfrm_policy.c:235:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  235 |         sctx->len = sizeof(struct xfrm_user_sec_ctx) + slen;
      |                                                      ^
xfrm_policy.c:235:21: warning: conversion from 'unsigned int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  235 |         sctx->len = sizeof(struct xfrm_user_sec_ctx) + slen;
      |                     ^~~~~~
xfrm_policy.c:236:27: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  236 |         memcpy(ctxstr, s, slen);
      |                           ^~~~
In file included from xfrm_policy.c:31:
xfrm_policy.c: In function 'xfrm_policy_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
xfrm_policy.c:250:34: note: in expansion of macro 'NLM_F_REQUEST'
  250 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
xfrm_policy.c:251:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  251 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
xfrm_policy.c:252:38: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  252 |                 .xpinfo.sel.family = preferred_family,
      |                                      ^~~~~~~~~~~~~~~~
xfrm_policy.c:325:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  325 |                         if (tmpls_len + sizeof(*tmpl) > sizeof(tmpls_buf)) {
      |                                       ^
xfrm_policy.c:331:40: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  331 |                         tmpl->family = preferred_family;
      |                                        ^~~~~~~~~~~~~~~~
xfrm_policy.c:339:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  339 |                         tmpls_len += sizeof(*tmpl);
      |                                   ^~
xfrm_policy.c:339:38: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  339 |                         tmpls_len += sizeof(*tmpl);
      |                                      ^~~~~~
xfrm_policy.c: In function 'xfrm_policy_filter_match':
xfrm_policy.c:435:60: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  435 |         if ((xpinfo->sel.ifindex^filter.xpinfo.sel.ifindex)&filter.sel_dev_mask)
      |                                                            ^
xfrm_policy.c: In function 'xfrm_policy_print':
xfrm_policy.c:476:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  476 |         int len = n->nlmsg_len;
      |                   ^
xfrm_policy.c:489:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  489 |                 len -= NLMSG_SPACE(sizeof(*xpid));
      |                     ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_policy.c:489:24: note: in expansion of macro 'NLMSG_SPACE'
  489 |                 len -= NLMSG_SPACE(sizeof(*xpid));
      |                        ^~~~~~~~~~~
xfrm_policy.c:493:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  493 |                 len -= NLMSG_SPACE(sizeof(*xpexp));
      |                     ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_policy.c:493:24: note: in expansion of macro 'NLMSG_SPACE'
  493 |                 len -= NLMSG_SPACE(sizeof(*xpexp));
      |                        ^~~~~~~~~~~
xfrm_policy.c:497:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  497 |                 len -= NLMSG_SPACE(sizeof(*xpinfo));
      |                     ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_policy.c:497:24: note: in expansion of macro 'NLMSG_SPACE'
  497 |                 len -= NLMSG_SPACE(sizeof(*xpinfo));
      |                        ^~~~~~~~~~~
xfrm_policy.c: In function 'xfrm_policy_keep':
xfrm_policy.c:721:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  721 |         int len = n->nlmsg_len;
      |                   ^
xfrm_policy.c:733:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  733 |         len -= NLMSG_LENGTH(sizeof(*xpinfo));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
xfrm_policy.c:733:16: note: in expansion of macro 'NLMSG_LENGTH'
  733 |         len -= NLMSG_LENGTH(sizeof(*xpinfo));
      |                ^~~~~~~~~~~~
xfrm_policy.c:759:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  759 |         if (xb->offset + NLMSG_LENGTH(sizeof(*xpid)) > xb->size)
      |                        ^
xfrm_policy.c:787:20: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  787 |         xb->offset += new_n->nlmsg_len;
      |                    ^~
xfrm_policy.c:787:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  787 |         xb->offset += new_n->nlmsg_len;
      |                       ^~~~~
xfrm_policy.c: In function 'xfrm_policy_list_or_deleteall':
xfrm_policy.c:800:36: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  800 |         filter.xpinfo.sel.family = preferred_family;
      |                                    ^~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_policy.c:807:43: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
  807 |                         filter.dir_mask = XFRM_FILTER_MASK_FULL;
      |                                           ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_policy.c:814:45: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
  814 |                         filter.index_mask = XFRM_FILTER_MASK_FULL;
      |                                             ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_policy.c:820:45: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
  820 |                         filter.ptype_mask = XFRM_FILTER_MASK_FULL;
      |                                             ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_policy.c:831:46: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
  831 |                         filter.action_mask = XFRM_FILTER_MASK_FULL;
      |                                              ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_policy.c:838:48: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
  838 |                         filter.priority_mask = XFRM_FILTER_MASK_FULL;
      |                                                ^~~~~~~~~~~~~~~~~~~~~
xfrm.h:103:31: warning: unsigned conversion from 'int' to '__u8' {aka 'unsigned char'} changes value from '-1' to '255' [-Wsign-conversion]
  103 | #define XFRM_FILTER_MASK_FULL (~0)
      |                               ^
xfrm_policy.c:845:52: note: in expansion of macro 'XFRM_FILTER_MASK_FULL'
  845 |                         filter.policy_flags_mask = XFRM_FILTER_MASK_FULL;
      |                                                    ^~~~~~~~~~~~~~~~~~~~~
xfrm_policy.c:893:64: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  893 |                         if (rtnl_send(&rth, (void *)&req, req.n.nlmsg_len) < 0) {
      |                                                           ~~~~~^~~~~~~~~~
xfrm_policy.c:929:56: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  929 |                 if (rtnl_send(&rth, (void *)&req, req.n.nlmsg_len) < 0) {
      |                                                   ~~~~~^~~~~~~~~~
xfrm_policy.c: In function 'print_spdinfo':
xfrm_policy.c:952:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  952 |         int len = n->nlmsg_len;
      |                   ^
xfrm_policy.c:954:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  954 |         len -= NLMSG_LENGTH(sizeof(__u32));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
xfrm_policy.c:954:16: note: in expansion of macro 'NLMSG_LENGTH'
  954 |         len -= NLMSG_LENGTH(sizeof(__u32));
      |                ^~~~~~~~~~~~
xfrm_policy.c: In function 'xfrm_policy_default_print':
xfrm_policy.c:1211:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1211 |         int len = n->nlmsg_len - NLMSG_SPACE(sizeof(*up));
      |                   ^
xfrm_policy.c:1215:60: warning: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'unsigned int' [-Wformat=]
 1215 |                         "BUG: short nlmsg len %u (expect %lu) for XFRM_MSG_GETDEFAULT\n",
      |                                                          ~~^
      |                                                            |
      |                                                            long unsigned int
      |                                                          %u
    CC       xfrm_monitor.o
In file included from xfrm_monitor.c:32:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/in.h:23,
                 from xfrm.h:29,
                 from xfrm_monitor.c:33:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from xfrm_monitor.c:27:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from xfrm_monitor.c:34:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
xfrm_monitor.c: In function 'xfrm_acquire_print':
xfrm_monitor.c:52:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   52 |         int len = n->nlmsg_len;
      |                   ^
xfrm_monitor.c:56:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   56 |         len -= NLMSG_LENGTH(sizeof(*xacq));
      |             ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
xfrm_monitor.c:56:16: note: in expansion of macro 'NLMSG_LENGTH'
   56 |         len -= NLMSG_LENGTH(sizeof(*xacq));
      |                ^~~~~~~~~~~~
xfrm_monitor.c:68:26: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
   68 |                 family = preferred_family;
      |                          ^~~~~~~~~~~~~~~~
xfrm_monitor.c: In function 'xfrm_state_flush_print':
xfrm_monitor.c:113:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  113 |         int len = n->nlmsg_len;
      |                   ^
xfrm_monitor.c:116:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  116 |         len -= NLMSG_SPACE(sizeof(*xsf));
      |             ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_monitor.c:116:16: note: in expansion of macro 'NLMSG_SPACE'
  116 |         len -= NLMSG_SPACE(sizeof(*xsf));
      |                ^~~~~~~~~~~
xfrm_monitor.c: In function 'xfrm_policy_flush_print':
xfrm_monitor.c:142:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  142 |         int len = n->nlmsg_len;
      |                   ^
xfrm_monitor.c:144:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  144 |         len -= NLMSG_SPACE(0);
      |             ^~
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
xfrm_monitor.c:144:16: note: in expansion of macro 'NLMSG_SPACE'
  144 |         len -= NLMSG_SPACE(0);
      |                ^~~~~~~~~~~
xfrm_monitor.c: In function 'xfrm_report_print':
xfrm_monitor.c:179:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  179 |         int len = n->nlmsg_len;
      |                   ^
xfrm_monitor.c:183:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  183 |         len -= NLMSG_LENGTH(sizeof(*xrep));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
xfrm_monitor.c:183:16: note: in expansion of macro 'NLMSG_LENGTH'
  183 |         len -= NLMSG_LENGTH(sizeof(*xrep));
      |                ^~~~~~~~~~~~
xfrm_monitor.c:191:26: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  191 |                 family = preferred_family;
      |                          ^~~~~~~~~~~~~~~~
    CC       iplink_dummy.o
In file included from iplink_dummy.c:5:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_dummy.c:6:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_ifb.o
In file included from iplink_ifb.c:5:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_ifb.c:6:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_nlmon.o
In file included from iplink_nlmon.c:5:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_nlmon.c:6:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_team.o
In file included from iplink_team.c:5:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_team.c:6:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_vcan.o
In file included from iplink_vcan.c:5:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_vcan.c:6:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_vxcan.o
In file included from iplink_vxcan.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_vxcan.c:20:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_vxcan.c: In function 'vxcan_parse_opt':
iplink_vxcan.c:50:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   50 |         ifi_index = ifm->ifi_index;
      |                     ^~~
iplink_vxcan.c:72:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   72 |         ifm->ifi_index = ifi_index;
      |                          ^~~~~~~~~
    CC       iplink_vlan.o
In file included from iplink_vlan.c:18:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_vlan.c:19:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_vlan.c: In function 'vlan_parse_opt':
iplink_vlan.c:102:45: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2' to '4294967294' [-Wsign-conversion]
  102 |                                 flags.flags &= ~VLAN_FLAG_REORDER_HDR;
      |                                             ^~
iplink_vlan.c:111:45: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-3' to '4294967293' [-Wsign-conversion]
  111 |                                 flags.flags &= ~VLAN_FLAG_GVRP;
      |                                             ^~
iplink_vlan.c:120:45: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-9' to '4294967287' [-Wsign-conversion]
  120 |                                 flags.flags &= ~VLAN_FLAG_MVRP;
      |                                             ^~
iplink_vlan.c:129:45: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-5' to '4294967291' [-Wsign-conversion]
  129 |                                 flags.flags &= ~VLAN_FLAG_LOOSE_BINDING;
      |                                             ^~
iplink_vlan.c:138:45: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-17' to '4294967279' [-Wsign-conversion]
  138 |                                 flags.flags &= ~VLAN_FLAG_BRIDGE_BINDING;
      |                                             ^~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iplink_vlan.c: In function 'vlan_print_map':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink_vlan.c:183:15: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rem = RTA_PAYLOAD(attr);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
iplink_vlan.c:184:54: note: in expansion of macro 'RTA_NEXT'
  184 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
iplink_vlan.c:184:54: note: in expansion of macro 'RTA_NEXT'
  184 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
iplink_vlan.c: In function 'vlan_print_flags':
iplink_vlan.c:205:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2' to '4294967294' [-Wsign-conversion]
  205 |                 flags &= ~VLAN_FLAG_##f;                                \
      |                       ^~
iplink_vlan.c:208:9: note: in expansion of macro '_PF'
  208 |         _PF(REORDER_HDR);
      |         ^~~
iplink_vlan.c:205:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-3' to '4294967293' [-Wsign-conversion]
  205 |                 flags &= ~VLAN_FLAG_##f;                                \
      |                       ^~
iplink_vlan.c:209:9: note: in expansion of macro '_PF'
  209 |         _PF(GVRP);
      |         ^~~
iplink_vlan.c:205:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-9' to '4294967287' [-Wsign-conversion]
  205 |                 flags &= ~VLAN_FLAG_##f;                                \
      |                       ^~
iplink_vlan.c:210:9: note: in expansion of macro '_PF'
  210 |         _PF(MVRP);
      |         ^~~
iplink_vlan.c:205:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-5' to '4294967291' [-Wsign-conversion]
  205 |                 flags &= ~VLAN_FLAG_##f;                                \
      |                       ^~
iplink_vlan.c:211:9: note: in expansion of macro '_PF'
  211 |         _PF(LOOSE_BINDING);
      |         ^~~
iplink_vlan.c:205:23: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-17' to '4294967279' [-Wsign-conversion]
  205 |                 flags &= ~VLAN_FLAG_##f;                                \
      |                       ^~
iplink_vlan.c:212:9: note: in expansion of macro '_PF'
  212 |         _PF(BRIDGE_BINDING);
      |         ^~~
    CC       link_veth.o
In file included from link_veth.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_veth.c:18:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
link_veth.c: In function 'veth_parse_opt':
link_veth.c:48:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   48 |         ifi_index = ifm->ifi_index;
      |                     ^~~
link_veth.c:70:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   70 |         ifm->ifi_index = ifi_index;
      |                          ^~~~~~~~~
    CC       link_gre.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_tunnel.h:6,
                 from link_gre.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/string.h:26,
                 from link_gre.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from link_gre.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_gre.c:23:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
link_gre.c: In function 'gre_parse_opt':
link_gre.c:81:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   81 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
link_gre.c:124:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  124 |                 len = answer->nlmsg_len;
      |                       ^~~~~~
link_gre.c:125:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  125 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                     ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
link_gre.c:125:24: note: in expansion of macro 'NLMSG_LENGTH'
  125 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                        ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_gre.c:134:17: note: in expansion of macro 'parse_rtattr_nested'
  134 |                 parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_gre.c:139:17: note: in expansion of macro 'parse_rtattr_nested'
  139 |                 parse_rtattr_nested(greinfo, IFLA_GRE_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
link_gre.c:219:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  219 |                         iflags &= ~GRE_KEY;
      |                                   ^
link_gre.c:220:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  220 |                         oflags &= ~GRE_KEY;
      |                                   ^
link_gre.c:227:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  227 |                         iflags &= ~GRE_KEY;
      |                                   ^
link_gre.c:234:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  234 |                         oflags &= ~GRE_KEY;
      |                                   ^
link_gre.c:240:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  240 |                         iflags &= ~GRE_SEQ;
      |                                   ^
link_gre.c:241:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  241 |                         oflags &= ~GRE_SEQ;
      |                                   ^
link_gre.c:245:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  245 |                         iflags &= ~GRE_SEQ;
      |                                   ^
link_gre.c:249:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  249 |                         oflags &= ~GRE_SEQ;
      |                                   ^
link_gre.c:254:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  254 |                         iflags &= ~GRE_CSUM;
      |                                   ^
link_gre.c:255:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  255 |                         oflags &= ~GRE_CSUM;
      |                                   ^
link_gre.c:259:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  259 |                         iflags &= ~GRE_CSUM;
      |                                   ^
link_gre.c:263:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  263 |                         oflags &= ~GRE_CSUM;
      |                                   ^
link_gre.c:297:39: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  297 |                                 tos = uval;
      |                                       ^~~~
link_gre.c:325:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-2' [-Wsign-conversion]
  325 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM;
      |                                       ^
link_gre.c:329:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-3' [-Wsign-conversion]
  329 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM6;
      |                                       ^
link_gre.c:333:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-5' [-Wsign-conversion]
  333 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_REMCSUM;
      |                                       ^
link_gre.c:351:40: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1048576' to '4293918720' [-Wsign-conversion]
  351 |                         if (erspan_idx & ~((1<<20) - 1) || erspan_idx == 0)
      |                                        ^
    CC       iplink_can.o
In file included from iplink_can.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_can.c:20:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_can.c: In function 'can_parse_opt':
iplink_can.c:136:22: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  136 |         __u32 tdcv = -1, tdco = -1, tdcf = -1;
      |                      ^
iplink_can.c:136:33: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  136 |         __u32 tdcv = -1, tdco = -1, tdcf = -1;
      |                                 ^
iplink_can.c:136:44: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
  136 |         __u32 tdcv = -1, tdco = -1, tdcf = -1;
      |                                            ^
iplink_can.c: In function 'can_print_timing_min_max':
iplink_can.c:339:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  339 |         print_uint(PRINT_ANY, "min", " %d", min);
      |                                             ^~~
iplink_can.c:340:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  340 |         print_uint(PRINT_ANY, "max", "..%d", max);
      |                                              ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iplink_can.c: In function 'can_print_tdc_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_can.c:348:9: note: in expansion of macro 'parse_rtattr_nested'
  348 |         parse_rtattr_nested(tb, IFLA_CAN_TDC_MAX, tdc_attr);
      |         ^~~~~~~~~~~~~~~~~~~
iplink_can.c: In function 'can_print_tdc_const_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_can.c:376:9: note: in expansion of macro 'parse_rtattr_nested'
  376 |         parse_rtattr_nested(tb, IFLA_CAN_TDC_MAX, tdc_attr);
      |         ^~~~~~~~~~~~~~~~~~~
iplink_can.c:383:59: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  383 |                 can_print_timing_min_max("tdcv", " tdcv", *tdcv_min, *tdcv_max);
      |                                                           ^~~~~~~~~
iplink_can.c:383:70: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  383 |                 can_print_timing_min_max("tdcv", " tdcv", *tdcv_min, *tdcv_max);
      |                                                                      ^~~~~~~~~
iplink_can.c:389:59: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  389 |                 can_print_timing_min_max("tdco", " tdco", *tdco_min, *tdco_max);
      |                                                           ^~~~~~~~~
iplink_can.c:389:70: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  389 |                 can_print_timing_min_max("tdco", " tdco", *tdco_min, *tdco_max);
      |                                                                      ^~~~~~~~~
iplink_can.c:395:59: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  395 |                 can_print_timing_min_max("tdcf", " tdcf", *tdcf_min, *tdcf_max);
      |                                                           ^~~~~~~~~
iplink_can.c:395:70: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  395 |                 can_print_timing_min_max("tdcf", " tdcf", *tdcf_min, *tdcf_max);
      |                                                                      ^~~~~~~~~
iplink_can.c: In function 'can_print_ctrlmode_ext':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_can.c:405:9: note: in expansion of macro 'parse_rtattr_nested'
  405 |         parse_rtattr_nested(tb, IFLA_CAN_CTRLMODE_MAX, ctrlmode_ext_attr);
      |         ^~~~~~~~~~~~~~~~~~~
iplink_can.c: In function 'can_print_opt':
iplink_can.c:483:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  483 |                                          btc->tseg1_min, btc->tseg1_max);
      |                                          ~~~^~~~~~~~~~~
iplink_can.c:483:61: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  483 |                                          btc->tseg1_min, btc->tseg1_max);
      |                                                          ~~~^~~~~~~~~~~
iplink_can.c:485:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  485 |                                          btc->tseg2_min, btc->tseg2_max);
      |                                          ~~~^~~~~~~~~~~
iplink_can.c:485:61: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  485 |                                          btc->tseg2_min, btc->tseg2_max);
      |                                                          ~~~^~~~~~~~~~~
iplink_can.c:486:63: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  486 |                 can_print_timing_min_max("sjw", " sjw", 1, btc->sjw_max);
      |                                                            ~~~^~~~~~~~~
iplink_can.c:488:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  488 |                                          btc->brp_min, btc->brp_max);
      |                                          ~~~^~~~~~~~~
iplink_can.c:488:59: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  488 |                                          btc->brp_min, btc->brp_max);
      |                                                        ~~~^~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink_can.c:495:35: note: in expansion of macro 'RTA_PAYLOAD'
  495 |                 int bitrate_cnt = RTA_PAYLOAD(tb[IFLA_CAN_BITRATE_CONST]) /
      |                                   ^~~~~~~~~~~
iplink_can.c:564:46: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  564 |                                          dbtc->tseg1_min, dbtc->tseg1_max);
      |                                          ~~~~^~~~~~~~~~~
iplink_can.c:564:63: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  564 |                                          dbtc->tseg1_min, dbtc->tseg1_max);
      |                                                           ~~~~^~~~~~~~~~~
iplink_can.c:566:46: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  566 |                                          dbtc->tseg2_min, dbtc->tseg2_max);
      |                                          ~~~~^~~~~~~~~~~
iplink_can.c:566:63: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  566 |                                          dbtc->tseg2_min, dbtc->tseg2_max);
      |                                                           ~~~~^~~~~~~~~~~
iplink_can.c:567:65: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  567 |                 can_print_timing_min_max("sjw", " dsjw", 1, dbtc->sjw_max);
      |                                                             ~~~~^~~~~~~~~
iplink_can.c:569:46: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  569 |                                          dbtc->brp_min, dbtc->brp_max);
      |                                          ~~~~^~~~~~~~~
iplink_can.c:569:61: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  569 |                                          dbtc->brp_min, dbtc->brp_max);
      |                                                         ~~~~^~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink_can.c:582:25: note: in expansion of macro 'RTA_PAYLOAD'
  582 |                         RTA_PAYLOAD(tb[IFLA_CAN_DATA_BITRATE_CONST]) /
      |                         ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink_can.c:615:31: note: in expansion of macro 'RTA_PAYLOAD'
  615 |                 int trm_cnt = RTA_PAYLOAD(tb[IFLA_CAN_TERMINATION_CONST]) /
      |                               ^~~~~~~~~~~
    CC       iplink_xdp.o
In file included from ../include/bpf_util.h:23,
                 from iplink_xdp.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netinet/in.h:23,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
In file included from iplink_xdp.c:19:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_xdp.c: In function 'xdp_ebpf_cb':
iplink_xdp.c:35:55: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   35 |         addattr32(&req->n, sizeof(*req), IFLA_XDP_FD, fd);
      |                                                       ^~
iplink_xdp.c: In function 'xdp_parse':
iplink_xdp.c:64:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   64 |                 int ifindex = ll_name_to_index(ifname);
      |                               ^~~~~~~~~~~~~~~~
iplink_xdp.c:68:31: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   68 |                 cfg.ifindex = ifindex;
      |                               ^~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iplink_xdp.c: In function 'xdp_dump':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_xdp.c:163:9: note: in expansion of macro 'parse_rtattr_nested'
  163 |         parse_rtattr_nested(tb, IFLA_XDP_MAX, xdp);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       iplink_macvlan.o
In file included from iplink_macvlan.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_macvlan.c:22:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_macvlan.c: In function 'macvlan_print_opt':
iplink_macvlan.c:262:64: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  262 |         print_int(PRINT_ANY, "macaddr_count", "remotes (%d) ", count);
      |                                                                ^~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink_macvlan.c:268:15: note: in expansion of macro 'RTA_PAYLOAD'
  268 |         len = RTA_PAYLOAD(tb[IFLA_MACVLAN_MACADDR_DATA]);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
iplink_macvlan.c:271:40: note: in expansion of macro 'RTA_NEXT'
  271 |         for (; RTA_OK(rta, len); rta = RTA_NEXT(rta, len)) {
      |                                        ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
iplink_macvlan.c:271:40: note: in expansion of macro 'RTA_NEXT'
  271 |         for (; RTA_OK(rta, len); rta = RTA_NEXT(rta, len)) {
      |                                        ^~~~~~~~
    CC       ipl2tp.o
In file included from ../include/uapi/linux/if.h:23,
                 from ipl2tp.c:22:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ipl2tp.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipl2tp.c:30:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipl2tp.c:31:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from ipl2tp.c:28:
ipl2tp.c: In function 'create_tunnel':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipl2tp.c:98:9: note: in expansion of macro 'GENL_REQUEST'
   98 |         GENL_REQUEST(req, 1024, genl_family, 0, L2TP_GENL_VERSION,
      |         ^~~~~~~~~~~~
ipl2tp.c:108:33: warning: conversion to 'int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  108 |         addattr_l(&req.n, 1024, local_attr, &p->local_ip.data,
      |                                 ^~~~~~~~~~
ipl2tp.c:113:33: warning: conversion to 'int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  113 |         addattr_l(&req.n, 1024, peer_attr, &p->peer_ip.data,
      |                                 ^~~~~~~~~
ipl2tp.c: In function 'delete_tunnel':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipl2tp.c:135:9: note: in expansion of macro 'GENL_REQUEST'
  135 |         GENL_REQUEST(req, 128, genl_family, 0, L2TP_GENL_VERSION,
      |         ^~~~~~~~~~~~
ipl2tp.c: In function 'create_session':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipl2tp.c:148:9: note: in expansion of macro 'GENL_REQUEST'
  148 |         GENL_REQUEST(req, 1024, genl_family, 0, L2TP_GENL_VERSION,
      |         ^~~~~~~~~~~~
ipl2tp.c:165:44: warning: conversion to '__u64' {aka 'long long unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  165 |                                           p->reorder_timeout);
      |                                           ~^~~~~~~~~~~~~~~~~
ipl2tp.c: In function 'delete_session':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipl2tp.c:183:9: note: in expansion of macro 'GENL_REQUEST'
  183 |         GENL_REQUEST(req, 1024, genl_family, 0, L2TP_GENL_VERSION,
      |         ^~~~~~~~~~~~
ipl2tp.c: In function 'print_cookie':
ipl2tp.c:201:13: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  201 |         n = snprintf(abuf, sizeof(abuf),
      |             ^~~~~~~~
ipl2tp.c: In function 'print_session':
ipl2tp.c:315:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  315 |                            "  reorder timeout: %u", p->reorder_timeout);
      |                                                     ~^~~~~~~~~~~~~~~~~
ipl2tp.c: In function 'get_response':
ipl2tp.c:345:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  345 |         len = n->nlmsg_len - NLMSG_LENGTH(sizeof(*ghdr));
      |               ^
In file included from ../include/libnetlink.h:9,
                 from ../include/libgenl.h:5:
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipl2tp.c:376:40: note: in expansion of macro 'RTA_PAYLOAD'
  376 |                        p->cookie_len = RTA_PAYLOAD(attrs[L2TP_ATTR_COOKIE]));
      |                                        ^~~~~~~~~~~
ipl2tp.c:376:38: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  376 |                        p->cookie_len = RTA_PAYLOAD(attrs[L2TP_ATTR_COOKIE]));
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipl2tp.c:380:45: note: in expansion of macro 'RTA_PAYLOAD'
  380 |                        p->peer_cookie_len = RTA_PAYLOAD(attrs[L2TP_ATTR_PEER_COOKIE]));
      |                                             ^~~~~~~~~~~
ipl2tp.c:380:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  380 |                        p->peer_cookie_len = RTA_PAYLOAD(attrs[L2TP_ATTR_PEER_COOKIE]));
ipl2tp.c:388:38: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'int' may change value [-Wconversion]
  388 |                 p->reorder_timeout = rta_getattr_u64(attrs[L2TP_ATTR_RECV_TIMEOUT]);
      |                                      ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipl2tp.c:419:17: note: in expansion of macro 'parse_rtattr_nested'
  419 |                 parse_rtattr_nested(tb, L2TP_ATTR_STATS_MAX, nla_stats);
      |                 ^~~~~~~~~~~~~~~~~~~
ipl2tp.c: In function 'get_session':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipl2tp.c:454:9: note: in expansion of macro 'GENL_REQUEST'
  454 |         GENL_REQUEST(req, 128, genl_family, 0, L2TP_GENL_VERSION,
      |         ^~~~~~~~~~~~
ipl2tp.c:466:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  466 |         if (rtnl_send(&genl_rth, &req, req.n.nlmsg_len) < 0)
      |                                        ~~~~~^~~~~~~~~~
ipl2tp.c: In function 'get_tunnel':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipl2tp.c:492:9: note: in expansion of macro 'GENL_REQUEST'
  492 |         GENL_REQUEST(req, 1024, genl_family, 0, L2TP_GENL_VERSION,
      |         ^~~~~~~~~~~~
ipl2tp.c:501:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  501 |         if (rtnl_send(&genl_rth, &req, req.n.nlmsg_len) < 0)
      |                                        ~~~~~^~~~~~~~~~
ipl2tp.c: In function 'parse_args':
ipl2tp.c:671:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  671 |                         slen = strlen(*argv);
      |                                ^~~~~~
ipl2tp.c:682:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  682 |                         slen = strlen(*argv);
      |                                ^~~~~~
    CC       link_vti.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_tunnel.h:6,
                 from link_vti.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/string.h:26,
                 from link_vti.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from link_vti.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_vti.c:23:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
link_vti.c: In function 'vti_parse_opt':
link_vti.c:52:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   52 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
link_vti.c:79:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   79 |                 len = answer->nlmsg_len;
      |                       ^~~~~~
link_vti.c:80:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   80 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                     ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
link_vti.c:80:24: note: in expansion of macro 'NLMSG_LENGTH'
   80 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                        ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_vti.c:89:17: note: in expansion of macro 'parse_rtattr_nested'
   89 |                 parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_vti.c:94:17: note: in expansion of macro 'parse_rtattr_nested'
   94 |                 parse_rtattr_nested(vtiinfo, IFLA_VTI_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
    CC       link_vti6.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_tunnel.h:6,
                 from link_vti6.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/string.h:26,
                 from link_vti6.c:14:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from link_vti6.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_vti6.c:24:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
link_vti6.c: In function 'vti6_parse_opt':
link_vti6.c:54:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   54 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
link_vti6.c:81:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   81 |                 len = answer->nlmsg_len;
      |                       ^~~~~~
link_vti6.c:82:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   82 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                     ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
link_vti6.c:82:24: note: in expansion of macro 'NLMSG_LENGTH'
   82 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                        ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_vti6.c:91:17: note: in expansion of macro 'parse_rtattr_nested'
   91 |                 parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_vti6.c:96:17: note: in expansion of macro 'parse_rtattr_nested'
   96 |                 parse_rtattr_nested(vtiinfo, IFLA_VTI_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
    CC       link_xfrm.o
In file included from link_xfrm.c:12:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_xfrm.c:13:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_vxlan.o
In file included from iplink_vxlan.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_vxlan.c:22:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_vxlan.c: In function 'vxlan_parse_opt':
iplink_vxlan.c:160:39: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  160 |                                 ttl = uval;
      |                                       ^~~~
iplink_vxlan.c:173:39: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  173 |                                 tos = uval;
      |                                       ^~~~
    CC       tcp_metrics.o
In file included from ../include/uapi/linux/if.h:23,
                 from tcp_metrics.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from tcp_metrics.c:11:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from tcp_metrics.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from tcp_metrics.c:26:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
tcp_metrics.c: In function 'print_tcp_metrics':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
tcp_metrics.c:98:9: note: in expansion of macro 'parse_rtattr_nested'
   98 |         parse_rtattr_nested(m, TCP_METRIC_MAX + 1, a);
      |         ^~~~~~~~~~~~~~~~~~~
tcp_metrics.c: In function 'process_msg':
tcp_metrics.c:166:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  166 |         int len = n->nlmsg_len;
      |                   ^
tcp_metrics.c:173:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  173 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from tcp_metrics.c:22:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
tcp_metrics.c:173:16: note: in expansion of macro 'NLMSG_LENGTH'
  173 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
In file included from tcp_metrics.c:27:
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
tcp_metrics.c:45:9: note: in expansion of macro 'GENL_REQUEST'
   45 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0, \
      |         ^~~~~~~~~~~~
tcp_metrics.c:237:17: note: in expansion of macro 'TCPM_REQUEST'
  237 |                 TCPM_REQUEST(req2, 128, TCP_METRICS_CMD_DEL, NLM_F_REQUEST);
      |                 ^~~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
tcp_metrics.c:245:21: note: in expansion of macro 'NLMSG_ALIGN'
  245 |                 if (NLMSG_ALIGN(f.flushp) + req2.n.nlmsg_len > f.flushe) {
      |                     ^~~~~~~~~~~
../include/uapi/linux/netlink.h:91:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                                  ^
tcp_metrics.c:249:54: note: in expansion of macro 'NLMSG_ALIGN'
  249 |                 fn = (struct nlmsghdr *) (f.flushb + NLMSG_ALIGN(f.flushp));
      |                                                      ^~~~~~~~~~~
tcp_metrics.c:264:50: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  264 |                            ifa_family_color(daddr.family),
      |                                             ~~~~~^~~~~~~
tcp_metrics.c:270:34: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
  270 |                 double age = val / 1000.;
      |                                  ^
tcp_metrics.c:305:22: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
  305 |                 ts = a ? rta_getattr_u64(a) : 0;
      |                      ^
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
tcp_metrics.c:318:30: note: in expansion of macro 'RTA_PAYLOAD'
  318 |                 int i, max = RTA_PAYLOAD(a);
      |                              ^~~~~~~~~~~
tcp_metrics.c: In function 'tcpm_do_cmd':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
tcp_metrics.c:45:9: note: in expansion of macro 'GENL_REQUEST'
   45 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0, \
      |         ^~~~~~~~~~~~
tcp_metrics.c:346:9: note: in expansion of macro 'TCPM_REQUEST'
  346 |         TCPM_REQUEST(req, 1024, TCP_METRICS_CMD_GET, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~
tcp_metrics.c:353:26: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  353 |         f.daddr.family = preferred_family;
      |                          ^~~~~~~~~~~~~~~~
tcp_metrics.c:355:26: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  355 |         f.saddr.family = preferred_family;
      |                          ^~~~~~~~~~~~~~~~
tcp_metrics.c:442:28: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  442 |         req.n.nlmsg_type = genl_family;
      |                            ^~~~~~~~~~~
tcp_metrics.c:468:57: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  468 |                         if (rtnl_send(&grth, &req, req.n.nlmsg_len) < 0) {
      |                                                    ~~~~~^~~~~~~~~~
tcp_metrics.c:511:49: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  511 |                 if (rtnl_send(&grth, &req, req.n.nlmsg_len) < 0) {
      |                                            ~~~~~^~~~~~~~~~
    CC       iplink_ipoib.o
In file included from iplink_ipoib.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_ipoib.c:20:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       ipnetconf.o
In file included from ipnetconf.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipnetconf.c:25:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipnetconf.c: In function 'print_netconf':
ipnetconf.c:54:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   54 |         int len = n->nlmsg_len;
      |                   ^
ipnetconf.c:68:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   68 |         len -= NLMSG_SPACE(sizeof(*ncm));
      |             ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:91:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   91 | #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
      |                          ^
../include/uapi/linux/netlink.h:94:26: note: in expansion of macro 'NLMSG_ALIGN'
   94 | #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
      |                          ^~~~~~~~~~~
ipnetconf.c:68:16: note: in expansion of macro 'NLMSG_SPACE'
   68 |         len -= NLMSG_SPACE(sizeof(*ncm));
      |                ^~~~~~~~~~~
../include/uapi/linux/netlink.h:102:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  102 | #define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
ipnetconf.c:78:22: note: in expansion of macro 'NLMSG_PAYLOAD'
   78 |                      NLMSG_PAYLOAD(n, sizeof(*ncm)));
      |                      ^~~~~~~~~~~~~
ipnetconf.c:81:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   81 |                 ifindex = rta_getattr_u32(tb[NETCONFA_IFINDEX]);
      |                           ^~~~~~~~~~~~~~~
ipnetconf.c:104:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  104 |                         dev = ll_index_to_name(ifindex);
      |                                                ^~~~~~~
ipnetconf.c: In function 'do_show':
ipnetconf.c:179:42: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  179 |                         filter.ifindex = ll_name_to_index(*argv);
      |                                          ^~~~~~~~~~~~~~~~
ipnetconf.c:193:38: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  193 |                 req.ncm.ncm_family = filter.family;
      |                                      ^~~~~~
ipnetconf.c:197:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  197 |                 if (rtnl_send(&rth, &req.n, req.n.nlmsg_len) < 0) {
      |                                             ~~~~~^~~~~~~~~~
    CC       link_ip6tnl.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_tunnel.h:6,
                 from link_ip6tnl.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/string.h:26,
                 from link_ip6tnl.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from link_ip6tnl.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_ip6tnl.c:24:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
link_ip6tnl.c: In function 'ip6tunnel_parse_opt':
link_ip6tnl.c:77:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   77 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
link_ip6tnl.c:112:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  112 |                 len = answer->nlmsg_len;
      |                       ^~~~~~
link_ip6tnl.c:113:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  113 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                     ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
link_ip6tnl.c:113:24: note: in expansion of macro 'NLMSG_LENGTH'
  113 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                        ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_ip6tnl.c:122:17: note: in expansion of macro 'parse_rtattr_nested'
  122 |                 parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_ip6tnl.c:127:17: note: in expansion of macro 'parse_rtattr_nested'
  127 |                 parse_rtattr_nested(iptuninfo, IFLA_IPTUN_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
link_ip6tnl.c:210:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2' to '4294967294' [-Wsign-conversion]
  210 |                                 flags &= ~IP6_TNL_F_IGN_ENCAP_LIMIT;
      |                                       ^~
link_ip6tnl.c:226:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-3' to '4294967293' [-Wsign-conversion]
  226 |                                 flags &= ~IP6_TNL_F_USE_ORIG_TCLASS;
      |                                       ^~
link_ip6tnl.c:242:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-5' to '4294967291' [-Wsign-conversion]
  242 |                                 flags &= ~IP6_TNL_F_USE_ORIG_FLOWLABEL;
      |                                       ^~
link_ip6tnl.c:257:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-33' to '4294967263' [-Wsign-conversion]
  257 |                                 flags &= ~IP6_TNL_F_USE_ORIG_FWMARK;
      |                                       ^~
link_ip6tnl.c:262:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-65' to '4294967231' [-Wsign-conversion]
  262 |                         flags &= ~IP6_TNL_F_ALLOW_LOCAL_REMOTE;
      |                               ^~
link_ip6tnl.c:288:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-2' [-Wsign-conversion]
  288 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM;
      |                                       ^
link_ip6tnl.c:292:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-3' [-Wsign-conversion]
  292 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM6;
      |                                       ^
link_ip6tnl.c:296:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-5' [-Wsign-conversion]
  296 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_REMCSUM;
      |                                       ^
    CC       link_iptnl.o
In file included from ../include/uapi/linux/in.h:23,
                 from link_iptnl.c:19:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/string.h:26,
                 from link_iptnl.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from link_iptnl.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_iptnl.c:24:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
link_iptnl.c: In function 'iptunnel_parse_opt':
link_iptnl.c:78:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   78 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
link_iptnl.c:116:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  116 |                 len = answer->nlmsg_len;
      |                       ^~~~~~
link_iptnl.c:117:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  117 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                     ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
link_iptnl.c:117:24: note: in expansion of macro 'NLMSG_LENGTH'
  117 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                        ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_iptnl.c:126:17: note: in expansion of macro 'parse_rtattr_nested'
  126 |                 parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_iptnl.c:131:17: note: in expansion of macro 'parse_rtattr_nested'
  131 |                 parse_rtattr_nested(iptuninfo, IFLA_IPTUN_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
link_iptnl.c:151:38: warning: conversion to '__s16' {aka 'short int'} from 'int' may change the sign of the result [-Wsign-conversion]
  151 |                 ip6rdprefix.bitlen = rta ? rta_getattr_u16(rta) : 0;
      |                                      ^~~
link_iptnl.c:154:43: warning: conversion to '__s16' {aka 'short int'} from 'int' may change the sign of the result [-Wsign-conversion]
  154 |                 ip6rdrelayprefix.bitlen = rta ? rta_getattr_u16(rta) : 0;
      |                                           ^~~
link_iptnl.c:242:39: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  242 |                                 tos = uval;
      |                                       ^~~~
link_iptnl.c:277:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-2' [-Wsign-conversion]
  277 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM;
      |                                       ^
link_iptnl.c:281:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-3' [-Wsign-conversion]
  281 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM6;
      |                                       ^
link_iptnl.c:285:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-5' [-Wsign-conversion]
  285 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_REMCSUM;
      |                                       ^
link_iptnl.c:346:46: warning: conversion to '__u16' {aka 'short unsigned int'} from '__s16' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  346 |                                   ip6rdprefix.bitlen);
      |                                   ~~~~~~~~~~~^~~~~~~
link_iptnl.c:352:51: warning: conversion to '__u16' {aka 'short unsigned int'} from '__s16' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  352 |                                   ip6rdrelayprefix.bitlen);
      |                                   ~~~~~~~~~~~~~~~~^~~~~~~
    CC       link_gre6.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_tunnel.h:6,
                 from link_gre6.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/string.h:26,
                 from link_gre6.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from link_gre6.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from link_gre6.c:25:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
link_gre6.c: In function 'gre_parse_opt':
link_gre6.c:84:33: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   84 |                 .i.ifi_family = preferred_family,
      |                                 ^~~~~~~~~~~~~~~~
link_gre6.c:126:23: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  126 |                 len = answer->nlmsg_len;
      |                       ^~~~~~
link_gre6.c:127:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  127 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                     ^~
In file included from ../include/libnetlink.h:8,
                 from ../include/utils.h:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
link_gre6.c:127:24: note: in expansion of macro 'NLMSG_LENGTH'
  127 |                 len -= NLMSG_LENGTH(sizeof(*ifi));
      |                        ^~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_gre6.c:136:17: note: in expansion of macro 'parse_rtattr_nested'
  136 |                 parse_rtattr_nested(linkinfo, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link_gre6.c:141:17: note: in expansion of macro 'parse_rtattr_nested'
  141 |                 parse_rtattr_nested(greinfo, IFLA_GRE_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
link_gre6.c:219:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  219 |                         iflags &= ~GRE_KEY;
      |                                   ^
link_gre6.c:220:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  220 |                         oflags &= ~GRE_KEY;
      |                                   ^
link_gre6.c:227:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  227 |                         iflags &= ~GRE_KEY;
      |                                   ^
link_gre6.c:234:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
  234 |                         oflags &= ~GRE_KEY;
      |                                   ^
link_gre6.c:240:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  240 |                         iflags &= ~GRE_SEQ;
      |                                   ^
link_gre6.c:241:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  241 |                         oflags &= ~GRE_SEQ;
      |                                   ^
link_gre6.c:245:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  245 |                         iflags &= ~GRE_SEQ;
      |                                   ^
link_gre6.c:249:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
  249 |                         oflags &= ~GRE_SEQ;
      |                                   ^
link_gre6.c:254:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  254 |                         iflags &= ~GRE_CSUM;
      |                                   ^
link_gre6.c:255:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  255 |                         oflags &= ~GRE_CSUM;
      |                                   ^
link_gre6.c:259:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  259 |                         iflags &= ~GRE_CSUM;
      |                                   ^
link_gre6.c:263:35: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
  263 |                         oflags &= ~GRE_CSUM;
      |                                   ^
link_gre6.c:297:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-3' to '4294967293' [-Wsign-conversion]
  297 |                                 flags &= ~IP6_TNL_F_USE_ORIG_TCLASS;
      |                                       ^~
link_gre6.c:313:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-5' to '4294967291' [-Wsign-conversion]
  313 |                                 flags &= ~IP6_TNL_F_USE_ORIG_FLOWLABEL;
      |                                       ^~
link_gre6.c:345:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-2' [-Wsign-conversion]
  345 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM;
      |                                       ^
link_gre6.c:349:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-3' [-Wsign-conversion]
  349 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_CSUM6;
      |                                       ^
link_gre6.c:353:39: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-5' [-Wsign-conversion]
  353 |                         encapflags &= ~TUNNEL_ENCAP_FLAG_REMCSUM;
      |                                       ^
link_gre6.c:364:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-33' to '4294967263' [-Wsign-conversion]
  364 |                                 flags &= ~IP6_TNL_F_USE_ORIG_FWMARK;
      |                                       ^~
link_gre6.c:369:31: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-65' to '4294967231' [-Wsign-conversion]
  369 |                         flags &= ~IP6_TNL_F_ALLOW_LOCAL_REMOTE;
      |                               ^~
link_gre6.c:380:39: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-2' to '4294967294' [-Wsign-conversion]
  380 |                                 flags &= ~IP6_TNL_F_IGN_ENCAP_LIMIT;
      |                                       ^~
link_gre6.c:386:40: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1048576' to '4293918720' [-Wsign-conversion]
  386 |                         if (erspan_idx & ~((1<<20) - 1) || erspan_idx == 0)
      |                                        ^
    CC       iplink_bond.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_bonding.h:47,
                 from iplink_bond.c:16:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iplink_bond.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iplink_bond.c:20:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_bond.c:21:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_bond.c: In function 'bond_parse_opt':
iplink_bond.c:196:32: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  196 |                         mode = get_index(mode_tbl, *argv);
      |                                ^~~~~~~~~
iplink_bond.c:277:40: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  277 |                         arp_validate = get_index(arp_validate_tbl, *argv);
      |                                        ^~~~~~~~~
iplink_bond.c:283:43: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  283 |                         arp_all_targets = get_index(arp_all_targets_tbl, *argv);
      |                                           ^~~~~~~~~
iplink_bond.c:301:44: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  301 |                         primary_reselect = get_index(primary_reselect_tbl, *argv);
      |                                            ^~~~~~~~~
iplink_bond.c:308:41: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  308 |                         fail_over_mac = get_index(fail_over_mac_tbl, *argv);
      |                                         ^~~~~~~~~
iplink_bond.c:316:44: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  316 |                         xmit_hash_policy = get_index(xmit_hash_policy_tbl, *argv);
      |                                            ^~~~~~~~~
iplink_bond.c:365:37: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  365 |                         lacp_rate = get_index(lacp_rate_tbl, *argv);
      |                                     ^~~~~~~~~
iplink_bond.c:372:39: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  372 |                         lacp_active = get_index(lacp_active_tbl, *argv);
      |                                       ^~~~~~~~~
iplink_bond.c:379:37: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  379 |                         ad_select = get_index(ad_select_tbl, *argv);
      |                                     ^~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iplink_bond.c: In function 'bond_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_bond.c:497:17: note: in expansion of macro 'parse_rtattr_nested'
  497 |                 parse_rtattr_nested(iptb, BOND_MAX_ARP_TARGETS,
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iplink_bond.c:510:46: note: in expansion of macro 'rt_addr_n2a_rta'
  510 |                                              rt_addr_n2a_rta(AF_INET, iptb[i]));
      |                                              ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_bond.c:526:17: note: in expansion of macro 'parse_rtattr_nested'
  526 |                 parse_rtattr_nested(ip6tb, BOND_MAX_NS_TARGETS,
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iplink_bond.c:539:46: note: in expansion of macro 'rt_addr_n2a_rta'
  539 |                                              rt_addr_n2a_rta(AF_INET6, ip6tb[i]));
      |                                              ^~~~~~~~~~~~~~~
iplink_bond.c:554:71: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  554 |                 const char *arp_validate = get_name(arp_validate_tbl, arp_v);
      |                                                                       ^~~~~
iplink_bond.c:567:56: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  567 |                                                        rta_getattr_u32(tb[IFLA_BOND_ARP_ALL_TARGETS]));
      |                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_bond.c:678:17: note: in expansion of macro 'parse_rtattr_nested'
  678 |                 parse_rtattr_nested(adtb, IFLA_BOND_AD_INFO_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink_bond.c:742:42: note: in expansion of macro 'RTA_PAYLOAD'
  742 |                                          RTA_PAYLOAD(tb[IFLA_BOND_AD_ACTOR_SYSTEM]),
      |                                          ^~~~~~~~~~~
iplink_bond.c: In function 'bond_print_3ad_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink_bond.c:771:22: note: in expansion of macro 'RTA_PAYLOAD'
  771 |                      RTA_PAYLOAD(lacpattr));
      |                      ^~~~~~~~~~~
iplink_bond.c: In function 'bond_print_stats_attr':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink_bond.c:844:9: note: in expansion of macro 'RTA_PAYLOAD'
  844 |         RTA_PAYLOAD(attr));
      |         ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink_bond.c:849:15: note: in expansion of macro 'RTA_PAYLOAD'
  849 |         rem = RTA_PAYLOAD(list);
      |               ^~~~~~~~~~~
iplink_bond.c:851:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  851 |         ifname = ll_index_to_name(ifindex);
      |                                   ^~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
iplink_bond.c:853:54: note: in expansion of macro 'RTA_NEXT'
  853 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
iplink_bond.c:853:54: note: in expansion of macro 'RTA_NEXT'
  853 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
iplink_bond.c: In function 'bond_print_xstats':
iplink_bond.c:871:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  871 |         int len = n->nlmsg_len;
      |                   ^
iplink_bond.c:873:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  873 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |             ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iplink_bond.c:873:16: note: in expansion of macro 'NLMSG_LENGTH'
  873 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |                ^~~~~~~~~~~~
iplink_bond.c:884:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  884 |                                       ifsm->ifindex);
      |                                       ~~~~^~~~~~~~~
iplink_bond.c:888:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  888 |                                       ifsm->ifindex);
      |                                       ~~~~^~~~~~~~~
iplink_bond.c: In function 'bond_parse_xstats':
iplink_bond.c:901:40: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  901 |                         filter_index = ll_name_to_index(*argv);
      |                                        ^~~~~~~~~~~~~~~~
    CC       iplink_bond_slave.o
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/if_bonding.h:47,
                 from iplink_bond_slave.c:14:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iplink_bond_slave.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iplink_bond_slave.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_bond_slave.c:18:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_bond_slave.c: In function 'print_slave_state':
iplink_bond_slave.c:40:66: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   40 |                 print_int(PRINT_ANY, "state_index", "state %d ", state);
      |                                                                  ^~~~~
iplink_bond_slave.c: In function 'print_slave_mii_status':
iplink_bond_slave.c:63:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   63 |                           status);
      |                           ^~~~~~
iplink_bond_slave.c: In function 'print_slave_oper_state':
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-2' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:79:9: note: in expansion of macro '_PF'
   79 |         _PF(LACP_ACTIVITY, "active");
      |         ^~~
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-3' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:80:9: note: in expansion of macro '_PF'
   80 |         _PF(LACP_TIMEOUT, "short_timeout");
      |         ^~~
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-5' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:81:9: note: in expansion of macro '_PF'
   81 |         _PF(AGGREGATION, "aggregating");
      |         ^~~
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-9' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:82:9: note: in expansion of macro '_PF'
   82 |         _PF(SYNCHRONIZATION, "in_sync");
      |         ^~~
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-17' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:83:9: note: in expansion of macro '_PF'
   83 |         _PF(COLLECTING, "collecting");
      |         ^~~
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-33' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:84:9: note: in expansion of macro '_PF'
   84 |         _PF(DISTRIBUTING, "distributing");
      |         ^~~
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-65' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:85:9: note: in expansion of macro '_PF'
   85 |         _PF(DEFAULTED, "defaulted");
      |         ^~~
iplink_bond_slave.c:76:34: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-129' [-Wsign-conversion]
   76 |                         state &= ~LACP_STATE_##s;                       \
      |                                  ^
iplink_bond_slave.c:86:9: note: in expansion of macro '_PF'
   86 |         _PF(EXPIRED, "expired");
      |         ^~~
iplink_bond_slave.c: In function 'bond_slave_print_opt':
iplink_bond_slave.c:107:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  107 |                           rta_getattr_u32(tb[IFLA_BOND_SLAVE_LINK_FAILURE_COUNT]));
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink_bond_slave.c:114:42: note: in expansion of macro 'RTA_PAYLOAD'
  114 |                                          RTA_PAYLOAD(tb[IFLA_BOND_SLAVE_PERM_HWADDR]),
      |                                          ^~~~~~~~~~~
iplink_bond_slave.c: In function 'bond_slave_parse_opt':
iplink_bond_slave.c:170:66: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  170 |                         addattr32(n, 1024, IFLA_BOND_SLAVE_PRIO, prio);
      |                                                                  ^~~~
    CC       iplink_hsr.o
In file included from ../include/uapi/linux/if.h:23,
                 from iplink_hsr.c:18:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iplink_hsr.c:14:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iplink_hsr.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_hsr.c:22:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_hsr.c: In function 'hsr_parse_opt':
iplink_hsr.c:79:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   79 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
iplink_hsr.c:85:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   85 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iplink_hsr.c: In function 'hsr_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink_hsr.c:150:42: note: in expansion of macro 'RTA_PAYLOAD'
  150 |                                          RTA_PAYLOAD(tb[IFLA_HSR_SUPERVISION_ADDR]),
      |                                          ^~~~~~~~~~~
    CC       iplink_bridge.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from iplink_bridge.c:18:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iplink_bridge.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iplink_bridge.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_bridge.c:23:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_bridge.c: In function '_bridge_print_timer':
iplink_bridge.c:408:30: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'long unsigned int' may change value [-Wconversion]
  408 |         __jiffies_to_tv(&tv, rta_getattr_u64(timer));
      |                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iplink_bridge.c: In function 'bridge_print_opt':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink_bridge.c:569:42: note: in expansion of macro 'RTA_PAYLOAD'
  569 |                                          RTA_PAYLOAD(tb[IFLA_BR_GROUP_ADDR]),
      |                                          ^~~~~~~~~~~
iplink_bridge.c: In function 'bridge_print_stats_attr':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iplink_bridge.c:856:9: note: in expansion of macro 'RTA_PAYLOAD'
  856 |         RTA_PAYLOAD(attr));
      |         ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iplink_bridge.c:861:15: note: in expansion of macro 'RTA_PAYLOAD'
  861 |         rem = RTA_PAYLOAD(list);
      |               ^~~~~~~~~~~
iplink_bridge.c:863:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  863 |         ifname = ll_index_to_name(ifindex);
      |                                   ^~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
iplink_bridge.c:865:54: note: in expansion of macro 'RTA_NEXT'
  865 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
iplink_bridge.c:865:54: note: in expansion of macro 'RTA_NEXT'
  865 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
iplink_bridge.c: In function 'bridge_print_xstats':
iplink_bridge.c:884:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  884 |         int len = n->nlmsg_len;
      |                   ^
iplink_bridge.c:886:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  886 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |             ^~
In file included from ../include/uapi/linux/if_link.h:6,
                 from iplink_bridge.c:17:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
iplink_bridge.c:886:16: note: in expansion of macro 'NLMSG_LENGTH'
  886 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |                ^~~~~~~~~~~~
iplink_bridge.c:897:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  897 |                                         ifsm->ifindex);
      |                                         ~~~~^~~~~~~~~
iplink_bridge.c:901:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  901 |                                         ifsm->ifindex);
      |                                         ~~~~^~~~~~~~~
iplink_bridge.c: In function 'bridge_parse_xstats':
iplink_bridge.c:915:40: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  915 |                         filter_index = ll_name_to_index(*argv);
      |                                        ^~~~~~~~~~~~~~~~
    CC       iplink_bridge_slave.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from iplink_bridge_slave.c:16:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iplink_bridge_slave.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from iplink_bridge_slave.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_bridge_slave.c:20:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_bridge_slave.c: In function '_print_timer':
iplink_bridge_slave.c:85:30: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'long unsigned int' may change value [-Wconversion]
   85 |         __jiffies_to_tv(&tv, rta_getattr_u64(timer));
      |                              ^~~~~~~~~~~~~~~~~~~~~~
iplink_bridge_slave.c: In function '_bitmask2str':
iplink_bridge_slave.c:106:69: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  106 |                                 len += snprintf(dst + len, dst_size - len, "%s,",
      |                                                                     ^
iplink_bridge_slave.c:109:69: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  109 |                                 len += snprintf(dst + len, dst_size - len, "0x%x,",
      |                                                                     ^
iplink_bridge_slave.c: In function 'bridge_slave_print_opt':
iplink_bridge_slave.c:139:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  139 |                           rta_getattr_u32(tb[IFLA_BRPORT_COST]));
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
iplink_bridge_slave.c:292:32: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  292 |                 int backup_p = rta_getattr_u32(tb[IFLA_BRPORT_BACKUP_PORT]);
      |                                ^~~~~~~~~~~~~~~
iplink_bridge_slave.c:295:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  295 |                              ll_index_to_name(backup_p));
      |                                               ^~~~~~~~
iplink_bridge_slave.c: In function 'bridge_slave_parse_opt':
iplink_bridge_slave.c:418:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  418 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
iplink_bridge_slave.c:421:69: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  421 |                         addattr32(n, 1024, IFLA_BRPORT_BACKUP_PORT, ifindex);
      |                                                                     ^~~~~~~
    CC       ipfou.o
In file included from ipfou.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipfou.c:24:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipfou.c: In function 'fou_parse_opt':
ipfou.c:58:23: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
   58 |         __u8 family = preferred_family;
      |                       ^~~~~~~~~~~~~~~~
ipfou.c:83:43: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
   83 |                                 ipproto = servptr->p_proto;
      |                                           ^~~~~~~
ipfou.c:116:33: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  116 |                         index = ll_name_to_index(ifname);
      |                                 ^~~~~~~~~~~~~~~~
ipfou.c:190:54: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  190 |                 addattr32(n, 1024, FOU_ATTR_IFINDEX, index);
      |                                                      ^~~~~
In file included from ipfou.c:22:
ipfou.c: In function 'do_add':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipfou.c:50:9: note: in expansion of macro 'GENL_REQUEST'
   50 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0,     \
      |         ^~~~~~~~~~~~
ipfou.c:197:9: note: in expansion of macro 'FOU_REQUEST'
  197 |         FOU_REQUEST(req, 1024, FOU_CMD_ADD, NLM_F_REQUEST);
      |         ^~~~~~~~~~~
ipfou.c: In function 'do_del':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipfou.c:50:9: note: in expansion of macro 'GENL_REQUEST'
   50 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0,     \
      |         ^~~~~~~~~~~~
ipfou.c:209:9: note: in expansion of macro 'FOU_REQUEST'
  209 |         FOU_REQUEST(req, 1024, FOU_CMD_DEL, NLM_F_REQUEST);
      |         ^~~~~~~~~~~
ipfou.c: In function 'print_fou_mapping':
ipfou.c:225:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  225 |         int len = n->nlmsg_len;
      |                   ^
ipfou.c:230:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  230 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from ipfou.c:18:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipfou.c:230:16: note: in expansion of macro 'NLMSG_LENGTH'
  230 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
ipfou.c:264:20: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  264 |         byte_len = af_bit_len(family) / 8;
      |                    ^~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/libgenl.h:5:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipfou.c:269:30: note: in expansion of macro 'format_host_rta'
  269 |                              format_host_rta(family, tb[local_attr_type]));
      |                              ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipfou.c:275:30: note: in expansion of macro 'format_host_rta'
  275 |                              format_host_rta(family, tb[peer_attr_type]));
      |                              ^~~~~~~~~~~~~~~
ipfou.c:293:51: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  293 |                         ifname = ll_index_to_name(index);
      |                                                   ^~~~~
ipfou.c: In function 'do_show':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipfou.c:50:9: note: in expansion of macro 'GENL_REQUEST'
   50 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0,     \
      |         ^~~~~~~~~~~~
ipfou.c:309:9: note: in expansion of macro 'FOU_REQUEST'
  309 |         FOU_REQUEST(req, 4096, FOU_CMD_GET, NLM_F_REQUEST | NLM_F_DUMP);
      |         ^~~~~~~~~~~
ipfou.c:317:47: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  317 |         if (rtnl_send(&genl_rth, &req.n, req.n.nlmsg_len) < 0) {
      |                                          ~~~~~^~~~~~~~~~
    CC       iplink_ipvlan.o
In file included from iplink_ipvlan.c:18:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_ipvlan.c:19:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_geneve.o
In file included from iplink_geneve.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_geneve.c:16:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_geneve.c: In function 'geneve_parse_opt':
iplink_geneve.c:108:39: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  108 |                                 ttl = uval;
      |                                       ^~~~
iplink_geneve.c:119:39: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  119 |                                 tos = uval;
      |                                       ^~~~
    CC       iplink_vrf.o
In file included from iplink_vrf.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_vrf.c:20:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
iplink_vrf.c: In function 'ipvrf_get_table':
iplink_vrf.c:119:40: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  119 |                         .ifi_family  = preferred_family,
      |                                        ^~~~~~~~~~~~~~~~
iplink_vrf.c:130:72: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  130 |         addattr_l(&req.n, sizeof(req), IFLA_IFNAME, name, strlen(name) + 1);
      |                                                           ~~~~~~~~~~~~~^~~
iplink_vrf.c:143:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  143 |         len = answer->nlmsg_len - NLMSG_LENGTH(sizeof(*ifi));
      |               ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_vrf.c:154:9: note: in expansion of macro 'parse_rtattr_nested'
  154 |         parse_rtattr_nested(li, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_vrf.c:162:9: note: in expansion of macro 'parse_rtattr_nested'
  162 |         parse_rtattr_nested(vrf_attr, IFLA_VRF_MAX, li[IFLA_INFO_DATA]);
      |         ^~~~~~~~~~~~~~~~~~~
iplink_vrf.c: In function 'name_is_vrf':
iplink_vrf.c:187:40: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  187 |                         .ifi_family  = preferred_family,
      |                                        ^~~~~~~~~~~~~~~~
iplink_vrf.c:197:72: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  197 |         addattr_l(&req.n, sizeof(req), IFLA_IFNAME, name, strlen(name) + 1);
      |                                                           ~~~~~~~~~~~~~^~~
iplink_vrf.c:203:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  203 |         len = answer->nlmsg_len - NLMSG_LENGTH(sizeof(*ifi));
      |               ^~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iplink_vrf.c:214:9: note: in expansion of macro 'parse_rtattr_nested'
  214 |         parse_rtattr_nested(li, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |         ^~~~~~~~~~~~~~~~~~~
    CC       iproute_lwtunnel.o
In file included from ../include/bpf_util.h:23,
                 from iproute_lwtunnel.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netinet/in.h:23,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
In file included from iproute_lwtunnel.c:27:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/seg6.h:19,
                 from iproute_lwtunnel.c:30:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from iproute_lwtunnel.c:14:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
iproute_lwtunnel.c: In function 'print_srh':
iproute_lwtunnel.c:125:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  125 |                 unsigned int offset = ((srh->hdrlen + 1) << 3) - 40;
      |                                       ^
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
iproute_lwtunnel.c: In function 'print_encap_seg6':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:167:9: note: in expansion of macro 'parse_rtattr_nested'
  167 |         parse_rtattr_nested(tb, SEG6_IPTUNNEL_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_rpl':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:205:9: note: in expansion of macro 'parse_rtattr_nested'
  205 |         parse_rtattr_nested(tb, RPL_IPTUNNEL_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_ioam6':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:250:9: note: in expansion of macro 'parse_rtattr_nested'
  250 |         parse_rtattr_nested(tb, IOAM6_IPTUNNEL_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:269:30: note: in expansion of macro 'rt_addr_n2a_rta'
  269 |                              rt_addr_n2a_rta(AF_INET6, tb[IOAM6_IPTUNNEL_DST]));
      |                              ^~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_bpf_prog':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:328:9: note: in expansion of macro 'parse_rtattr_nested'
  328 |         parse_rtattr_nested(tb, LWT_BPF_PROG_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_seg6_local_counters':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:348:9: note: in expansion of macro 'parse_rtattr_nested'
  348 |         parse_rtattr_nested(tb, SEG6_LOCAL_CNT_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_seg6local':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:386:9: note: in expansion of macro 'parse_rtattr_nested'
  386 |         parse_rtattr_nested(tb, SEG6_LOCAL_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c:391:18: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  391 |         action = rta_getattr_u32(tb[SEG6_LOCAL_ACTION]);
      |                  ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:414:41: note: in expansion of macro 'rt_addr_n2a_rta'
  414 |                              "nh4 %s ", rt_addr_n2a_rta(AF_INET, tb[SEG6_LOCAL_NH4]));
      |                                         ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:419:41: note: in expansion of macro 'rt_addr_n2a_rta'
  419 |                              "nh6 %s ", rt_addr_n2a_rta(AF_INET6, tb[SEG6_LOCAL_NH6]));
      |                                         ^~~~~~~~~~~~~~~
iproute_lwtunnel.c:423:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  423 |                 int iif = rta_getattr_u32(tb[SEG6_LOCAL_IIF]);
      |                           ^~~~~~~~~~~~~~~
iproute_lwtunnel.c:426:58: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  426 |                              "iif %s ", ll_index_to_name(iif));
      |                                                          ^~~
iproute_lwtunnel.c:430:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  430 |                 int oif = rta_getattr_u32(tb[SEG6_LOCAL_OIF]);
      |                           ^~~~~~~~~~~~~~~
iproute_lwtunnel.c:433:58: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  433 |                              "oif %s ", ll_index_to_name(oif));
      |                                                          ^~~
iproute_lwtunnel.c: In function 'print_encap_mpls':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:447:9: note: in expansion of macro 'parse_rtattr_nested'
  447 |         parse_rtattr_nested(tb, MPLS_IPTUNNEL_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:451:25: note: in expansion of macro 'format_host_rta'
  451 |                         format_host_rta(AF_MPLS, tb[MPLS_IPTUNNEL_DST]));
      |                         ^~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'lwtunnel_print_geneve_opts':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iproute_lwtunnel.c:461:19: note: in expansion of macro 'RTA_PAYLOAD'
  461 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iproute_lwtunnel.c:476:28: note: in expansion of macro 'RTA_PAYLOAD'
  476 |                 data_len = RTA_PAYLOAD(tb[LWTUNNEL_IP_OPT_GENEVE_DATA]);
      |                            ^~~~~~~~~~~
iproute_lwtunnel.c:478:53: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  478 |                               data_len, data, sizeof(data));
      |                                               ~~~~~~^~~~~~
iproute_lwtunnel.c: In function 'lwtunnel_print_vxlan_opts':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
iproute_lwtunnel.c:500:19: note: in expansion of macro 'RTA_PAYLOAD'
  500 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
iproute_lwtunnel.c: In function 'lwtunnel_print_erspan_opts':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
iproute_lwtunnel.c:524:57: note: in expansion of macro 'RTA_PAYLOAD'
  524 |         parse_rtattr(tb, LWTUNNEL_IP_OPT_ERSPAN_MAX, i, RTA_PAYLOAD(attr));
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c: In function 'lwtunnel_print_opts':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:552:9: note: in expansion of macro 'parse_rtattr_nested'
  552 |         parse_rtattr_nested(tb_opt, LWTUNNEL_IP_OPTS_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_ip':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:566:9: note: in expansion of macro 'parse_rtattr_nested'
  566 |         parse_rtattr_nested(tb, LWTUNNEL_IP_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
iproute_lwtunnel.c:570:28: note: in expansion of macro 'ntohll'
  570 |                            ntohll(rta_getattr_u64(tb[LWTUNNEL_IP_ID])));
      |                            ^~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:575:36: note: in expansion of macro 'rt_addr_n2a_rta'
  575 |                                    rt_addr_n2a_rta(AF_INET, tb[LWTUNNEL_IP_SRC]));
      |                                    ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:580:36: note: in expansion of macro 'rt_addr_n2a_rta'
  580 |                                    rt_addr_n2a_rta(AF_INET, tb[LWTUNNEL_IP_DST]));
      |                                    ^~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_ila':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:608:9: note: in expansion of macro 'parse_rtattr_nested'
  608 |         parse_rtattr_nested(tb, ILA_ATTR_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_ip6':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:640:9: note: in expansion of macro 'parse_rtattr_nested'
  640 |         parse_rtattr_nested(tb, LWTUNNEL_IP6_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
iproute_lwtunnel.c:644:29: note: in expansion of macro 'ntohll'
  644 |                             ntohll(rta_getattr_u64(tb[LWTUNNEL_IP6_ID])));
      |                             ^~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:649:36: note: in expansion of macro 'rt_addr_n2a_rta'
  649 |                                    rt_addr_n2a_rta(AF_INET6, tb[LWTUNNEL_IP6_SRC]));
      |                                    ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:183:25: note: in expansion of macro 'RTA_PAYLOAD'
  183 |         rt_addr_n2a(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
iproute_lwtunnel.c:654:36: note: in expansion of macro 'rt_addr_n2a_rta'
  654 |                                    rt_addr_n2a_rta(AF_INET6, tb[LWTUNNEL_IP6_DST]));
      |                                    ^~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'print_encap_bpf':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
iproute_lwtunnel.c:683:9: note: in expansion of macro 'parse_rtattr_nested'
  683 |         parse_rtattr_nested(tb, LWT_BPF_MAX, encap);
      |         ^~~~~~~~~~~~~~~~~~~
iproute_lwtunnel.c: In function 'parse_srh':
iproute_lwtunnel.c:759:22: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  759 |         srh = malloc(srhlen);
      |                      ^~~~~~
iproute_lwtunnel.c:760:24: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  760 |         memset(srh, 0, srhlen);
      |                        ^~~~~~
iproute_lwtunnel.c:762:23: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  762 |         srh->hdrlen = (srhlen >> 3) - 1;
      |                       ^
iproute_lwtunnel.c:764:30: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  764 |         srh->segments_left = nsegs - 1;
      |                              ^~~~~
iproute_lwtunnel.c:765:30: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  765 |         srh->first_segment = nsegs - 1;
      |                              ^~~~~
iproute_lwtunnel.c:785:40: warning: conversion to '__uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  785 |                 tlv->hmackeyid = htonl(hmac);
      |                                        ^~~~
iproute_lwtunnel.c: In function 'parse_encap_seg6':
iproute_lwtunnel.c:833:33: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  833 |         srh = parse_srh(segbuf, hmac, encap);
      |                                 ^~~~
iproute_lwtunnel.c:836:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  836 |         tuninfo = malloc(sizeof(*tuninfo) + srhlen);
      |                                           ^
iproute_lwtunnel.c:837:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  837 |         memset(tuninfo, 0, sizeof(*tuninfo) + srhlen);
      |                                             ^
iproute_lwtunnel.c:841:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  841 |         memcpy(tuninfo->srh, srh, srhlen);
      |                                   ^~~~~~
iproute_lwtunnel.c:844:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  844 |                           sizeof(*tuninfo) + srhlen)) {
      |                                            ^
iproute_lwtunnel.c:843:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  843 |         if (rta_addattr_l(rta, len, SEG6_IPTUNNEL_SRH, tuninfo,
      |                                ^~~
iproute_lwtunnel.c:844:44: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  844 |                           sizeof(*tuninfo) + srhlen)) {
      |                           ~~~~~~~~~~~~~~~~~^~~~~~~~
iproute_lwtunnel.c: In function 'parse_rpl_srh':
iproute_lwtunnel.c:873:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  873 |         srh = calloc(1, srhlen);
      |                         ^~~~~~
iproute_lwtunnel.c:875:23: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  875 |         srh->hdrlen = (srhlen >> 3) - 1;
      |                       ^
iproute_lwtunnel.c:877:30: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  877 |         srh->segments_left = nsegs;
      |                              ^~~~~
iproute_lwtunnel.c: In function 'parse_encap_rpl':
iproute_lwtunnel.c:917:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  917 |         if (rta_addattr_l(rta, len, RPL_IPTUNNEL_SRH, srh,
      |                                ^~~
iproute_lwtunnel.c: In function 'parse_encap_ioam6':
iproute_lwtunnel.c:1086:25: warning: conversion from 'unsigned char' to 'unsigned char:7' may change value [-Wconversion]
 1086 |         trace->remlen = (__u8)(trace_size / 4);
      |                         ^
iproute_lwtunnel.c:1088:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1088 |         if (rta_addattr32(rta, len, IOAM6_IPTUNNEL_FREQ_K, freq_k) ||
      |                                ^~~
iproute_lwtunnel.c:1089:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1089 |             rta_addattr32(rta, len, IOAM6_IPTUNNEL_FREQ_N, freq_n) ||
      |                                ^~~
iproute_lwtunnel.c:1090:31: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1090 |             rta_addattr8(rta, len, IOAM6_IPTUNNEL_MODE, mode) ||
      |                               ^~~
iproute_lwtunnel.c:1092:33: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1092 |              rta_addattr_l(rta, len, IOAM6_IPTUNNEL_DST, &addr.data, addr.bytelen)) ||
      |                                 ^~~
iproute_lwtunnel.c:1093:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1093 |             rta_addattr_l(rta, len, IOAM6_IPTUNNEL_TRACE, trace, sizeof(*trace))) {
      |                                ^~~
iproute_lwtunnel.c: In function 'bpf_lwt_cb':
iproute_lwtunnel.c:1114:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1114 |         rta_addattr32(x->rta, x->len, LWT_BPF_PROG_FD, fd);
      |                               ~^~~~~
iproute_lwtunnel.c:1114:56: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1114 |         rta_addattr32(x->rta, x->len, LWT_BPF_PROG_FD, fd);
      |                                                        ^~
iproute_lwtunnel.c:1115:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1115 |         rta_addattr_l(x->rta, x->len, LWT_BPF_PROG_NAME, annotation,
      |                               ~^~~~~
iproute_lwtunnel.c:1116:42: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1116 |                       strlen(annotation) + 1);
      |                       ~~~~~~~~~~~~~~~~~~~^~~
iproute_lwtunnel.c: In function 'lwt_parse_bpf':
iproute_lwtunnel.c:1139:30: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1139 |         nest = rta_nest(rta, len, attr);
      |                              ^~~
iproute_lwtunnel.c: In function 'seg6local_fill_counters':
iproute_lwtunnel.c:1162:30: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1162 |         nest = rta_nest(rta, len, attr);
      |                              ^~~
iproute_lwtunnel.c:1164:34: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1164 |         ret = rta_addattr64(rta, len, SEG6_LOCAL_CNT_PACKETS, 0);
      |                                  ^~~
iproute_lwtunnel.c:1168:34: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1168 |         ret = rta_addattr64(rta, len, SEG6_LOCAL_CNT_BYTES, 0);
      |                                  ^~~
iproute_lwtunnel.c:1172:34: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1172 |         ret = rta_addattr64(rta, len, SEG6_LOCAL_CNT_ERRORS, 0);
      |                                  ^~~
iproute_lwtunnel.c: In function 'parse_encap_seg6local':
iproute_lwtunnel.c:1200:34: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1200 |                         action = read_action_type(*argv);
      |                                  ^~~~~~~~~~~~~~~~
iproute_lwtunnel.c:1203:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1203 |                         ret = rta_addattr32(rta, len, SEG6_LOCAL_ACTION,
      |                                                  ^~~
iproute_lwtunnel.c:1211:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1211 |                         ret = rta_addattr32(rta, len, SEG6_LOCAL_TABLE, table);
      |                                                  ^~~
iproute_lwtunnel.c:1218:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1218 |                         ret = rta_addattr32(rta, len, SEG6_LOCAL_VRFTABLE,
      |                                                  ^~~
iproute_lwtunnel.c:1225:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1225 |                         ret = rta_addattr_l(rta, len, SEG6_LOCAL_NH4,
      |                                                  ^~~
iproute_lwtunnel.c:1232:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1232 |                         ret = rta_addattr_l(rta, len, SEG6_LOCAL_NH6,
      |                                                  ^~~
iproute_lwtunnel.c:1241:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1241 |                         ret = rta_addattr32(rta, len, SEG6_LOCAL_IIF, iif);
      |                                                  ^~~
iproute_lwtunnel.c:1249:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1249 |                         ret = rta_addattr32(rta, len, SEG6_LOCAL_OIF, oif);
      |                                                  ^~~
iproute_lwtunnel.c:1302:41: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1302 |                 srh = parse_srh(segbuf, hmac,
      |                                         ^~~~
iproute_lwtunnel.c:1305:42: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1305 |                 ret = rta_addattr_l(rta, len, SEG6_LOCAL_SRH, srh, srhlen);
      |                                          ^~~
iproute_lwtunnel.c: In function 'parse_encap_mpls':
iproute_lwtunnel.c:1330:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1330 |         if (rta_addattr_l(rta, len, MPLS_IPTUNNEL_DST,
      |                                ^~~
iproute_lwtunnel.c:1346:47: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1346 |                         if (rta_addattr8(rta, len, MPLS_IPTUNNEL_TTL, ttl))
      |                                               ^~~
iproute_lwtunnel.c: In function 'lwtunnel_parse_geneve_opt':
iproute_lwtunnel.c:1370:30: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1370 |         nest = rta_nest(rta, len, LWTUNNEL_IP_OPTS_GENEVE | NLA_F_NESTED);
      |                              ^~~
iproute_lwtunnel.c:1385:44: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1385 |                         rta_addattr16(rta, len, i, opt_class);
      |                                            ^~~
iproute_lwtunnel.c:1398:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1398 |                         rta_addattr8(rta, len, i, opt_type);
      |                                           ^~~
iproute_lwtunnel.c:1411:60: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1411 |                         if (hex2mem(token, opts, token_len / 2) < 0) {
      |                                                  ~~~~~~~~~~^~~
iproute_lwtunnel.c:1415:44: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1415 |                         rta_addattr_l(rta, len, i, opts, token_len / 2);
      |                                            ^~~
iproute_lwtunnel.c:1415:68: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1415 |                         rta_addattr_l(rta, len, i, opts, token_len / 2);
      |                                                          ~~~~~~~~~~^~~
iproute_lwtunnel.c: In function 'lwtunnel_parse_vxlan_opts':
iproute_lwtunnel.c:1456:30: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1456 |         nest = rta_nest(rta, len, LWTUNNEL_IP_OPTS_VXLAN | NLA_F_NESTED);
      |                              ^~~
iproute_lwtunnel.c:1460:28: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1460 |         rta_addattr32(rta, len, LWTUNNEL_IP_OPT_VXLAN_GBP, gbp);
      |                            ^~~
iproute_lwtunnel.c: In function 'lwtunnel_parse_erspan_opts':
iproute_lwtunnel.c:1472:30: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1472 |         nest = rta_nest(rta, len, LWTUNNEL_IP_OPTS_ERSPAN | NLA_F_NESTED);
      |                              ^~~
iproute_lwtunnel.c:1487:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1487 |                         rta_addattr8(rta, len, i, opt_type);
      |                                           ^~~
iproute_lwtunnel.c:1500:44: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1500 |                         rta_addattr32(rta, len, i, opt_class);
      |                                            ^~~
iproute_lwtunnel.c:1513:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1513 |                         rta_addattr8(rta, len, i, opt_type);
      |                                           ^~~
iproute_lwtunnel.c:1526:43: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1526 |                         rta_addattr8(rta, len, i, opt_type);
      |                                           ^~~
iproute_lwtunnel.c: In function 'parse_encap_ip':
iproute_lwtunnel.c:1561:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1561 |                         ret = rta_addattr64(rta, len, LWTUNNEL_IP_ID, id);
      |                                                  ^~~
iproute_lwtunnel.c:1569:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1569 |                         ret = rta_addattr_l(rta, len, LWTUNNEL_IP_DST,
      |                                                  ^~~
iproute_lwtunnel.c:1578:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1578 |                         ret = rta_addattr_l(rta, len, LWTUNNEL_IP_SRC,
      |                                                  ^~~
iproute_lwtunnel.c:1588:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1588 |                         ret = rta_addattr8(rta, len, LWTUNNEL_IP_TOS, tos);
      |                                                 ^~~
iproute_lwtunnel.c:1588:71: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1588 |                         ret = rta_addattr8(rta, len, LWTUNNEL_IP_TOS, tos);
      |                                                                       ^~~
iproute_lwtunnel.c:1597:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1597 |                         ret = rta_addattr8(rta, len, LWTUNNEL_IP_TTL, ttl);
      |                                                 ^~~
iproute_lwtunnel.c:1606:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1606 |                         nest = rta_nest(rta, len,
      |                                              ^~~
iproute_lwtunnel.c:1621:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1621 |                         nest = rta_nest(rta, len,
      |                                              ^~~
iproute_lwtunnel.c:1636:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1636 |                         nest = rta_nest(rta, len,
      |                                              ^~~
iproute_lwtunnel.c:1664:42: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1664 |                 ret = rta_addattr16(rta, len,  LWTUNNEL_IP_FLAGS, flags);
      |                                          ^~~
iproute_lwtunnel.c: In function 'parse_encap_ila':
iproute_lwtunnel.c:1691:32: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1691 |         if (rta_addattr64(rta, len, ILA_ATTR_LOCATOR, locator))
      |                                ^~~
iproute_lwtunnel.c:1705:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1705 |                         ret = rta_addattr8(rta, len, ILA_ATTR_CSUM_MODE,
      |                                                 ^~~
iproute_lwtunnel.c:1719:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1719 |                         ret = rta_addattr8(rta, len, ILA_ATTR_IDENT_TYPE,
      |                                                 ^~~
iproute_lwtunnel.c:1733:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1733 |                         ret = rta_addattr8(rta, len, ILA_ATTR_HOOK_TYPE,
      |                                                 ^~~
iproute_lwtunnel.c: In function 'parse_encap_ip6':
iproute_lwtunnel.c:1773:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1773 |                         ret = rta_addattr64(rta, len, LWTUNNEL_IP6_ID, id);
      |                                                  ^~~
iproute_lwtunnel.c:1781:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1781 |                         ret = rta_addattr_l(rta, len, LWTUNNEL_IP6_DST,
      |                                                  ^~~
iproute_lwtunnel.c:1790:50: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1790 |                         ret = rta_addattr_l(rta, len, LWTUNNEL_IP6_SRC,
      |                                                  ^~~
iproute_lwtunnel.c:1800:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1800 |                         ret = rta_addattr8(rta, len, LWTUNNEL_IP6_TC, tc);
      |                                                 ^~~
iproute_lwtunnel.c:1800:71: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1800 |                         ret = rta_addattr8(rta, len, LWTUNNEL_IP6_TC, tc);
      |                                                                       ^~
iproute_lwtunnel.c:1810:49: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1810 |                         ret = rta_addattr8(rta, len, LWTUNNEL_IP6_HOPLIMIT,
      |                                                 ^~~
iproute_lwtunnel.c:1820:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1820 |                         nest = rta_nest(rta, len,
      |                                              ^~~
iproute_lwtunnel.c:1835:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1835 |                         nest = rta_nest(rta, len,
      |                                              ^~~
iproute_lwtunnel.c:1850:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1850 |                         nest = rta_nest(rta, len,
      |                                              ^~~
iproute_lwtunnel.c:1878:42: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1878 |                 ret = rta_addattr16(rta, len,  LWTUNNEL_IP6_FLAGS, flags);
      |                                          ^~~
iproute_lwtunnel.c: In function 'parse_encap_bpf':
iproute_lwtunnel.c:1927:52: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1927 |                                 rta_addattr32(rta, len, LWT_BPF_XMIT_HEADROOM,
      |                                                    ^~~
iproute_lwtunnel.c: In function 'lwt_parse_encap':
iproute_lwtunnel.c:1958:16: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 1958 |         type = read_encap_type(*argv);
      |                ^~~~~~~~~~~~~~~
iproute_lwtunnel.c:1969:30: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1969 |         nest = rta_nest(rta, len, encap_attr);
      |                              ^~~
iproute_lwtunnel.c:2008:34: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2008 |         ret = rta_addattr16(rta, len, encap_type_attr, type);
      |                                  ^~~
    CC       ipmacsec.o
In file included from ipmacsec.c:21:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipmacsec.c:22:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from ipmacsec.c:24:
ipmacsec.c: In function 'do_modify_nl':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmacsec.c:82:9: note: in expansion of macro 'GENL_REQUEST'
   82 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0, MACSEC_GENL_VERSION, \
      |         ^~~~~~~~~~~~
ipmacsec.c:370:9: note: in expansion of macro 'MACSEC_GENL_REQ'
  370 |         MACSEC_GENL_REQ(req, MACSEC_BUFLEN, cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~~~
ipmacsec.c:372:63: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  372 |         addattr32(&req.n, MACSEC_BUFLEN, MACSEC_ATTR_IFINDEX, ifindex);
      |                                                               ^~~~~~~
ipmacsec.c:403:46: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  403 |                                   sa->key, sa->key_len);
      |                                            ~~^~~~~~~~~
ipmacsec.c: In function 'do_modify':
ipmacsec.c:503:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  503 |         ifindex = ll_name_to_index(*argv);
      |                   ^~~~~~~~~~~~~~~~
ipmacsec.c: In function 'do_offload':
ipmacsec.c:531:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  531 |         ifindex = ll_name_to_index(*argv);
      |                   ^~~~~~~~~~~~~~~~
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmacsec.c:82:9: note: in expansion of macro 'GENL_REQUEST'
   82 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0, MACSEC_GENL_VERSION, \
      |         ^~~~~~~~~~~~
ipmacsec.c:545:9: note: in expansion of macro 'MACSEC_GENL_REQ'
  545 |         MACSEC_GENL_REQ(req, MACSEC_BUFLEN, macsec_commands[c][0][1], NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~~~
ipmacsec.c:547:63: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  547 |         addattr32(&req.n, MACSEC_BUFLEN, MACSEC_ATTR_IFINDEX, ifindex);
      |                                                               ^~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
ipmacsec.c: In function 'print_key':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipmacsec.c:612:51: note: in expansion of macro 'RTA_PAYLOAD'
  612 |                      hexstring_n2a(RTA_DATA(key), RTA_PAYLOAD(key),
      |                                                   ^~~~~~~~~~~
ipmacsec.c: In function 'print_fp_stats':
ipmacsec.c:733:23: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  733 |                 pad = strlen(names[i]) + 1;
      |                       ^~~~~~
ipmacsec.c: In function 'print_txsc_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:781:9: note: in expansion of macro 'parse_rtattr_nested'
  781 |         parse_rtattr_nested(stats, MACSEC_TXSC_STATS_ATTR_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'print_secy_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:805:9: note: in expansion of macro 'parse_rtattr_nested'
  805 |         parse_rtattr_nested(stats, MACSEC_SECY_STATS_ATTR_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'print_rxsa_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:826:9: note: in expansion of macro 'parse_rtattr_nested'
  826 |         parse_rtattr_nested(stats, MACSEC_SA_STATS_ATTR_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'print_txsa_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:843:9: note: in expansion of macro 'parse_rtattr_nested'
  843 |         parse_rtattr_nested(stats, MACSEC_SA_STATS_ATTR_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/resolv.h:59,
                 from ../include/utils.h:7:
ipmacsec.c: In function 'print_tx_sc':
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
ipmacsec.c:858:38: note: in expansion of macro 'ntohll'
  858 |                     "TXSC: %016llx", ntohll(sci));
      |                                      ^~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipmacsec.c:866:15: note: in expansion of macro 'RTA_PAYLOAD'
  866 |         rem = RTA_PAYLOAD(sa);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ipmacsec.c:867:52: note: in expansion of macro 'RTA_NEXT'
  867 |         for (a = RTA_DATA(sa); RTA_OK(a, rem); a = RTA_NEXT(a, rem)) {
      |                                                    ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ipmacsec.c:867:52: note: in expansion of macro 'RTA_NEXT'
  867 |         for (a = RTA_DATA(sa); RTA_OK(a, rem); a = RTA_NEXT(a, rem)) {
      |                                                    ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:871:17: note: in expansion of macro 'parse_rtattr_nested'
  871 |                 parse_rtattr_nested(sa_attr, MACSEC_SA_ATTR_MAX, a);
      |                 ^~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'print_rxsc_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:912:9: note: in expansion of macro 'parse_rtattr_nested'
  912 |         parse_rtattr_nested(stats, MACSEC_RXSC_STATS_ATTR_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'print_rx_sc':
../include/utils.h:295:96: warning: conversion from '__be64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
ipmacsec.c:927:39: note: in expansion of macro 'ntohll'
  927 |                     "RXSC: %016llx,", ntohll(sci));
      |                                       ^~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipmacsec.c:934:15: note: in expansion of macro 'RTA_PAYLOAD'
  934 |         rem = RTA_PAYLOAD(sa);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ipmacsec.c:935:52: note: in expansion of macro 'RTA_NEXT'
  935 |         for (a = RTA_DATA(sa); RTA_OK(a, rem); a = RTA_NEXT(a, rem)) {
      |                                                    ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ipmacsec.c:935:52: note: in expansion of macro 'RTA_NEXT'
  935 |         for (a = RTA_DATA(sa); RTA_OK(a, rem); a = RTA_NEXT(a, rem)) {
      |                                                    ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:939:17: note: in expansion of macro 'parse_rtattr_nested'
  939 |                 parse_rtattr_nested(sa_attr, MACSEC_SA_ATTR_MAX, a);
      |                 ^~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'print_rxsc_list':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipmacsec.c:963:19: note: in expansion of macro 'RTA_PAYLOAD'
  963 |         int rem = RTA_PAYLOAD(sc);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
ipmacsec.c:967:52: note: in expansion of macro 'RTA_NEXT'
  967 |         for (c = RTA_DATA(sc); RTA_OK(c, rem); c = RTA_NEXT(c, rem)) {
      |                                                    ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
ipmacsec.c:967:52: note: in expansion of macro 'RTA_NEXT'
  967 |         for (c = RTA_DATA(sc); RTA_OK(c, rem); c = RTA_NEXT(c, rem)) {
      |                                                    ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:972:17: note: in expansion of macro 'parse_rtattr_nested'
  972 |                 parse_rtattr_nested(sc_attr, MACSEC_RXSC_ATTR_MAX, c);
      |                 ^~~~~~~~~~~~~~~~~~~
ipmacsec.c:975:29: warning: conversion from '__u32' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  975 |                             rta_getattr_u32(sc_attr[MACSEC_RXSC_ATTR_ACTIVE]),
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'process':
ipmacsec.c:988:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  988 |         int len = n->nlmsg_len;
      |                   ^
ipmacsec.c:996:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  996 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from ipmacsec.c:16:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipmacsec.c:996:16: note: in expansion of macro 'NLMSG_LENGTH'
  996 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
ipmacsec.c:1010:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1010 |         ifindex = rta_getattr_u32(attrs[MACSEC_ATTR_IFINDEX]);
      |                   ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:1011:9: note: in expansion of macro 'parse_rtattr_nested'
 1011 |         parse_rtattr_nested(attrs_secy, MACSEC_SECY_ATTR_MAX,
      |         ^~~~~~~~~~~~~~~~~~~
ipmacsec.c:1029:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1029 |         print_uint(PRINT_ANY, "ifindex", "%u: ", ifindex);
      |                                                  ^~~~~~~
ipmacsec.c:1031:53: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1031 |                            "%s: ", ll_index_to_name(ifindex));
      |                                                     ^~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmacsec.c:1047:17: note: in expansion of macro 'parse_rtattr_nested'
 1047 |                 parse_rtattr_nested(attrs_offload, MACSEC_OFFLOAD_ATTR_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'do_dump':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmacsec.c:82:9: note: in expansion of macro 'GENL_REQUEST'
   82 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0, MACSEC_GENL_VERSION, \
      |         ^~~~~~~~~~~~
ipmacsec.c:1063:9: note: in expansion of macro 'MACSEC_GENL_REQ'
 1063 |         MACSEC_GENL_REQ(req, MACSEC_BUFLEN, MACSEC_CMD_GET_TXSC,
      |         ^~~~~~~~~~~~~~~
ipmacsec.c:1070:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1070 |         if (rtnl_send(&genl_rth, &req, req.n.nlmsg_len) < 0) {
      |                                        ~~~~~^~~~~~~~~~
ipmacsec.c: In function 'do_show':
ipmacsec.c:1093:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1093 |         ifindex = ll_name_to_index(*argv);
      |                   ^~~~~~~~~~~~~~~~
ipmacsec.c: In function 'macsec_print_opt':
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
ipmacsec.c:1146:34: note: in expansion of macro 'ntohll'
 1146 |                                  ntohll(rta_getattr_u64(tb[IFLA_MACSEC_SCI])));
      |                                  ^~~~~~
../include/utils.h:295:96: warning: conversion from '__u64' {aka 'long long unsigned int'} to '__uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
  295 | #define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))
      |                                                                                            ~~~~^~~~~
ipmacsec.c:1150:33: note: in expansion of macro 'ntohll'
 1150 |                                 ntohll(rta_getattr_u64(tb[IFLA_MACSEC_SCI])));
      |                                 ^~~~~~
ipmacsec.c:1172:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1172 |                         print_uint(PRINT_JSON, "icv_len", NULL, atoi(b2));
      |                                                                 ^~~~~~~~
ipmacsec.c:1185:69: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1185 |                         print_uint(PRINT_JSON, "encoding_sa", NULL, atoi(b2));
      |                                                                     ^~~~~~~~
ipmacsec.c:1232:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1232 |                           rta_getattr_u32(tb[IFLA_MACSEC_WINDOW]));
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ipmacsec.c: In function 'macsec_parse_opt':
ipmacsec.c:1267:24: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-1' to '4294967295' [-Wsign-conversion]
 1267 |         __u32 window = -1;
      |                        ^
ipmacsec.c:1318:73: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1318 |                         addattr8(n, MACSEC_BUFLEN, IFLA_MACSEC_ENCRYPT, i);
      |                                                                         ^
ipmacsec.c:1354:73: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1354 |                         addattr8(n, MACSEC_BUFLEN, IFLA_MACSEC_PROTECT, i);
      |                                                                         ^
ipmacsec.c:1428:26: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1428 |                          replay_protect);
      |                          ^~~~~~~~~~~~~~
    CC       ipila.o
In file included from ipila.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipila.c:24:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipila.c: In function 'print_addr64':
ipila.c:67:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   67 |                 written += ret;
      |                         ^~
ipila.c: In function 'print_ila_mapping':
ipila.c:89:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   89 |         int len = n->nlmsg_len;
      |                   ^
ipila.c:94:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   94 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from ipila.c:18:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipila.c:94:16: note: in expansion of macro 'NLMSG_LENGTH'
   94 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
In file included from ipila.c:22:
ipila.c: In function 'do_list':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipila.c:46:9: note: in expansion of macro 'GENL_REQUEST'
   46 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0,     \
      |         ^~~~~~~~~~~~
ipila.c:141:9: note: in expansion of macro 'ILA_REQUEST'
  141 |         ILA_REQUEST(req, 1024, ILA_CMD_GET, NLM_F_REQUEST | NLM_F_DUMP);
      |         ^~~~~~~~~~~
ipila.c:149:53: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  149 |         if (rtnl_send(&genl_rth, (void *)&req, req.n.nlmsg_len) < 0) {
      |                                                ~~~~~^~~~~~~~~~
ipila.c: In function 'ila_parse_opt':
ipila.c:220:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  220 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
ipila.c:252:54: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  252 |                 addattr32(n, 1024, ILA_ATTR_IFINDEX, ifindex);
      |                                                      ^~~~~~~
ipila.c:255:55: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  255 |                 addattr8(n, 1024, ILA_ATTR_CSUM_MODE, csum_mode);
      |                                                       ^~~~~~~~~
ipila.c:258:56: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  258 |                 addattr8(n, 1024, ILA_ATTR_IDENT_TYPE, ident_type);
      |                                                        ^~~~~~~~~~
ipila.c: In function 'do_add':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipila.c:46:9: note: in expansion of macro 'GENL_REQUEST'
   46 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0,     \
      |         ^~~~~~~~~~~~
ipila.c:265:9: note: in expansion of macro 'ILA_REQUEST'
  265 |         ILA_REQUEST(req, 1024, ILA_CMD_ADD, NLM_F_REQUEST);
      |         ^~~~~~~~~~~
ipila.c: In function 'do_del':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipila.c:46:9: note: in expansion of macro 'GENL_REQUEST'
   46 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0,     \
      |         ^~~~~~~~~~~~
ipila.c:277:9: note: in expansion of macro 'ILA_REQUEST'
  277 |         ILA_REQUEST(req, 1024, ILA_CMD_DEL, NLM_F_REQUEST);
      |         ^~~~~~~~~~~
    CC       ipvrf.o
In file included from ../include/uapi/linux/if.h:23,
                 from ipvrf.c:18:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/types.h:25,
                 from ipvrf.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipvrf.c:29:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipvrf.c:30:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/sys/socket.h:33,
                 from ipvrf.c:15:
../include/bpf_scm.h: In function 'bpf_map_set_init_single':
../include/bpf_scm.h:69:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   69 |         msg->hdr.msg_controllen = CMSG_LEN(sizeof(int) * num);
      |                                                        ^
In file included from ../include/bpf_util.h:24,
                 from ipvrf.c:31:
../include/bpf_scm.h:71:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   71 |                            sizeof(struct bpf_elf_map) * num;
      |                                                       ^
ipvrf.c: In function 'ipvrf_identify':
ipvrf.c:95:23: warning: conversion to 'unsigned int' from '__pid_t' {aka 'int'} may change the sign of the result [-Wsign-conversion]
   95 |                 pid = getpid();
      |                       ^~~~~~
ipvrf.c:101:27: warning: conversion to 'pid_t' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  101 |         rc = vrf_identify(pid, vrf, sizeof(vrf));
      |                           ^~~
ipvrf.c: In function 'ipvrf_filter_req':
ipvrf.c:489:33: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  489 |                                 strlen(vrf_filter.kind));
      |                                 ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
ipvrf.c: In function 'vrf_table_linkinfo':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipvrf.c:505:17: note: in expansion of macro 'parse_rtattr_nested'
  505 |                 parse_rtattr_nested(attr, IFLA_VRF_MAX, li[IFLA_INFO_DATA]);
      |                 ^~~~~~~~~~~~~~~~~~~
ipvrf.c: In function 'ipvrf_print':
ipvrf.c:519:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  519 |         int len = n->nlmsg_len;
      |                   ^
ipvrf.c:523:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  523 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |             ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipvrf.c:523:16: note: in expansion of macro 'NLMSG_LENGTH'
  523 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |                ^~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipvrf.c:554:9: note: in expansion of macro 'parse_rtattr_nested'
  554 |         parse_rtattr_nested(li, IFLA_INFO_MAX, tb[IFLA_LINKINFO]);
      |         ^~~~~~~~~~~~~~~~~~~
ipvrf.c: In function 'ipvrf_show':
ipvrf.c:612:30: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  612 |                         nvrf += ipvrf_print(&l->h);
      |                              ^~
    CC       iplink_xstats.o
In file included from iplink_xstats.c:18:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_xstats.c:19:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       ipseg6.o
In file included from ../include/uapi/linux/if.h:23,
                 from ipseg6.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ipseg6.c:11:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipseg6.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipseg6.c:27:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipseg6.c: In function 'process_msg':
ipseg6.c:107:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  107 |         int len = n->nlmsg_len;
      |                   ^
ipseg6.c:112:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  112 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from ipseg6.c:22:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipseg6.c:112:16: note: in expansion of macro 'NLMSG_LENGTH'
  112 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
In file included from ipseg6.c:28:
ipseg6.c: In function 'seg6_do_cmd':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipseg6.c:49:9: note: in expansion of macro 'GENL_REQUEST'
   49 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0, \
      |         ^~~~~~~~~~~~
ipseg6.c:137:9: note: in expansion of macro 'SEG6_REQUEST'
  137 |         SEG6_REQUEST(req, 1024, opts.cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~
../include/libgenl.h:19:24: warning: conversion from 'unsigned int' to 'unsigned char' may change value [-Wconversion]
   19 |                 .cmd = (_cmd),                                          \
      |                        ^
ipseg6.c:49:9: note: in expansion of macro 'GENL_REQUEST'
   49 |         GENL_REQUEST(_req, _bufsiz, genl_family, 0, \
      |         ^~~~~~~~~~~~
ipseg6.c:137:9: note: in expansion of macro 'SEG6_REQUEST'
  137 |         SEG6_REQUEST(req, 1024, opts.cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~
ipseg6.c:149:36: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  149 |                 req.n.nlmsg_type = genl_family;
      |                                    ^~~~~~~~~~~
ipseg6.c:157:26: warning: conversion from 'size_t' {aka 'unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  157 |                          strlen(opts.pass));
      |                          ^~~~~~~~~~~~~~~~~
ipseg6.c:161:46: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  161 |                                   opts.pass, strlen(opts.pass));
      |                                              ^~~~~~~~~~~~~~~~~
ipseg6.c:192:49: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  192 |                 if (rtnl_send(&grth, &req, req.n.nlmsg_len) < 0) {
      |                                            ~~~~~^~~~~~~~~~
    CC       iplink_netdevsim.o
In file included from iplink_netdevsim.c:4:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_netdevsim.c:5:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_rmnet.o
In file included from iplink_rmnet.c:12:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_rmnet.c:13:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       ipnexthop.o
In file included from ipnexthop.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipnexthop.c:16:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipnexthop.c: In function 'flush_nexthop':
ipnexthop.c:159:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  159 |         len = nlh->nlmsg_len - NLMSG_SPACE(sizeof(*nhm));
      |               ^~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
ipnexthop.c: In function '__valid_nh_group_attr':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipnexthop.c:222:19: note: in expansion of macro 'RTA_PAYLOAD'
  222 |         int num = RTA_PAYLOAD(g_attr) / sizeof(struct nexthop_grp);
      |                   ^~~~~~~~~~~
ipnexthop.c:224:27: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  224 |         return num && num * sizeof(struct nexthop_grp) == RTA_PAYLOAD(g_attr);
      |                           ^
ipnexthop.c: In function 'parse_nh_res_group_rta':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipnexthop.c:278:9: note: in expansion of macro 'parse_rtattr_nested'
  278 |         parse_rtattr_nested(tb, NHA_RES_GROUP_MAX, res_grp_attr);
      |         ^~~~~~~~~~~~~~~~~~~
ipnexthop.c: In function 'print_nh_res_group':
ipnexthop.c:313:37: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'long unsigned int' may change value [-Wconversion]
  313 |         __jiffies_to_tv(&tv, res_grp->unbalanced_time);
      |                              ~~~~~~~^~~~~~~~~~~~~~~~~
ipnexthop.c: In function 'print_nh_res_bucket':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipnexthop.c:323:9: note: in expansion of macro 'parse_rtattr_nested'
  323 |         parse_rtattr_nested(tb, NHA_RES_BUCKET_MAX, res_bucket_attr);
      |         ^~~~~~~~~~~~~~~~~~~
ipnexthop.c:335:38: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'long unsigned int' may change value [-Wconversion]
  335 |                 __jiffies_to_tv(&tv, rta_getattr_u64(rta));
      |                                      ^~~~~~~~~~~~~~~~~~~~
ipnexthop.c: In function 'ipnh_parse_nhmsg':
ipnexthop.c:377:78: warning: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'unsigned int' [-Wformat=]
  377 |                         fprintf(fp, "<nexthop id %u invalid gateway length %lu>\n",
      |                                                                            ~~^
      |                                                                              |
      |                                                                              long unsigned int
      |                                                                            %u
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipnexthop.c:382:39: note: in expansion of macro 'RTA_PAYLOAD'
  382 |                 nhe->nh_gateway_len = RTA_PAYLOAD(tb[NHA_GATEWAY]);
      |                                       ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipnexthop.c:412:38: note: in expansion of macro 'RTA_PAYLOAD'
  412 |                 nhe->nh_groups_cnt = RTA_PAYLOAD(tb[NHA_GROUP]) /
      |                                      ^~~~~~~~~~~
ipnexthop.c: In function '__ipnh_get_id':
ipnexthop.c:503:35: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  503 |                 .nhm.nh_family  = preferred_family,
      |                                   ^~~~~~~~~~~~~~~~
ipnexthop.c: In function '__ipnh_cache_parse_nlmsg':
ipnexthop.c:551:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  551 |         len = n->nlmsg_len - NLMSG_SPACE(sizeof(struct nhmsg));
      |               ^
ipnexthop.c: In function 'print_cache_nexthop':
ipnexthop.c:673:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  673 |         len = n->nlmsg_len - NLMSG_SPACE(sizeof(*nhm));
      |               ^
ipnexthop.c: In function 'print_nexthop_bucket':
ipnexthop.c:720:15: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  720 |         len = n->nlmsg_len - NLMSG_SPACE(sizeof(*nhm));
      |               ^
ipnexthop.c: In function 'add_nh_group_attr':
ipnexthop.c:770:23: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  770 |         grps = calloc(count, sizeof(*grps));
      |                       ^~~~~
ipnexthop.c:791:42: warning: conversion from 'unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  791 |                         grps[i].weight = w - 1;
      |                                          ^
ipnexthop.c:800:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  800 |         err = addattr_l(n, maxlen, NHA_GROUP, grps, count * sizeof(*grps));
      |                                                           ^
ipnexthop.c:800:59: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  800 |         err = addattr_l(n, maxlen, NHA_GROUP, grps, count * sizeof(*grps));
      |                                                     ~~~~~~^~~~~~~~~~~~~~~
ipnexthop.c: In function 'parse_nh_group_type':
ipnexthop.c:882:16: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  882 |         type = read_nh_group_type(*argv);
      |                ^~~~~~~~~~~~~~~~~~
ipnexthop.c: In function 'ipnh_parse_id':
ipnexthop.c:907:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  907 |         return id;
      |                ^~
In file included from ../include/libnetlink.h:8:
ipnexthop.c: In function 'ipnh_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
ipnexthop.c:918:34: note: in expansion of macro 'NLM_F_REQUEST'
  918 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
ipnexthop.c:919:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  919 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
ipnexthop.c:920:34: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
  920 |                 .nhm.nh_family = preferred_family,
      |                                  ^~~~~~~~~~~~~~~~
ipnexthop.c:928:35: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  928 |                                   ipnh_parse_id(*argv));
      |                                   ^~~~~~~~~~~~~~~~~~~~
ipnexthop.c:933:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  933 |                         ifindex = ll_name_to_index(*argv);
      |                                   ^~~~~~~~~~~~~~~~
ipnexthop.c:936:65: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  936 |                         addattr32(&req.n, sizeof(req), NHA_OIF, ifindex);
      |                                                                 ^~~~~~~
ipnexthop.c:951:53: warning: conversion from '__u16' {aka 'short unsigned int'} to 'unsigned char' may change value [-Wconversion]
  951 |                                 req.nhm.nh_family = addr.family;
      |                                                     ^~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ipnexthop.c:968:42: note: in expansion of macro 'RTA_PAYLOAD'
  968 |                                          RTA_PAYLOAD(rta));
      |                                          ^~~~~~~~~~~
ipnexthop.c:991:47: warning: conversion from '__u32' {aka 'unsigned int'} to 'unsigned char' may change value [-Wconversion]
  991 |                         req.nhm.nh_protocol = prot;
      |                                               ^~~~
ipnexthop.c: In function 'ipnh_list_flush':
ipnexthop.c:1074:51: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1074 |                         return ipnh_list_flush_id(ipnh_parse_id(*argv), action);
      |                                                   ^~~~~~~~~~~~~~~~~~~~
ipnexthop.c: In function 'ipnh_get':
ipnexthop.c:1120:30: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1120 |                         id = ipnh_parse_id(*argv);
      |                              ^~~~~~~~~~~~~
ipnexthop.c: In function 'ipnh_bucket_list':
ipnexthop.c:1157:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1157 |                         filter.id = ipnh_parse_id(*argv);
      |                                     ^~~~~~~~~~~~~
ipnexthop.c:1160:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1160 |                         filter.nhid = ipnh_parse_id(*argv);
      |                                       ^~~~~~~~~~~~~
ipnexthop.c: In function 'ipnh_bucket_get_id':
ipnexthop.c:1198:34: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1198 |                 .nhm.nh_family = preferred_family,
      |                                  ^~~~~~~~~~~~~~~~
ipnexthop.c: In function 'ipnh_bucket_get':
ipnexthop.c:1239:30: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1239 |                         id = ipnh_parse_id(*argv);
      |                              ^~~~~~~~~~~~~
    CC       ipmptcp.o
In file included from ../include/uapi/linux/in.h:23,
                 from ../include/uapi/linux/mptcp.h:10,
                 from ipmptcp.c:13:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/arpa/inet.h:21,
                 from ipmptcp.c:3:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ipmptcp.c:15:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipmptcp.c:16:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipmptcp.c: In function 'mptcp_parse_opt':
ipmptcp.c:129:36: warning: unsigned conversion from 'int' to '__u32' {aka 'unsigned int'} changes value from '-13' to '4294967283' [-Wsign-conversion]
  129 |                             (flags & ~(MPTCP_PM_ADDR_FLAG_BACKUP |
      |                                    ^
In file included from ipmptcp.c:18:
ipmptcp.c: In function 'mptcp_addr_modify':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmptcp.c:47:9: note: in expansion of macro 'GENL_REQUEST'
   47 |         GENL_REQUEST(_req, MPTCP_BUFLEN, genl_family, 0,        \
      |         ^~~~~~~~~~~~
ipmptcp.c:211:9: note: in expansion of macro 'MPTCP_REQUEST'
  211 |         MPTCP_REQUEST(req, cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
../include/libgenl.h:19:24: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   19 |                 .cmd = (_cmd),                                          \
      |                        ^
ipmptcp.c:47:9: note: in expansion of macro 'GENL_REQUEST'
   47 |         GENL_REQUEST(_req, MPTCP_BUFLEN, genl_family, 0,        \
      |         ^~~~~~~~~~~~
ipmptcp.c:211:9: note: in expansion of macro 'MPTCP_REQUEST'
  211 |         MPTCP_REQUEST(req, cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
In file included from ipmptcp.c:12:
ipmptcp.c: In function 'print_mptcp_addrinfo':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipmptcp.c:233:9: note: in expansion of macro 'parse_rtattr_nested'
  233 |         parse_rtattr_nested(tb, MPTCP_PM_ADDR_ATTR_MAX, addrinfo);
      |         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/utils.h:178:25: note: in expansion of macro 'RTA_PAYLOAD'
  178 |         format_host(af, RTA_PAYLOAD(rta), RTA_DATA(rta))
      |                         ^~~~~~~~~~~
ipmptcp.c:243:30: note: in expansion of macro 'format_host_rta'
  243 |                              format_host_rta(family, tb[addr_attr_type]));
      |                              ^~~~~~~~~~~~~~~
ipmptcp.c:260:51: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  260 |                 ifname = index ? ll_index_to_name(index) : NULL;
      |                                                   ^~~~~
ipmptcp.c: In function 'print_mptcp_addr':
ipmptcp.c:278:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  278 |         int len = n->nlmsg_len;
      |                   ^
ipmptcp.c:283:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  283 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from ipmptcp.c:10:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipmptcp.c:283:16: note: in expansion of macro 'NLMSG_LENGTH'
  283 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
ipmptcp.c: In function 'mptcp_addr_dump':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmptcp.c:47:9: note: in expansion of macro 'GENL_REQUEST'
   47 |         GENL_REQUEST(_req, MPTCP_BUFLEN, genl_family, 0,        \
      |         ^~~~~~~~~~~~
ipmptcp.c:300:9: note: in expansion of macro 'MPTCP_REQUEST'
  300 |         MPTCP_REQUEST(req, MPTCP_PM_CMD_GET_ADDR, NLM_F_REQUEST | NLM_F_DUMP);
      |         ^~~~~~~~~~~~~
ipmptcp.c:302:47: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  302 |         if (rtnl_send(&genl_rth, &req.n, req.n.nlmsg_len) < 0) {
      |                                          ~~~~~^~~~~~~~~~
ipmptcp.c: In function 'mptcp_addr_show':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmptcp.c:47:9: note: in expansion of macro 'GENL_REQUEST'
   47 |         GENL_REQUEST(_req, MPTCP_BUFLEN, genl_family, 0,        \
      |         ^~~~~~~~~~~~
ipmptcp.c:323:9: note: in expansion of macro 'MPTCP_REQUEST'
  323 |         MPTCP_REQUEST(req, MPTCP_PM_CMD_GET_ADDR, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
ipmptcp.c: In function 'mptcp_addr_flush':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmptcp.c:47:9: note: in expansion of macro 'GENL_REQUEST'
   47 |         GENL_REQUEST(_req, MPTCP_BUFLEN, genl_family, 0,        \
      |         ^~~~~~~~~~~~
ipmptcp.c:347:9: note: in expansion of macro 'MPTCP_REQUEST'
  347 |         MPTCP_REQUEST(req, MPTCP_PM_CMD_FLUSH_ADDRS, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
ipmptcp.c: In function 'print_mptcp_limit':
ipmptcp.c:393:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  393 |         int len = n->nlmsg_len;
      |                   ^
ipmptcp.c:399:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  399 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipmptcp.c:399:16: note: in expansion of macro 'NLMSG_LENGTH'
  399 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
ipmptcp.c: In function 'mptcp_limit_get_set':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipmptcp.c:47:9: note: in expansion of macro 'GENL_REQUEST'
   47 |         GENL_REQUEST(_req, MPTCP_BUFLEN, genl_family, 0,        \
      |         ^~~~~~~~~~~~
ipmptcp.c:428:9: note: in expansion of macro 'MPTCP_REQUEST'
  428 |         MPTCP_REQUEST(req, cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
../include/libgenl.h:19:24: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   19 |                 .cmd = (_cmd),                                          \
      |                        ^
ipmptcp.c:47:9: note: in expansion of macro 'GENL_REQUEST'
   47 |         GENL_REQUEST(_req, MPTCP_BUFLEN, genl_family, 0,        \
      |         ^~~~~~~~~~~~
ipmptcp.c:428:9: note: in expansion of macro 'MPTCP_REQUEST'
  428 |         MPTCP_REQUEST(req, cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
ipmptcp.c: In function 'mptcp_monitor_msg':
ipmptcp.c:473:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  473 |         int len = n->nlmsg_len;
      |                   ^
ipmptcp.c:475:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  475 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipmptcp.c:475:16: note: in expansion of macro 'NLMSG_LENGTH'
  475 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
ipmptcp.c: In function 'mptcp_monitor':
ipmptcp.c:541:43: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  541 |         if (genl_add_mcast_grp(&genl_rth, genl_family, MPTCP_PM_EV_GRP_NAME) < 0) {
      |                                           ^~~~~~~~~~~
    CC       iplink_bareudp.o
In file included from iplink_bareudp.c:11:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_bareudp.c:12:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_wwan.o
In file included from iplink_wwan.c:7:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_wwan.c:8:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       ipioam6.o
In file included from ipioam6.c:18:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipioam6.c:19:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
ipioam6.c: In function 'print_schema':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ipioam6.c:88:15: note: in expansion of macro 'RTA_PAYLOAD'
   88 |         len = RTA_PAYLOAD(attrs[IOAM6_ATTR_SC_DATA]);
      |               ^~~~~~~~~~~
ipioam6.c:89:59: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   89 |         memcpy(data, RTA_DATA(attrs[IOAM6_ATTR_SC_DATA]), len);
      |                                                           ^~~
ipioam6.c: In function 'process_msg':
ipioam6.c:103:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  103 |         int len = n->nlmsg_len;
      |                   ^
ipioam6.c:108:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  108 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/uapi/linux/genetlink.h:6,
                 from ipioam6.c:15:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ipioam6.c:108:16: note: in expansion of macro 'NLMSG_LENGTH'
  108 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
In file included from ipioam6.c:20:
ipioam6.c: In function 'ioam6_do_cmd':
../include/libgenl.h:14:31: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   14 |                 .nlmsg_type = (_family),                                \
      |                               ^
ipioam6.c:41:10: note: in expansion of macro 'GENL_REQUEST'
   41 |          GENL_REQUEST(_req, _bufsiz, genl_family, 0, \
      |          ^~~~~~~~~~~~
ipioam6.c:131:9: note: in expansion of macro 'IOAM6_REQUEST'
  131 |         IOAM6_REQUEST(req, 1056, opts.cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
../include/libgenl.h:19:24: warning: conversion from 'unsigned int' to 'unsigned char' may change value [-Wconversion]
   19 |                 .cmd = (_cmd),                                          \
      |                        ^
ipioam6.c:41:10: note: in expansion of macro 'GENL_REQUEST'
   41 |          GENL_REQUEST(_req, _bufsiz, genl_family, 0, \
      |          ^~~~~~~~~~~~
ipioam6.c:131:9: note: in expansion of macro 'IOAM6_REQUEST'
  131 |         IOAM6_REQUEST(req, 1056, opts.cmd, NLM_F_REQUEST);
      |         ^~~~~~~~~~~~~
ipioam6.c:137:28: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
  137 |         req.n.nlmsg_type = genl_family;
      |                            ^~~~~~~~~~~
ipioam6.c:159:27: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  159 |                           strlen((const char *)opts.sc_data));
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ipioam6.c:180:49: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  180 |                 if (rtnl_send(&grth, &req, req.n.nlmsg_len) < 0) {
      |                                            ~~~~~^~~~~~~~~~
    CC       iplink_amt.o
In file included from iplink_amt.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_amt.c:23:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_batadv.o
In file included from iplink_batadv.c:13:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_batadv.c:14:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_gtp.o
In file included from iplink_gtp.c:6:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_gtp.c:7:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       iplink_virt_wifi.o
In file included from iplink_virt_wifi.c:13:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from iplink_virt_wifi.c:14:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
    CC       ipstats.o
In file included from ipstats.c:11:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ipstats.c:12:
ip_common.h: In function 'rtm_get_table':
ip_common.h:109:16: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  109 |         return table;
      |                ^~~~~
ipstats.c: In function 'ipstats_stat_show_attrs_alloc_tb':
ipstats.c:95:55: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   95 |                 err = parse_rtattr(attrs->tbs[group], ifla_max,
      |                                                       ^~~~~~~~
In file included from ../include/utils.h:17:
../include/libnetlink.h:226:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                   ^~~~~
ipstats.c:98:23: note: in expansion of macro 'parse_rtattr_nested'
   98 |                 err = parse_rtattr_nested(attrs->tbs[group], ifla_max,
      |                       ^~~~~~~~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipstats.c:98:23: note: in expansion of macro 'parse_rtattr_nested'
   98 |                 err = parse_rtattr_nested(attrs->tbs[group], ifla_max,
      |                       ^~~~~~~~~~~~~~~~~~~
ipstats.c: In function 'ipstats_stat_show_get_attr':
ipstats.c:124:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  124 |         *err = ipstats_stat_show_attrs_alloc_tb(attrs, group);
      |                                                        ^~~~~
ipstats.c: In function 'ipstats_show_64':
ipstats.c:158:48: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  158 |         at = ipstats_stat_show_get_attr(attrs, group, subgroup, &err);
      |                                                ^~~~~
ipstats.c:158:55: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  158 |         at = ipstats_stat_show_get_attr(attrs, group, subgroup, &err);
      |                                                       ^~~~~~~~
ipstats.c: In function 'ipstats_dissect_hw_s_info_one':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipstats.c:309:15: note: in expansion of macro 'parse_rtattr_nested'
  309 |         err = parse_rtattr_nested(tb, IFLA_OFFLOAD_XSTATS_HW_S_INFO_MAX, at);
      |               ^~~~~~~~~~~~~~~~~~~
ipstats.c: In function 'ipstats_dissect_hw_s_info':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipstats.c:339:15: note: in expansion of macro 'parse_rtattr_nested'
  339 |         err = parse_rtattr_nested(tb, IFLA_OFFLOAD_XSTATS_MAX, at);
      |               ^~~~~~~~~~~~~~~~~~~
ipstats.c: In function 'ipstats_show_hw_s_info':
ipstats.c:424:48: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  424 |         at = ipstats_stat_show_get_attr(attrs, group, subgroup, &err);
      |                                                ^~~~~
ipstats.c:424:55: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  424 |         at = ipstats_stat_show_get_attr(attrs, group, subgroup, &err);
      |                                                       ^~~~~~~~
ipstats.c: In function 'ipstats_show_hw_stats':
ipstats.c:472:53: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  472 |         at_hwsi = ipstats_stat_show_get_attr(attrs, group, hw_s_info, &err);
      |                                                     ^~~~~
ipstats.c:472:60: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  472 |         at_hwsi = ipstats_stat_show_get_attr(attrs, group, hw_s_info, &err);
      |                                                            ^~~~~~~~~
ipstats.c:476:54: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  476 |         at_stats = ipstats_stat_show_get_attr(attrs, group, hw_stats, &err);
      |                                                      ^~~~~
ipstats.c:476:61: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  476 |         at_stats = ipstats_stat_show_get_attr(attrs, group, hw_stats, &err);
      |                                                             ^~~~~~~~
ipstats.c: In function 'ipstats_stat_desc_pack_xstats':
ipstats.c:582:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  582 |         ipstats_stat_desc_enable_bit(filters, xdesc->xstats_at, 0);
      |                                               ~~~~~^~~~~~~~~~~
In file included from ipstats.c:2:
ipstats.c: In function 'ipstats_stat_desc_show_xstats':
ipstats.c:600:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  600 |         tb = alloca(sizeof(*tb) * (xdesc->inner_max + 1));
      |                                 ^
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipstats.c:601:15: note: in expansion of macro 'parse_rtattr_nested'
  601 |         err = parse_rtattr_nested(tb, xdesc->inner_max, at);
      |               ^~~~~~~~~~~~~~~~~~~
ipstats.c: In function 'ipstats_stat_desc_show_afstats_mpls':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ipstats.c:682:9: note: in expansion of macro 'parse_rtattr_nested'
  682 |         parse_rtattr_nested(mrtb, MPLS_STATS_MAX, at);
      |         ^~~~~~~~~~~~~~~~~~~
ipstats.c: In function 'ipstats_process_ifsm':
ipstats.c:750:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  750 |         show_attrs.len = (answer->nlmsg_len -
      |                          ^
ipstats.c:771:42: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  771 |                           show_attrs.ifsm->ifindex);
      |                           ~~~~~~~~~~~~~~~^~~~~~~~~
ipstats.c: In function 'ipstats_show_one':
ipstats.c:840:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  840 |                 .ifsm.ifindex = ifindex,
      |                                 ^~~~~~~
ipstats.c: In function 'ipstats_show':
ipstats.c:1227:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1227 |                 ifindex = ll_name_to_index(dev);
      |                           ^~~~~~~~~~~~~~~~
ipstats.c: In function 'ipstats_set_do':
ipstats.c:1251:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1251 |                 .ifsm.ifindex = ifindex,
      |                                 ^~~~~~~
ipstats.c: In function 'ipstats_set':
ipstats.c:1310:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1310 |         ifindex = ll_name_to_index(dev);
      |                   ^~~~~~~~~~~~~~~~
    LINK     ip
    CC       rtmon.o
In file included from rtmon.c:24:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
rtmon.c: In function 'write_stamp':
rtmon.c:41:40: warning: conversion from '__time64_t' {aka 'long long int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
   41 |         ((__u32 *)NLMSG_DATA(n1))[0] = tv.tv_sec;
      |                                        ^~
rtmon.c:42:40: warning: conversion from '__suseconds64_t' {aka 'long long int'} to '__u32' {aka 'unsigned int'} may change value [-Wconversion]
   42 |         ((__u32 *)NLMSG_DATA(n1))[1] = tv.tv_usec;
      |                                        ^~
    LINK     rtmon

bridge
    CC       bridge.o
In file included from bridge.c:16:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       fdb.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from fdb.c:20:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from fdb.c:10:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from fdb.c:31:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
fdb.c: In function 'state_a2n':
fdb.c:89:22: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
   89 |                 *s = ~0;
      |                      ^
fdb.c: In function 'fdb_print_stats':
fdb.c:131:47: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  131 |                                  ci->ndm_used / hz);
      |                                               ^
fdb.c:133:49: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  133 |                                 ci->ndm_updated / hz);
      |                                                 ^
fdb.c:135:57: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  135 |                 fprintf(fp, "used %d/%d ", ci->ndm_used / hz,
      |                                                         ^
fdb.c:136:57: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  136 |                                         ci->ndm_updated / hz);
      |                                                         ^
fdb.c: In function 'print_fdb':
fdb.c:145:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  145 |         int len = n->nlmsg_len;
      |                   ^
fdb.c:155:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  155 |         len -= NLMSG_LENGTH(sizeof(*r));
      |             ^~
In file included from ../include/uapi/linux/neighbour.h:6,
                 from fdb.c:22:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
fdb.c:155:16: note: in expansion of macro 'NLMSG_LENGTH'
  155 |         len -= NLMSG_LENGTH(sizeof(*r));
      |                ^~~~~~~~~~~~
fdb.c:171:35: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  171 |                      n->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
fdb.c:194:56: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  194 |                                      ll_index_to_type(r->ndm_ifindex),
      |                                                       ~^~~~~~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from fdb.c:28:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
fdb.c:193:38: note: in expansion of macro 'RTA_PAYLOAD'
  193 |                                      RTA_PAYLOAD(tb[NDA_LLADDR]),
      |                                      ^~~~~~~~~~~
fdb.c:206:54: warning: conversion to 'unsigned int' from '__s32' {aka 'int'} may change the sign of the result [-Wsign-conversion]
  206 |                                    ll_index_to_name(r->ndm_ifindex));
      |                                                     ~^~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
fdb.c:217:35: note: in expansion of macro 'RTA_PAYLOAD'
  217 |                                   RTA_PAYLOAD(tb[NDA_DST]),
      |                                   ^~~~~~~~~~~
fdb.c:223:53: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  223 |                                    ifa_family_color(family),
      |                                                     ^~~~~~
fdb.c: In function 'fdb_linkdump_filter':
fdb.c:292:34: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  292 |                 ifm->ifi_index = filter_index;
      |                                  ^~~~~~~~~~~~
fdb.c: In function 'fdb_dump_filter':
fdb.c:311:36: warning: conversion to '__s32' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  311 |                 ndm->ndm_ifindex = filter_index;
      |                                    ^~~~~~~~~~~~
fdb.c: In function 'fdb_show':
fdb.c:340:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  340 |                         filter_vlan = atoi(*argv);
      |                                       ^~~~
fdb.c:358:34: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  358 |                 int br_ifindex = ll_name_to_index(br);
      |                                  ^~~~~~~~~~~~~~~~
fdb.c:364:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  364 |                 filter_master = br_ifindex;
      |                                 ^~~~~~~~~~
fdb.c: In function 'fdb_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
fdb.c:402:34: note: in expansion of macro 'NLM_F_REQUEST'
  402 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
fdb.c:403:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  403 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
fdb.c:413:29: warning: unsigned conversion from 'int' to 'long unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  413 |         unsigned long vni = ~0;
      |                             ^
fdb.c:414:33: warning: unsigned conversion from 'int' to 'long unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  414 |         unsigned long src_vni = ~0;
      |                                 ^
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/netdb.h:27,
                 from fdb.c:13:
fdb.c:444:49: warning: conversion from 'int' to '__uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  444 |                                 port = ntohs(pse->s_port);
      |                                              ~~~^~~~~~~~
fdb.c:478:46: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-65' [-Wsign-conversion]
  478 |                         req.ndm.ndm_state &= ~NUD_NOARP;
      |                                              ^
fdb.c:483:31: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  483 |                         vid = atoi(*argv);
      |                               ^~~~
fdb.c:533:58: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  533 |                 addattr16(&req.n, sizeof(req), NDA_VLAN, vid);
      |                                                          ^~~
fdb.c:550:31: warning: conversion to '__s32' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  550 |         req.ndm.ndm_ifindex = ll_name_to_index(d);
      |                               ^~~~~~~~~~~~~~~~
fdb.c: In function 'fdb_get':
fdb.c:574:29: warning: unsigned conversion from 'int' to 'long unsigned int' changes value from '-1' to '4294967295' [-Wsign-conversion]
  574 |         unsigned long vni = ~0;
      |                             ^
fdb.c:606:32: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  606 |                         vlan = atoi(*argv);
      |                                ^~~~
fdb.c:637:58: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  637 |                 addattr16(&req.n, sizeof(req), NDA_VLAN, vlan);
      |                                                          ^~~~
fdb.c:643:39: warning: conversion to '__s32' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  643 |                 req.ndm.ndm_ifindex = ll_name_to_index(d);
      |                                       ^~~~~~~~~~~~~~~~
fdb.c:651:30: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  651 |                 br_ifindex = ll_name_to_index(br);
      |                              ^~~~~~~~~~~~~~~~
fdb.c:656:60: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  656 |                 addattr32(&req.n, sizeof(req), NDA_MASTER, br_ifindex);
      |                                                            ^~~~~~~~~~
fdb.c: In function 'fdb_flush':
fdb.c:709:38: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-129' [-Wsign-conversion]
  709 |                         ndm_state &= ~NUD_PERMANENT;
      |                                      ^
fdb.c:715:38: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-65' [-Wsign-conversion]
  715 |                         ndm_state &= ~NUD_NOARP;
      |                                      ^
fdb.c:718:38: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-65' [-Wsign-conversion]
  718 |                         ndm_state &= ~NUD_NOARP | NUD_PERMANENT;
      |                                      ^
fdb.c:727:38: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-2' [-Wsign-conversion]
  727 |                         ndm_flags &= ~NTF_USE;
      |                                      ^
fdb.c:733:38: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-17' [-Wsign-conversion]
  733 |                         ndm_flags &= ~NTF_EXT_LEARNED;
      |                                      ^
fdb.c:739:38: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-65' [-Wsign-conversion]
  739 |                         ndm_flags &= ~NTF_STICKY;
      |                                      ^
fdb.c:745:38: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-33' [-Wsign-conversion]
  745 |                         ndm_flags &= ~NTF_OFFLOADED;
      |                                      ^
fdb.c:756:31: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  756 |                         vid = atoi(*argv);
      |                               ^~~~
fdb.c:769:31: warning: conversion to '__s32' {aka 'int'} from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  769 |         req.ndm.ndm_ifindex = ll_name_to_index(d);
      |                               ^~~~~~~~~~~~~~~~
fdb.c:776:30: warning: conversion from 'unsigned int' to 'short int' may change value [-Wconversion]
  776 |                 port_ifidx = ll_name_to_index(port);
      |                              ^~~~~~~~~~~~~~~~
fdb.c:793:29: warning: conversion from 'short unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  793 |         req.ndm.ndm_flags = ndm_flags;
      |                             ^~~~~~~~~
fdb.c:796:61: warning: conversion to '__u32' {aka 'unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  796 |                 addattr32(&req.n, sizeof(req), NDA_IFINDEX, port_ifidx);
      |                                                             ^~~~~~~~~~
fdb.c:798:58: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  798 |                 addattr16(&req.n, sizeof(req), NDA_VLAN, vid);
      |                                                          ^~~
fdb.c:801:26: warning: conversion from 'short unsigned int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  801 |                          ndm_flags_mask);
      |                          ^~~~~~~~~~~~~~
    CC       monitor.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from monitor.c:21:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from monitor.c:13:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from monitor.c:25:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
monitor.c: In function 'do_monitor':
monitor.c:85:31: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-9' to '4294967287' [-Wsign-conversion]
   85 |         unsigned int groups = ~RTMGRP_TC;
      |                               ^
monitor.c:114:34: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-9' to '4294967287' [-Wsign-conversion]
  114 |                         groups = ~RTMGRP_TC;
      |                                  ^
    CC       link.o
In file included from ../include/uapi/linux/if.h:23,
                 from link.c:10:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from link.c:3:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from link.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
link.c: In function 'print_link_flags':
link.c:40:15: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-65' to '4294967231' [-Wsign-conversion]
   40 |         flags &= ~IFF_RUNNING;
      |               ^~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-9' to '4294967287' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:45:9: note: in expansion of macro '_PF'
   45 |         _PF(LOOPBACK);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-3' to '4294967293' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:46:9: note: in expansion of macro '_PF'
   46 |         _PF(BROADCAST);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-17' to '4294967279' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:47:9: note: in expansion of macro '_PF'
   47 |         _PF(POINTOPOINT);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-4097' to '4294963199' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:48:9: note: in expansion of macro '_PF'
   48 |         _PF(MULTICAST);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-129' to '4294967167' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:49:9: note: in expansion of macro '_PF'
   49 |         _PF(NOARP);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-513' to '4294966783' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:50:9: note: in expansion of macro '_PF'
   50 |         _PF(ALLMULTI);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-257' to '4294967039' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:51:9: note: in expansion of macro '_PF'
   51 |         _PF(PROMISC);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-1025' to '4294966271' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:52:9: note: in expansion of macro '_PF'
   52 |         _PF(MASTER);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-2049' to '4294965247' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:53:9: note: in expansion of macro '_PF'
   53 |         _PF(SLAVE);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-5' to '4294967291' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:54:9: note: in expansion of macro '_PF'
   54 |         _PF(DEBUG);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-32769' to '4294934527' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:55:9: note: in expansion of macro '_PF'
   55 |         _PF(DYNAMIC);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-16385' to '4294950911' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:56:9: note: in expansion of macro '_PF'
   56 |         _PF(AUTOMEDIA);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-8193' to '4294959103' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:57:9: note: in expansion of macro '_PF'
   57 |         _PF(PORTSEL);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-33' to '4294967263' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:58:9: note: in expansion of macro '_PF'
   58 |         _PF(NOTRAILERS);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-2' to '4294967294' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:59:9: note: in expansion of macro '_PF'
   59 |         _PF(UP);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-65537' to '4294901759' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:60:9: note: in expansion of macro '_PF'
   60 |         _PF(LOWER_UP);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-131073' to '4294836223' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:61:9: note: in expansion of macro '_PF'
   61 |         _PF(DORMANT);
      |         ^~~
link.c:43:23: warning: unsigned conversion from 'int' to 'unsigned int' changes value from '-262145' to '4294705151' [-Wsign-conversion]
   43 |                 flags &= ~IFF_##f ;                                     \
      |                       ^~
link.c:62:9: note: in expansion of macro '_PF'
   62 |         _PF(ECHO);
      |         ^~~
In file included from ../include/libnetlink.h:9,
                 from link.c:16:
link.c: In function 'print_protinfo':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link.c:111:17: note: in expansion of macro 'parse_rtattr_nested'
  111 |                 parse_rtattr_nested(prtb, IFLA_BRPORT_MAX, attr);
      |                 ^~~~~~~~~~~~~~~~~~~
link.c:175:33: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  175 |                         ifidx = rta_getattr_u32(prtb[IFLA_BRPORT_BACKUP_PORT]);
      |                                 ^~~~~~~~~~~~~~~
link.c:178:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  178 |                                      ll_index_to_name(ifidx));
      |                                                       ^~~~~
link.c: In function 'print_af_spec':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
link.c:200:9: note: in expansion of macro 'parse_rtattr_nested'
  200 |         parse_rtattr_nested(aftb, IFLA_BRIDGE_MAX, attr);
      |         ^~~~~~~~~~~~~~~~~~~
link.c: In function 'print_linkinfo':
link.c:212:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  212 |         int len = n->nlmsg_len;
      |                   ^
link.c:215:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  215 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |             ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
link.c:215:16: note: in expansion of macro 'NLMSG_LENGTH'
  215 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |                ^~~~~~~~~~~~
link.c:246:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  246 |                           rta_getattr_u32(tb[IFLA_MTU]));
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
link.c:249:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  249 |                 int master = rta_getattr_u32(tb[IFLA_MASTER]);
      |                              ^~~~~~~~~~~~~~~
link.c:252:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  252 |                              ll_index_to_name(master));
      |                                               ^~~~~~
link.c: In function 'brlink_modify':
link.c:371:40: warning: conversion from 'int' to '__s8' {aka 'signed char'} may change value [-Wconversion]
  371 |                         mcast_router = atoi(*argv);
      |                                        ^~~~
link.c:389:32: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  389 |                         cost = atoi(*argv);
      |                                ^~~~
link.c:392:36: warning: conversion from 'int' to '__s16' {aka 'short int'} may change value [-Wconversion]
  392 |                         priority = atoi(*argv);
      |                                    ^~~~
link.c:397:33: warning: conversion from 'long int' to '__s8' {aka 'signed char'} may change value [-Wconversion]
  397 |                         state = strtol(*argv, &endptr, 10);
      |                                 ^~~~~~
link.c:399:41: warning: conversion from 'int' to '__s8' {aka 'signed char'} may change value [-Wconversion]
  399 |                                 state = parse_stp_state(*argv);
      |                                         ^~~~~~~~~~~~~~~
link.c:444:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  444 |                         backup_port_idx = ll_name_to_index(*argv);
      |                                           ^~~~~~~~~~~~~~~~
link.c:463:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  463 |         req.ifm.ifi_index = ll_name_to_index(d);
      |                             ^~~~~~~~~~~~~~~~
link.c:476:66: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  476 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_GUARD, bpdu_guard);
      |                                                                  ^~~~~~~~~~
link.c:478:65: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  478 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_MODE, hairpin);
      |                                                                 ^~~~~~~
link.c:481:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  481 |                          fast_leave);
      |                          ^~~~~~~~~~
link.c:483:68: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  483 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_PROTECT, root_block);
      |                                                                    ^~~~~~~~~~
link.c:485:74: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  485 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_UNICAST_FLOOD, flood);
      |                                                                          ^~~~~
link.c:488:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  488 |                          mcast_router);
      |                          ^~~~~~~~~~~~
link.c:491:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  491 |                          mcast_flood);
      |                          ^~~~~~~~~~~
link.c:494:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  494 |                          bcast_flood);
      |                          ^~~~~~~~~~~
link.c:497:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  497 |                          mcast_to_unicast);
      |                          ^~~~~~~~~~~~~~~~
link.c:499:69: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  499 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_LEARNING, learning);
      |                                                                     ^~~~~~~~
link.c:502:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  502 |                          learning_sync);
      |                          ^~~~~~~~~~~~~
link.c:508:70: warning: conversion to '__u16' {aka 'short unsigned int'} from '__s16' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  508 |                 addattr16(&req.n, sizeof(req), IFLA_BRPORT_PRIORITY, priority);
      |                                                                      ^~~~~~~~
link.c:511:66: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  511 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_STATE, state);
      |                                                                  ^~~~~
link.c:515:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  515 |                          neigh_suppress);
      |                          ^~~~~~~~~~~~~~
link.c:518:26: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  518 |                          vlan_tunnel);
      |                          ^~~~~~~~~~~
link.c:520:69: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  520 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_ISOLATED, isolated);
      |                                                                     ^~~~~~~~
link.c:523:67: warning: conversion to '__u8' {aka 'unsigned char'} from '__s8' {aka 'signed char'} may change the sign of the result [-Wsign-conversion]
  523 |                 addattr8(&req.n, sizeof(req), IFLA_BRPORT_LOCKED, locked);
      |                                                                   ^~~~~~
link.c:527:27: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  527 |                           backup_port_idx);
      |                           ^~~~~~~~~~~~~~~
link.c:543:74: warning: conversion to '__u16' {aka 'short unsigned int'} from '__s16' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  543 |                         addattr16(&req.n, sizeof(req), IFLA_BRIDGE_MODE, mode);
      |                                                                          ^~~~
    CC       mdb.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from mdb.c:13:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from mdb.c:6:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from mdb.c:19:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
mdb.c: In function 'br_print_router_port_stats':
mdb.c:67:41: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   67 |                      RTA_PAYLOAD(pattr) - RTA_ALIGN(sizeof(uint32_t)));
In file included from ../include/libnetlink.h:9,
                 from mdb.c:18:
mdb.c: In function 'br_print_router_ports':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
mdb.c:87:19: note: in expansion of macro 'RTA_PAYLOAD'
   87 |         int rem = RTA_PAYLOAD(attr);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
mdb.c:95:54: note: in expansion of macro 'RTA_NEXT'
   95 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
mdb.c:95:54: note: in expansion of macro 'RTA_NEXT'
   95 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
mdb.c: In function 'print_src_entry':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
mdb.c:130:9: note: in expansion of macro 'parse_rtattr_nested'
  130 |         parse_rtattr_nested(stb, MDBA_MDB_SRCATTR_MAX, src_attr);
      |         ^~~~~~~~~~~~~~~~~~~
mdb.c:142:56: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  142 |         print_color_string(PRINT_ANY, ifa_family_color(af),
      |                                                        ^~
mdb.c: In function 'print_mdb_entry':
mdb.c:170:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  170 |         dev = ll_index_to_name(ifindex);
      |                                ^~~~~~~
mdb.c:184:56: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  184 |         print_color_string(PRINT_ANY, ifa_family_color(af),
      |                                                        ^~
mdb.c:189:64: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  189 |                 print_color_string(PRINT_ANY, ifa_family_color(af),
      |                                                                ^~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
mdb.c:211:31: note: in expansion of macro 'RTA_PAYLOAD'
  211 |                         rem = RTA_PAYLOAD(attr);
      |                               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
mdb.c:213:34: note: in expansion of macro 'RTA_NEXT'
  213 |                              i = RTA_NEXT(i, rem)) {
      |                                  ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
mdb.c:213:34: note: in expansion of macro 'RTA_NEXT'
  213 |                              i = RTA_NEXT(i, rem)) {
      |                                  ^~~~~~~~
mdb.c: In function 'br_print_mdb_entry':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
mdb.c:261:15: note: in expansion of macro 'RTA_PAYLOAD'
  261 |         rem = RTA_PAYLOAD(attr);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
mdb.c:262:54: note: in expansion of macro 'RTA_NEXT'
  262 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
mdb.c:262:54: note: in expansion of macro 'RTA_NEXT'
  262 |         for (i = RTA_DATA(attr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
mdb.c:265:51: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  265 |                                    RTA_PAYLOAD(i) - RTA_ALIGN(sizeof(*e)),
mdb.c: In function 'print_mdb_entries':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
mdb.c:274:19: note: in expansion of macro 'RTA_PAYLOAD'
  274 |         int rem = RTA_PAYLOAD(mdb);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
mdb.c:277:53: note: in expansion of macro 'RTA_NEXT'
  277 |         for (i = RTA_DATA(mdb); RTA_OK(i, rem); i = RTA_NEXT(i, rem))
      |                                                     ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
mdb.c:277:53: note: in expansion of macro 'RTA_NEXT'
  277 |         for (i = RTA_DATA(mdb); RTA_OK(i, rem); i = RTA_NEXT(i, rem))
      |                                                     ^~~~~~~~
mdb.c: In function 'print_router_entries':
mdb.c:284:49: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  284 |         const char *brifname = ll_index_to_name(ifindex);
      |                                                 ^~~~~~~
mdb.c: In function '__parse_mdb_nlmsg':
mdb.c:312:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  312 |         int len = n->nlmsg_len;
      |                   ^
mdb.c:324:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  324 |         len -= NLMSG_LENGTH(sizeof(*r));
      |             ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
mdb.c:324:16: note: in expansion of macro 'NLMSG_LENGTH'
  324 |         len -= NLMSG_LENGTH(sizeof(*r));
      |                ^~~~~~~~~~~~
mdb.c:333:62: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  333 |         parse_rtattr(tb, MDBA_MAX, MDBA_RTA(r), n->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
mdb.c: In function 'print_mdbs':
mdb.c:350:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  350 |                 print_mdb_entries(fp, n, r->ifindex, tb[MDBA_MDB]);
      |                                          ~^~~~~~~~~
mdb.c: In function 'print_rtrs':
mdb.c:367:46: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  367 |                 print_router_entries(fp, n, r->ifindex, tb[MDBA_ROUTER]);
      |                                             ~^~~~~~~~~
mdb.c: In function 'print_mdb_mon':
mdb.c:389:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  389 |                 print_mdb_entries(fp, n, r->ifindex, tb[MDBA_MDB]);
      |                                          ~^~~~~~~~~
mdb.c:392:46: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  392 |                 print_router_entries(fp, n, r->ifindex, tb[MDBA_ROUTER]);
      |                                             ~^~~~~~~~~
mdb.c: In function 'mdb_show':
mdb.c:411:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  411 |                         filter_vlan = atoi(*argv);
      |                                       ^~~~
mdb.c: In function 'mdb_modify':
../include/uapi/linux/netlink.h:54:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   54 | #define NLM_F_REQUEST           0x01    /* It is request message.       */
      |                                 ^~~~
mdb.c:485:34: note: in expansion of macro 'NLM_F_REQUEST'
  485 |                 .n.nlmsg_flags = NLM_F_REQUEST | flags,
      |                                  ^~~~~~~~~~~~~
mdb.c:486:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  486 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
mdb.c:510:31: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  510 |                         vid = atoi(*argv);
      |                               ^~~~
mdb.c:539:21: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  539 |         entry.vid = vid;
      |                     ^~~
    CC       vlan.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from vlan.c:9:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from vlan.c:2:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from vlan.c:17:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
vlan.c: In function 'add_tunnel_info_range':
vlan.c:117:45: warning: conversion to '__u16' {aka 'short unsigned int'} from 'int16_t' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  117 |                 add_tunnel_info(n, reqsize, vid_end, tun_id_end,
      |                                             ^~~~~~~
vlan.c: In function 'add_vlan_info_range':
vlan.c:137:32: warning: unsigned conversion from 'int' to '__u16' {aka 'short unsigned int'} changes the value of '-9' [-Wsign-conversion]
  137 |                 vinfo.flags &= ~BRIDGE_VLAN_INFO_RANGE_BEGIN;
      |                                ^
vlan.c:141:29: warning: conversion to '__u16' {aka 'short unsigned int'} from 'int16_t' {aka 'short int'} may change the sign of the result [-Wsign-conversion]
  141 |                 vinfo.vid = vid_end;
      |                             ^~~~~~~
vlan.c: In function 'vlan_modify':
vlan.c:161:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
  161 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
vlan.c:186:39: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  186 |                                 vid = atoi(*argv);
      |                                       ^~~~
vlan.c:187:43: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  187 |                                 vid_end = atoi(p);
      |                                           ^~~~
vlan.c:190:39: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  190 |                                 vid = atoi(*argv);
      |                                       ^~~~
vlan.c:218:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  218 |         req.ifm.ifi_index = ll_name_to_index(d);
      |                             ^~~~~~~~~~~~~~~~
vlan.c:248:60: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  248 |                 add_tunnel_info_range(&req.n, sizeof(req), vid, vid_end,
      |                                                            ^~~
vlan.c:251:58: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  251 |                 add_vlan_info_range(&req.n, sizeof(req), vid, vid_end,
      |                                                          ^~~
vlan.c: In function 'vlan_option_set':
vlan.c:301:39: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  301 |                                 vid = atoi(*argv);
      |                                       ^~~~
vlan.c:302:43: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  302 |                                 vid_end = atoi(p);
      |                                           ^~~~
vlan.c:309:39: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  309 |                                 vid = atoi(*argv);
      |                                       ^~~~
vlan.c:318:37: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  318 |                         vinfo.vid = vid;
      |                                     ^~~
vlan.c:323:70: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  323 |                                           BRIDGE_VLANDB_ENTRY_RANGE, vid_end);
      |                                                                      ^~~~~~~
vlan.c:337:34: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  337 |                                  state);
      |                                  ^~~~~
vlan.c: In function 'vlan_global_option_set':
vlan.c:407:39: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  407 |                                 vid = atoi(*argv);
      |                                       ^~~~
vlan.c:408:43: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  408 |                                 vid_end = atoi(p);
      |                                           ^~~~
vlan.c:415:39: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  415 |                                 vid = atoi(*argv);
      |                                       ^~~~
vlan.c:423:35: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  423 |                                   vid);
      |                                   ^~~
vlan.c:426:70: warning: conversion to '__u16' {aka 'short unsigned int'} from 'short int' may change the sign of the result [-Wsign-conversion]
  426 |                                           BRIDGE_VLANDB_GOPTS_RANGE, vid_end);
      |                                                                      ^~~~~~~
vlan.c: In function 'open_vlan_port':
vlan.c:558:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  558 |                            ll_index_to_name(ifi_index));
      |                                             ^~~~~~~~~
vlan.c: In function 'print_range':
vlan.c:580:16: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  580 |         return width;
      |                ^~~~~
In file included from ../include/libnetlink.h:9,
                 from vlan.c:15:
vlan.c: In function 'print_vlan_tunnel_info':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
vlan.c:586:19: note: in expansion of macro 'RTA_PAYLOAD'
  586 |         int rem = RTA_PAYLOAD(list);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
vlan.c:591:54: note: in expansion of macro 'RTA_NEXT'
  591 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
vlan.c:591:54: note: in expansion of macro 'RTA_NEXT'
  591 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
vlan.c:603:43: note: in expansion of macro 'RTA_PAYLOAD'
  603 |                              RTA_DATA(i), RTA_PAYLOAD(i));
      |                                           ^~~~~~~~~~~
vlan.c: In function 'print_vlan':
vlan.c:663:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  663 |         int len = n->nlmsg_len;
      |                   ^
vlan.c:672:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  672 |         len -= NLMSG_LENGTH(sizeof(*ifm));
      |             ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
vlan.c:672:16: note: in expansion of macro 'NLMSG_LENGTH'
  672 |         len -= NLMSG_LENGTH(sizeof(*ifm));
      |                ^~~~~~~~~~~~
vlan.c: In function 'print_vlan_stats_attr':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
vlan.c:749:22: note: in expansion of macro 'RTA_PAYLOAD'
  749 |                      RTA_PAYLOAD(attr));
      |                      ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
vlan.c:754:15: note: in expansion of macro 'RTA_PAYLOAD'
  754 |         rem = RTA_PAYLOAD(list);
      |               ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
vlan.c:756:54: note: in expansion of macro 'RTA_NEXT'
  756 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
vlan.c:756:54: note: in expansion of macro 'RTA_NEXT'
  756 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
vlan.c: In function 'print_vlan_stats':
vlan.c:790:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  790 |         int len = n->nlmsg_len;
      |                   ^
vlan.c:793:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  793 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
vlan.c:793:16: note: in expansion of macro 'NLMSG_LENGTH'
  793 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |                ^~~~~~~~~~~~
vlan.c:807:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  807 |                                       ifsm->ifindex);
      |                                       ~~~~^~~~~~~~~
vlan.c:811:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  811 |                                       ifsm->ifindex);
      |                                       ~~~~^~~~~~~~~
vlan.c: In function 'print_vlan_router_ports':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
vlan.c:819:19: note: in expansion of macro 'RTA_PAYLOAD'
  819 |         int rem = RTA_PAYLOAD(rattr);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
vlan.c:825:55: note: in expansion of macro 'RTA_NEXT'
  825 |         for (i = RTA_DATA(rattr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                       ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
vlan.c:825:55: note: in expansion of macro 'RTA_NEXT'
  825 |         for (i = RTA_DATA(rattr); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                       ^~~~~~~~
vlan.c: In function 'print_vlan_global_opts':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
vlan.c:856:28: note: in expansion of macro 'RTA_PAYLOAD'
  856 |                            RTA_PAYLOAD(a), NLA_F_NESTED);
      |                            ^~~~~~~~~~~
vlan.c: In function 'print_vlan_opts':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
vlan.c:965:28: note: in expansion of macro 'RTA_PAYLOAD'
  965 |                            RTA_PAYLOAD(a), NLA_F_NESTED);
      |                            ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
vlan.c:986:30: note: in expansion of macro 'RTA_PAYLOAD'
  986 |                              RTA_PAYLOAD(attr));
      |                              ^~~~~~~~~~~
vlan.c: In function 'print_vlan_rtm':
vlan.c:1033:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1033 |         int len = n->nlmsg_len;
      |                   ^
vlan.c:1045:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1045 |         len -= NLMSG_LENGTH(sizeof(*bvm));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
vlan.c:1045:16: note: in expansion of macro 'NLMSG_LENGTH'
 1045 |         len -= NLMSG_LENGTH(sizeof(*bvm));
      |                ^~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
vlan.c:1071:55: note: in expansion of macro 'RTA_NEXT'
 1071 |         for (a = BRVLAN_RTA(bvm); RTA_OK(a, rem); a = RTA_NEXT(a, rem)) {
      |                                                       ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
vlan.c:1071:55: note: in expansion of macro 'RTA_NEXT'
 1071 |         for (a = BRVLAN_RTA(bvm); RTA_OK(a, rem); a = RTA_NEXT(a, rem)) {
      |                                                       ^~~~~~~~
vlan.c:1072:43: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-49153' [-Wsign-conversion]
 1072 |                 unsigned short rta_type = a->rta_type & NLA_TYPE_MASK;
      |                                           ^
vlan.c:1081:47: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1081 |                         print_vlan_opts(a, bvm->ifindex);
      |                                            ~~~^~~~~~~~~
vlan.c:1084:54: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1084 |                         print_vlan_global_opts(a, bvm->ifindex);
      |                                                   ~~~^~~~~~~~~
vlan.c: In function 'vlan_show':
vlan.c:1117:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1117 |                         filter_vlan = atoi(*argv);
      |                                       ^~~~
vlan.c: In function 'vlan_global_show':
vlan.c:1235:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1235 |                         filter_vlan = atoi(*argv);
      |                                       ^~~~
vlan.c: In function 'print_vlan_info':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
vlan.c:1277:19: note: in expansion of macro 'RTA_PAYLOAD'
 1277 |         int rem = RTA_PAYLOAD(list);
      |                   ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
vlan.c:1281:54: note: in expansion of macro 'RTA_NEXT'
 1281 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
vlan.c:1281:54: note: in expansion of macro 'RTA_NEXT'
 1281 |         for (i = RTA_DATA(list); RTA_OK(i, rem); i = RTA_NEXT(i, rem)) {
      |                                                      ^~~~~~~~
    CC       vni.o
In file included from ../include/uapi/linux/in6.h:26,
                 from ../include/uapi/linux/if_bridge.h:19,
                 from vni.c:16:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from vni.c:7:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from vni.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
vni.c: In function 'parse_vni_filter':
vni.c:65:37: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   65 |                         vni_start = atoi(vni);
      |                                     ^~~~
vni.c:66:35: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   66 |                         vni_end = atoi(v);
      |                                   ^~~~
vni.c:68:37: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   68 |                         vni_start = atoi(vni);
      |                                     ^~~~
vni.c: In function 'vni_modify':
vni.c:93:33: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   93 |                 .n.nlmsg_type = cmd,
      |                                 ^~~
vni.c: In function 'open_vni_port':
vni.c:167:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  167 |                            ll_index_to_name(ifi_index));
      |                                             ^~~~~~~~~
In file included from ../include/libnetlink.h:9,
                 from vni.c:20:
vni.c: In function 'print_vnifilter_entry_stats':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
vni.c:196:28: note: in expansion of macro 'RTA_PAYLOAD'
  196 |                            RTA_PAYLOAD(stats_attr), NLA_F_NESTED);
      |                            ^~~~~~~~~~~
vni.c: In function 'print_vni':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
vni.c:249:28: note: in expansion of macro 'RTA_PAYLOAD'
  249 |                            RTA_PAYLOAD(t), NLA_F_NESTED);
      |                            ^~~~~~~~~~~
vni.c: In function 'print_vnifilter_rtm':
vni.c:309:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  309 |         int len = n->nlmsg_len;
      |                   ^
vni.c:323:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  323 |         len -= NLMSG_LENGTH(sizeof(*tmsg));
      |             ^~
In file included from ../include/uapi/linux/if_link.h:6,
                 from vni.c:15:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
vni.c:323:16: note: in expansion of macro 'NLMSG_LENGTH'
  323 |         len -= NLMSG_LENGTH(sizeof(*tmsg));
      |                ^~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:223:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                            ^~
vni.c:341:56: note: in expansion of macro 'RTA_NEXT'
  341 |         for (t = TUNNEL_RTA(tmsg); RTA_OK(t, rem); t = RTA_NEXT(t, rem)) {
      |                                                        ^~~~~~~~
../include/uapi/linux/rtnetlink.h:219:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  219 | #define RTA_ALIGN(len) ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )
      |                        ^
../include/uapi/linux/rtnetlink.h:223:47: note: in expansion of macro 'RTA_ALIGN'
  223 | #define RTA_NEXT(rta,attrlen)   ((attrlen) -= RTA_ALIGN((rta)->rta_len), \
      |                                               ^~~~~~~~~
vni.c:341:56: note: in expansion of macro 'RTA_NEXT'
  341 |         for (t = TUNNEL_RTA(tmsg); RTA_OK(t, rem); t = RTA_NEXT(t, rem)) {
      |                                                        ^~~~~~~~
vni.c:342:43: warning: unsigned conversion from 'int' to 'short unsigned int' changes the value of '-49153' [-Wsign-conversion]
  342 |                 unsigned short rta_type = t->rta_type & NLA_TYPE_MASK;
      |                                           ^
vni.c:347:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  347 |                         open_vni_port(tmsg->ifindex, "%s");
      |                                       ~~~~^~~~~~~~~
vni.c:355:34: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  355 |                 print_vni(t, tmsg->ifindex);
      |                              ~~~~^~~~~~~~~
vni.c: In function 'vni_show':
vni.c:397:50: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  397 |         if (rtnl_tunneldump_req(&rth, PF_BRIDGE, filter_index, flags) < 0) {
      |                                                  ^~~~~~~~~~~~
    LINK     bridge

misc
    CC       ss.o
In file included from ss.c:33:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from ../include/uapi/linux/netdevice.h:29,
                 from ss.c:43:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ss.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ss.c:51:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
ss.c: In function 'user_ent_hashfn':
ss.c:541:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  541 |         int val = (ino >> 24) ^ (ino >> 16) ^ (ino >> 8) ^ ino;
      |                   ^
ss.c: In function 'user_ent_hash_build_task':
ss.c:587:18: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  587 |         pos_id = strlen(path);  /* $PROC_ROOT/$ID/ */
      |                  ^~~~~~
ss.c:589:46: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  589 |         snprintf(path + pos_id, MAX_PATH_LEN - pos_id, "fd/");
      |                                              ^
ss.c:596:18: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  596 |         pos_fd = strlen(path);  /* $PROC_ROOT/$ID/fd/ */
      |                  ^~~~~~
ss.c:609:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  609 |                 snprintf(path + pos_fd, MAX_PATH_LEN - pos_fd, "%d", fd);
      |                                                      ^
ss.c:628:52: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  628 |                         strlcpy(stat, path, pos_id + 1);
      |                                             ~~~~~~~^~~
ss.c:629:62: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  629 |                         snprintf(stat + pos_id, sizeof(stat) - pos_id, "stat");
      |                                                              ^
ss.c: In function 'user_ent_hash_build':
ss.c:679:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  679 |         nameoff = strlen(name);
      |                   ^~~~~~
ss.c:691:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  691 |                 snprintf(name + nameoff, sizeof(name) - nameoff, "%d/", pid);
      |                                                       ^
ss.c:698:63: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  698 |                         snprintf(name + nameoff, sizeof(name) - nameoff, "%d/task/", pid);
      |                                                               ^
ss.c:712:71: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  712 |                                 snprintf(name + nameoff, sizeof(name) - nameoff, "%d/", tid);
      |                                                                       ^
ss.c: In function 'find_entry':
ss.c:755:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  755 |                                 len = snprintf(ptr, buf_len - buf_used,
      |                                                     ~~~~~~~~^~~~~~~~~~
ss.c:760:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  760 |                                 len = snprintf(ptr, buf_len - buf_used,
      |                                                     ~~~~~~~~^~~~~~~~~~
ss.c:766:61: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  766 |                                 len = snprintf(ptr, buf_len - buf_used,
      |                                                     ~~~~~~~~^~~~~~~~~~
ss.c:779:57: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  779 |                                 new_buf = realloc(*buf, new_buf_len);
      |                                                         ^~~~~~~~~~~
ss.c: In function 'buf_chunk_avail':
ss.c:1023:61: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1023 |         return BUF_CHUNK - offsetof(struct buf_chunk, data) -
      |                                                             ^
ss.c:1023:61: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1023 |         return BUF_CHUNK - offsetof(struct buf_chunk, data) -
      |                                                             ^
ss.c: In function 'buf_update':
ss.c:1047:27: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1047 |                 t->len += len;
      |                           ^~~
ss.c: In function 'out':
ss.c:1085:30: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1085 |         len = vsnprintf(pos, buf_chunk_avail(buffer.tail), fmt, args);
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
ss.c: In function 'field_flush':
ss.c:1144:36: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1144 |         if (buf_chunk_avail(chunk) - pad < sizeof(buffer.cur->len)) {
      |                                    ^
ss.c: In function 'render_calc_width':
ss.c:1229:47: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1229 |                         c->width = c->max_len + strlen(c->ldelim);
      |                                               ^
ss.c:1229:36: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1229 |                         c->width = c->max_len + strlen(c->ldelim);
      |                                    ^
ss.c: In function 'render':
ss.c:1339:25: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1339 |                 printed += fwrite(token->data, 1, token->len, stdout);
      |                         ^~
ss.c:1339:28: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 1339 |                 printed += fwrite(token->data, 1, token->len, stdout);
      |                            ^~~~~~
ss.c: In function 'sock_state_print':
ss.c:1419:46: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1419 |                 sock_name = unix_netid_name(s->type);
      |                                             ~^~~~~~
ss.c:1423:41: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1423 |                 sock_name = proto_name(s->type);
      |                                        ~^~~~~~
ss.c:1432:46: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1432 |                 sock_name = tipc_netid_name(s->type);
      |                                             ~^~~~~~
ss.c:1435:47: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1435 |                 sock_name = vsock_netid_name(s->type);
      |                                              ~^~~~~~
ss.c: In function 'print_ms_timer':
ss.c:1494:16: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1494 |         secs = timeout/1000;
      |                ^~~~~~~
ss.c:1497:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1497 |         msecs = timeout%1000;
      |                 ^~~~~~~
In file included from ss.c:20:
ss.c: In function '__resolve_service':
ss.c:1647:42: warning: conversion from 'int' to '__uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1647 |                 se = getservbyport(htons(port), dg_proto);
      |                                          ^~~~
ss.c: In function 'resolve_service':
ss.c:1678:21: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1678 |         hash = (port^(((unsigned long)dg_proto)>>2)) % SCACHE_BUCKETS;
      |                     ^
ss.c: In function 'ssfilter_patch':
ss.c:1896:35: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1896 |                         op->no += reloc;
      |                                   ^~~~~
ss.c: In function 'ssfilter_bytecompile':
ss.c:1923:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1923 |                         len += 4 + sizeof(struct inet_diag_hostcond);
      |                             ^~
ss.c:1923:32: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1923 |                         len += 4 + sizeof(struct inet_diag_hostcond);
      |                                ^
ss.c:1931:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1931 |                 if (!(ptr = malloc(len))) abort();
      |                                    ^~~
ss.c:1936:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 1936 |                         int oplen = alen + 4 + sizeof(struct inet_diag_hostcond);
      |                                              ^
ss.c:1936:37: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 1936 |                         int oplen = alen + 4 + sizeof(struct inet_diag_hostcond);
      |                                     ^~~~
ss.c:1939:57: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1939 |                         *op = (struct inet_diag_bc_op){ code, oplen, oplen+4 };
      |                                                         ^~~~
ss.c:1939:63: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 1939 |                         *op = (struct inet_diag_bc_op){ code, oplen, oplen+4 };
      |                                                               ^~~~~
ss.c:1939:70: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1939 |                         *op = (struct inet_diag_bc_op){ code, oplen, oplen+4 };
      |                                                                      ^~~~~
ss.c:1940:40: warning: conversion from '__u16' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1940 |                         cond->family = a->addr.family;
      |                                        ^
ss.c:1942:44: warning: conversion from '__s16' {aka 'short int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 1942 |                         cond->prefix_len = a->addr.bitlen;
      |                                            ^
ss.c:1943:58: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1943 |                         memcpy(cond->addr, a->addr.data, alen);
      |                                                          ^~~~
ss.c:1947:86: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1947 |                                 *op = (struct inet_diag_bc_op){ INET_DIAG_BC_JMP, 4, len - (ptr-*bytecode)};
      |                                                                                      ^~~
ss.c:1959:92: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1959 |                 ((struct inet_diag_bc_op *)*bytecode)[1] = (struct inet_diag_bc_op){ 0, 0, x->port };
      |                                                                                            ^
ss.c:1968:92: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1968 |                 ((struct inet_diag_bc_op *)*bytecode)[1] = (struct inet_diag_bc_op){ 0, 0, x->port };
      |                                                                                            ^
ss.c:1977:92: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1977 |                 ((struct inet_diag_bc_op *)*bytecode)[1] = (struct inet_diag_bc_op){ 0, 0, x->port };
      |                                                                                            ^
ss.c:1986:92: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 1986 |                 ((struct inet_diag_bc_op *)*bytecode)[1] = (struct inet_diag_bc_op){ 0, 0, x->port };
      |                                                                                            ^
ss.c:2002:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2002 |                 if (!(a = malloc(l1+l2))) abort();
      |                                  ~~^~~
ss.c:2003:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2003 |                 memcpy(a, a1, l1);
      |                               ^~
ss.c:2004:34: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2004 |                 memcpy(a+l1, a2, l2);
      |                                  ^~
ss.c:2022:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2022 |                 if (!(a = malloc(l1+l2+4))) abort();
      |                                  ~~~~~^~
ss.c:2023:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2023 |                 memcpy(a, a1, l1);
      |                               ^~
ss.c:2024:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2024 |                 memcpy(a+l1+4, a2, l2);
      |                                    ^~
ss.c:2026:100: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 2026 |                 *(struct inet_diag_bc_op *)(a+l1) = (struct inet_diag_bc_op){ INET_DIAG_BC_JMP, 4, l2+4 };
      |                                                                                                    ^~
ss.c:2040:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2040 |                 if (!(a = malloc(l1+4))) abort();
      |                                  ~~^~
ss.c:2041:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2041 |                 memcpy(a, a1, l1);
      |                               ^~
ss.c:2061:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2061 |                 if (!(*bytecode = malloc(inslen))) abort();
      |                                          ^~~~~~
ss.c:2063:51: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 2063 |                         { INET_DIAG_BC_MARK_COND, inslen, inslen + 4 },
      |                                                   ^~~~~~
ss.c:2063:59: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 2063 |                         { INET_DIAG_BC_MARK_COND, inslen, inslen + 4 },
      |                                                           ^~~~~~
ss.c:2078:42: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2078 |                 if (!(*bytecode = malloc(inslen))) abort();
      |                                          ^~~~~~
ss.c:2080:53: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
 2080 |                         { INET_DIAG_BC_CGROUP_COND, inslen, inslen + 4 },
      |                                                     ^~~~~~
ss.c:2080:61: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
 2080 |                         { INET_DIAG_BC_CGROUP_COND, inslen, inslen + 4 },
      |                                                             ^~~~~~
ss.c: In function 'remember_he':
ss.c:2113:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 2113 |                 memcpy(b->addr.data, *ptr, len);
      |                                            ^~~
ss.c:2114:35: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 2114 |                 b->addr.bytelen = len;
      |                                   ^~~
ss.c:2115:34: warning: conversion from 'int' to '__s16' {aka 'short int'} may change value [-Wconversion]
 2115 |                 b->addr.bitlen = len*8;
      |                                  ^~~
ss.c:2116:34: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 2116 |                 b->addr.family = he->h_addrtype;
      |                                  ^~
ss.c: In function 'xll_index_to_name':
ss.c:2163:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2163 |         return ll_index_to_name(index);
      |                                 ^~~~~
ss.c: In function 'xll_name_to_index':
ss.c:2170:16: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 2170 |         return ll_name_to_index(dev);
      |                ^~~~~~~~~~~~~~~~~~~~~
ss.c: In function 'parse_devcond':
ss.c:2178:19: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2178 |         a.iface = xll_name_to_index(name);
      |                   ^~~~~~~~~~~~~~~~~
ss.c: In function 'parse_hostcond':
ss.c:2250:33: warning: conversion from 'size_t' {aka 'unsigned int'} to '__s16' {aka 'short int'} may change value [-Wconversion]
 2250 |                 a.addr.bitlen = 8*strlen(p);
      |                                 ^
ss.c:2355:59: warning: conversion from 'int' to '__uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 2355 |                                         a.port = ntohs(se1->s_port);
      |                                                        ~~~^~~~~~~~
ss.c: In function 'proc_parse_inet_addr':
ss.c:2471:46: warning: conversion from 'int' to '__u16' {aka 'short unsigned int'} may change value [-Wconversion]
 2471 |         s->local.family = s->remote.family = family;
      |                                              ^~~~~~
ss.c: In function 'tcp_stats_print':
ss.c:2670:38: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
 2670 |                     sprint_bw(b1, bw * 8.0),
      |                                      ^
ss.c:2710:35: warning: conversion from 'long long unsigned int' to 'double' may change value [-Wconversion]
 2710 |                             100.0 * s->rwnd_limited / s->busy_time);
      |                                   ^
ss.c:2710:53: warning: conversion from 'long long unsigned int' to 'double' may change value [-Wconversion]
 2710 |                             100.0 * s->rwnd_limited / s->busy_time);
      |                                                     ^
ss.c:2714:35: warning: conversion from 'long long unsigned int' to 'double' may change value [-Wconversion]
 2714 |                             100.0 * s->sndbuf_limited / s->busy_time);
      |                                   ^
ss.c:2714:55: warning: conversion from 'long long unsigned int' to 'double' may change value [-Wconversion]
 2714 |                             100.0 * s->sndbuf_limited / s->busy_time);
      |                                                       ^
ss.c: In function 'tcp_show_line':
ss.c:2816:47: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2816 |         s.retrans   = s.timer != 1 ? s.probes : s.retrans;
      |                                               ^
ss.c:2817:41: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2817 |         s.timeout   = (s.timeout * 1000 + hz - 1) / hz;
      |                                         ^
ss.c:2817:51: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 2817 |         s.timeout   = (s.timeout * 1000 + hz - 1) / hz;
      |                                                   ^
ss.c: In function 'generic_record_read':
ss.c:2853:25: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 2853 |                 int n = strlen(line);
      |                         ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
ss.c: In function 'tcp_show_info':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:3061:27: note: in expansion of macro 'RTA_PAYLOAD'
 3061 |                 int len = RTA_PAYLOAD(tb[INET_DIAG_INFO]);
      |                           ^~~~~~~~~~~
ss.c:3066:68: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3066 |                         memcpy(info, RTA_DATA(tb[INET_DIAG_INFO]), len);
      |                                                                    ^~~
ss.c:3067:69: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3067 |                         memset((char *)info + len, 0, sizeof(*info) - len);
      |                                                                     ^
ss.c:3097:36: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3097 |                 s.mss            = info->tcpi_snd_mss;
      |                                    ^~~~
ss.c:3098:36: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3098 |                 s.rcv_mss        = info->tcpi_rcv_mss;
      |                                    ^~~~
ss.c:3099:36: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3099 |                 s.advmss         = info->tcpi_advmss;
      |                                    ^~~~
ss.c:3100:36: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3100 |                 s.rcv_space      = info->tcpi_rcv_space;
      |                                    ^~~~
ss.c:3117:38: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3117 |                         s.ssthresh = info->tcpi_snd_ssthresh;
      |                                      ^~~~
../include/utils.h:279:20: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  279 | # define min(x, y) ({                   \
      |                    ^
ss.c:3146:35: note: in expansion of macro 'min'
 3146 |                         int len = min(RTA_PAYLOAD(tb[INET_DIAG_BBRINFO]),
      |                                   ^~~
ss.c:3151:62: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3151 |                                 memcpy(s.bbr_info, bbr_info, len);
      |                                                              ^~~
ss.c:3161:64: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
 3161 |                         s.pacing_rate = info->tcpi_pacing_rate * 8.;
      |                                                                ^
ss.c:3165:80: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
 3165 |                                 s.pacing_rate_max = info->tcpi_max_pacing_rate * 8.;
      |                                                                                ^
ss.c:3176:60: warning: conversion from '__u64' {aka 'long long unsigned int'} to 'double' may change value [-Wconversion]
 3176 |                 s.delivery_rate = info->tcpi_delivery_rate * 8.;
      |                                                            ^
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:3195:27: note: in expansion of macro 'RTA_PAYLOAD'
 3195 |                 int len = RTA_PAYLOAD(tb[INET_DIAG_MD5SIG]);
      |                           ^~~~~~~~~~~
ss.c:3199:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3199 |                 for (len -= sizeof(*sig); len > 0; len -= sizeof(*sig)) {
      |                          ^~
ss.c:3199:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 3199 |                 for (len -= sizeof(*sig); len > 0; len -= sizeof(*sig)) {
      |                             ^~~~~~
ss.c:3199:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3199 |                 for (len -= sizeof(*sig); len > 0; len -= sizeof(*sig)) {
      |                                                        ^~
ss.c:3199:59: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 3199 |                 for (len -= sizeof(*sig); len > 0; len -= sizeof(*sig)) {
      |                                                           ^~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ss.c:3207:17: note: in expansion of macro 'parse_rtattr_nested'
 3207 |                 parse_rtattr_nested(ulpinfo, INET_ULP_INFO_MAX,
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ss.c:3217:25: note: in expansion of macro 'parse_rtattr_nested'
 3217 |                         parse_rtattr_nested(tlsinfo, TLS_INFO_MAX,
      |                         ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ss.c:3230:25: note: in expansion of macro 'parse_rtattr_nested'
 3230 |                         parse_rtattr_nested(sfinfo, MPTCP_SUBFLOW_ATTR_MAX,
      |                         ^~~~~~~~~~~~~~~~~~~
ss.c: In function 'mptcp_show_info':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:3272:27: note: in expansion of macro 'RTA_PAYLOAD'
 3272 |                 int len = RTA_PAYLOAD(tb[INET_DIAG_INFO]);
      |                           ^~~~~~~~~~~
ss.c:3277:68: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3277 |                         memcpy(info, RTA_DATA(tb[INET_DIAG_INFO]), len);
      |                                                                    ^~~
ss.c:3278:69: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3278 |                         memset((char *)info + len, 0, sizeof(*info) - len);
      |                                                                     ^
ss.c: In function 'sctp_show_info':
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:3312:23: note: in expansion of macro 'RTA_PAYLOAD'
 3312 |                 len = RTA_PAYLOAD(tb[INET_DIAG_LOCALS]);
      |                       ^~~~~~~~~~~
ss.c:3316:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3316 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                ^~
ss.c:3316:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 3316 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                   ^~~~~~
ss.c:3316:67: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3316 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                                                   ^~
ss.c:3316:70: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 3316 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                                                      ^~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:3321:23: note: in expansion of macro 'RTA_PAYLOAD'
 3321 |                 len = RTA_PAYLOAD(tb[INET_DIAG_PEERS]);
      |                       ^~~~~~~~~~~
ss.c:3325:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3325 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                ^~
ss.c:3325:35: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 3325 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                   ^~~~~~
ss.c:3325:67: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3325 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                                                   ^~
ss.c:3325:70: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 3325 |                 for (sa++, len -= sizeof(*sa); len > 0; sa++, len -= sizeof(*sa))
      |                                                                      ^~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:3330:23: note: in expansion of macro 'RTA_PAYLOAD'
 3330 |                 len = RTA_PAYLOAD(tb[INET_DIAG_INFO]);
      |                       ^~~~~~~~~~~
ss.c:3335:68: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3335 |                         memcpy(info, RTA_DATA(tb[INET_DIAG_INFO]), len);
      |                                                                    ^~~
ss.c:3336:69: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3336 |                         memset((char *)info + len, 0, sizeof(*info) - len);
      |                                                                     ^
ss.c: In function 'parse_diag_msg':
ss.c:3350:37: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3350 |                      nlh->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
ss.c:3356:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3356 |         s->wq           = r->idiag_wqueue;
      |                           ^
ss.c:3357:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3357 |         s->rq           = r->idiag_rqueue;
      |                           ^
ss.c: In function 'inet_show_sock':
ss.c:3391:37: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 3391 |                      nlh->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
ss.c:3486:20: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 3486 |         sctp_ino = s->ino;
      |                    ^
ss.c: In function 'tcpdiag_send':
ss.c:3502:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3502 |                 .r.idiag_states = f->states,
      |                                   ^
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
ss.c:3542:39: note: in expansion of macro 'RTA_LENGTH'
 3542 |                         rta.rta_len = RTA_LENGTH(bclen);
      |                                       ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:225:25: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                         ^
ss.c:3542:39: note: in expansion of macro 'RTA_LENGTH'
 3542 |                         rta.rta_len = RTA_LENGTH(bclen);
      |                                       ^~~~~~~~~~
ss.c:3544:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3544 |                         iov[2] = (struct iovec){ bc, bclen };
      |                                                      ^~~~~
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
ss.c:3545:46: note: in expansion of macro 'RTA_LENGTH'
 3545 |                         req.nlh.nlmsg_len += RTA_LENGTH(bclen);
      |                                              ^~~~~~~~~~
ss.c:3554:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3554 |                 .msg_iovlen = iovlen,
      |                               ^~~~~~
ss.c: In function 'sockdiag_send':
ss.c:3582:30: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 3582 |         req.r.sdiag_family = family;
      |                              ^~~~~~
ss.c:3583:32: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 3583 |         req.r.sdiag_protocol = protocol;
      |                                ^~~~~~~~
ss.c:3584:30: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3584 |         req.r.idiag_states = f->states;
      |                              ^
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
ss.c:3609:42: note: in expansion of macro 'RTA_LENGTH'
 3609 |                         rta_bc.rta_len = RTA_LENGTH(bclen);
      |                                          ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:225:25: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                         ^
ss.c:3609:42: note: in expansion of macro 'RTA_LENGTH'
 3609 |                         rta_bc.rta_len = RTA_LENGTH(bclen);
      |                                          ^~~~~~~~~~
ss.c:3611:54: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3611 |                         iov[2] = (struct iovec){ bc, bclen };
      |                                                      ^~~~~
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
ss.c:3612:46: note: in expansion of macro 'RTA_LENGTH'
 3612 |                         req.nlh.nlmsg_len += RTA_LENGTH(bclen);
      |                                              ^~~~~~~~~~
ss.c:3621:25: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3621 |                 proto = protocol;
      |                         ^~~~~~~~
ss.c:3632:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3632 |                 .msg_iovlen = iovlen,
      |                               ^~~~~~
ss.c: In function 'kill_inet_sock':
ss.c:3661:32: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 3661 |         req.r.sdiag_protocol = diag_arg->protocol;
      |                                ^~~~~~~~
ss.c:3668:43: warning: conversion from 'uint16_t' {aka 'short unsigned int'} to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
 3668 |                 raw->sdiag_raw_protocol = s->raw_prot;
      |                                           ^
ss.c: In function 'show_one_inet_sock':
ss.c:3685:18: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 3685 |         s.type = diag_arg->protocol;
      |                  ^~~~~~~~
ss.c: In function 'tcp_show':
ss.c:3853:35: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3853 |                 if ((buf = malloc(bufsize)) != NULL)
      |                                   ^~~~~~~
ss.c:3866:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3866 |                 setbuffer(fp, buf, bufsize);
      |                                    ^~~~~~~
ss.c:3874:36: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3874 |                 setbuffer(fp, buf, bufsize);
      |                                    ^~~~~~~
ss.c: In function 'unix_show_sock':
ss.c:4094:37: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4094 |                      nlh->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
ss.c:4098:35: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4098 |         stat.ino   = stat.lport = r->udiag_ino;
      |                                   ^
ss.c:4098:22: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 4098 |         stat.ino   = stat.lport = r->udiag_ino;
      |                      ^~~~
ss.c:4107:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4107 |                 stat.rq = rql->udiag_rqueue;
      |                           ^~~
ss.c:4108:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4108 |                 stat.wq = rql->udiag_wqueue;
      |                           ^~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:4111:27: note: in expansion of macro 'RTA_PAYLOAD'
 4111 |                 int len = RTA_PAYLOAD(tb[UNIX_DIAG_NAME]);
      |                           ^~~~~~~~~~~
ss.c:4113:60: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 4113 |                 memcpy(name, RTA_DATA(tb[UNIX_DIAG_NAME]), len);
      |                                                            ^~~
ss.c:4125:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4125 |                 stat.rport = rta_getattr_u32(tb[UNIX_DIAG_PEER]);
      |                              ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:4149:35: note: in expansion of macro 'RTA_PAYLOAD'
 4149 |                         int len = RTA_PAYLOAD(tb[UNIX_DIAG_ICONS]);
      |                                   ^~~~~~~~~~~
ss.c:4154:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 4154 |                         for (i = 0; i < len / sizeof(__u32); i++)
      |                                             ^
ss.c: In function 'handle_netlink_request':
ss.c:4173:34: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4173 |         if (rtnl_send(&rth, req, size) < 0)
      |                                  ^~~~
ss.c: In function 'unix_show_netlink':
ss.c:4190:30: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 4190 |         req.r.udiag_states = f->states;
      |                              ^
ss.c: In function 'unix_show':
ss.c:4241:28: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 4241 |                 u->lport = u->ino;
      |                            ^
ss.c: In function 'packet_stats_print':
ss.c:4356:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 4356 |                 port = xll_index_to_name(s->iface);
      |                                          ~^~~~~~~
ss.c: In function 'packet_show_sock':
ss.c:4391:37: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4391 |                      nlh->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
ss.c:4406:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4406 |                 stat.rq = skmeminfo[SK_MEMINFO_RMEM_ALLOC];
      |                           ^~~~~~~~~
ss.c:4411:30: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 4411 |                 stat.lport = stat.iface = pinfo->pdi_index;
      |                              ^~~~
ss.c:4470:41: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 4470 |                         uint16_t type = (fanout >> 16) & 0xffff;
      |                                         ^
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ss.c:4501:27: note: in expansion of macro 'RTA_PAYLOAD'
 4501 |                 int num = RTA_PAYLOAD(tb[PACKET_DIAG_FILTER]) /
      |                           ^~~~~~~~~~~
ss.c: In function 'packet_show_line':
ss.c:4548:22: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 4548 |         stat.type  = type;
      |                      ^~~~
ss.c:4549:22: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 4549 |         stat.prot  = prot;
      |                      ^~~~
ss.c:4550:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 4550 |         stat.lport = stat.iface = iface;
      |                                   ^~~~~
ss.c:4550:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 4550 |         stat.lport = stat.iface = iface;
      |                      ^~~~
ss.c:4553:22: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 4553 |         stat.uid   = uid;
      |                      ^~~
ss.c:4554:22: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 4554 |         stat.ino   = ino;
      |                      ^~~
ss.c: In function 'xdp_stats_print':
ss.c:4599:43: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 4599 |                 addr = xll_index_to_name(s->iface);
      |                                          ~^~~~~~~
ss.c: In function 'xdp_show_sock':
ss.c:4678:37: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4678 |                      nlh->nlmsg_len - NLMSG_LENGTH(sizeof(*msg)));
ss.c:4688:30: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4688 |                 stat.lport = info->queue_id;
      |                              ^~~~
ss.c:4706:27: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4706 |                 stat.rq = skmeminfo[SK_MEMINFO_RMEM_ALLOC];
      |                           ^~~~~~~~~
ss.c: In function 'netlink_show_one':
ss.c:4767:36: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 4767 |                 st.local.data[0] = prot;
      |                                    ^~~~
ss.c:4811:44: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
 4811 |                 sock_addr_print(int_to_str(dst_group, dst_group_buf), ":",
      |                                            ^~~~~~~~~
ss.c: In function 'netlink_show_sock':
ss.c:4851:37: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4851 |                      nlh->nlmsg_len - NLMSG_LENGTH(sizeof(*r)));
ss.c:4861:22: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4861 |                 rq = skmeminfo[SK_MEMINFO_RMEM_ALLOC];
      |                      ^~~~~~~~~
ss.c:4862:22: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4862 |                 wq = skmeminfo[SK_MEMINFO_WMEM_ALLOC];
      |                      ^~~~~~~~~
ss.c:4865:53: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4865 |         if (netlink_show_one(f, r->ndiag_protocol, r->ndiag_portid, groups,
      |                                                    ~^~~~~~~~~~~~~~
ss.c:4866:43: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4866 |                          r->ndiag_state, r->ndiag_dst_portid, r->ndiag_dst_group,
      |                                          ~^~~~~~~~~~~~~~~~~~
ss.c: In function 'vsock_stats_print':
ss.c:4959:38: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 4959 |         vsock_addr_print(&s->local, s->lport);
      |                                     ~^~~~~~~
ss.c:4960:39: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 4960 |         vsock_addr_print(&s->remote, s->rport);
      |                                      ~^~~~~~~
ss.c: In function 'vsock_show_sock':
ss.c:4971:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4971 |                 .lport = r->vdiag_src_port,
      |                          ^
ss.c:4972:26: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4972 |                 .rport = r->vdiag_dst_port,
      |                          ^
ss.c: In function 'vsock_show':
ss.c:4999:30: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 4999 |         req.r.vdiag_states = f->states;
      |                              ^
In file included from ../include/libnetlink.h:8:
ss.c: In function 'tipc_show_sock':
../include/uapi/linux/netlink.h:102:50: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  102 | #define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
ss.c:5028:22: note: in expansion of macro 'NLMSG_PAYLOAD'
 5028 |                      NLMSG_PAYLOAD(nlh, 0));
      |                      ^~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ss.c:5035:22: note: in expansion of macro 'RTA_PAYLOAD'
 5035 |                      RTA_PAYLOAD(msg_ref));
      |                      ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ss.c:5039:41: note: in expansion of macro 'RTA_PAYLOAD'
 5039 |                      RTA_DATA(msg_ref), RTA_PAYLOAD(msg_ref));
      |                                         ^~~~~~~~~~~
ss.c:5044:20: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 5044 |         ss.state = rta_getattr_u32(attrs[TIPC_NLA_SOCK_TIPC_STATE]);
      |                    ^~~~~~~~~~~~~~~
ss.c:5047:17: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 5047 |         ss.rq = rta_getattr_u32(stat[TIPC_NLA_SOCK_STAT_RCVQ]);
      |                 ^~~~~~~~~~~~~~~
ss.c:5048:17: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 5048 |         ss.wq = rta_getattr_u32(stat[TIPC_NLA_SOCK_STAT_SENDQ]);
      |                 ^~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ss.c:5059:49: note: in expansion of macro 'RTA_PAYLOAD'
 5059 |                              RTA_DATA(msg_ref), RTA_PAYLOAD(msg_ref));
      |                                                 ^~~~~~~~~~~
ss.c: In function 'tipc_show':
ss.c:5100:31: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 5100 |         req.r.tidiag_states = f->states;
      |                               ^
ss.c: In function 'handle_follow_request':
ss.c:5163:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 5163 |         if (rtnl_open_byproto(&rth, groups, NETLINK_SOCK_DIAG))
      |                                     ^~~~~~
ss.c:5170:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
 5170 |                 if (rtnl_open_byproto(&rth2, groups, NETLINK_SOCK_DIAG)) {
      |                                              ^~~~~~
ss.c: In function 'get_snmp_int':
ss.c:5190:24: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 5190 |         int protolen = strlen(proto);
      |                        ^~~~~~
ss.c:5191:22: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 5191 |         int keylen = strlen(key);
      |                      ^~~~~~
ss.c:5202:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 5202 |                 if (memcmp(buf, proto, protolen))
      |                                        ^~~~~~~~
ss.c:5207:44: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 5207 |                         if (memcmp(p, key, keylen) == 0 &&
      |                                            ^~~~~~
ss.c:5213:40: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 5213 |                 if (memcmp(buf, proto, protolen))
      |                                        ^~~~~~~~
    CC       ssfilter_check.o
ssfilter_check.c: In function 'cgroup_filter_check':
ssfilter_check.c:25:45: warning: conversion from 'int' to 'unsigned char' may change value [-Wconversion]
   25 |                 { INET_DIAG_BC_CGROUP_COND, inslen, inslen + 4 },
      |                                             ^~~~~~
ssfilter_check.c:25:53: warning: conversion from 'int' to 'short unsigned int' may change value [-Wconversion]
   25 |                 { INET_DIAG_BC_CGROUP_COND, inslen, inslen + 4 },
      |                                                     ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ssfilter_check.c:5:
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
ssfilter_check.c:43:30: note: in expansion of macro 'RTA_LENGTH'
   43 |         req.nlh.nlmsg_len += RTA_LENGTH(inslen);
      |                              ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:225:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                                                           ^
ssfilter_check.c:46:23: note: in expansion of macro 'RTA_LENGTH'
   46 |         rta.rta_len = RTA_LENGTH(inslen);
      |                       ^~~~~~~~~~
../include/uapi/linux/rtnetlink.h:225:25: warning: conversion from 'unsigned int' to 'short unsigned int' may change value [-Wconversion]
  225 | #define RTA_LENGTH(len) (RTA_ALIGN(sizeof(struct rtattr)) + (len))
      |                         ^
ssfilter_check.c:46:23: note: in expansion of macro 'RTA_LENGTH'
   46 |         rta.rta_len = RTA_LENGTH(inslen);
      |                       ^~~~~~~~~~
ssfilter_check.c:50:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   50 |         iov[2] = (struct iovec) { &instr, inslen };
      |                                           ^~~~~~
ssfilter_check.c:56:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
   56 |                 .msg_iovlen = iovlen,
      |                               ^~~~~~
ssfilter_check.c: In function 'ssfilter_is_supported':
ssfilter_check.c:99:29: warning: conversion from 'int' to 'signed char:1' changes value from '1' to '-1' [-Wconversion]
   99 |                 f.checked = 1;
      |                             ^
    YACC     ssfilter.tab.c
    CC       ssfilter.tab.o
    LINK     ss
    CC       nstat
In file included from nstat.c:33:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
nstat.c: In function 'load_ugly_table':
nstat.c:218:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  218 |                                 strncat(idbuf, p, sizeof(idbuf) - off - 1);
      |                                                                 ^
nstat.c: In function 'dump_kern_db':
nstat.c:351:53: warning: conversion from 'long long unsigned int' to 'unsigned int' may change value [-Wconversion]
  351 |                         jsonw_uint_field(jw, n->id, val);
      |                                                     ^~~
nstat.c: In function 'dump_incr_db':
nstat.c:400:53: warning: conversion from 'long long unsigned int' to 'unsigned int' may change value [-Wconversion]
  400 |                         jsonw_uint_field(jw, n->id, val);
      |                                                     ^~~
nstat.c: In function 'server_loop':
nstat.c:500:35: warning: conversion from 'time_t' {aka 'long long int'} to 'int' may change value [-Wconversion]
  500 |                         update_db(tdiff);
      |                                   ^~~~~
nstat.c:504:47: warning: conversion from 'time_t' {aka 'long long int'} to 'int' may change value [-Wconversion]
  504 |                 if (poll(&p, 1, scan_interval - tdiff) > 0
      |                                 ~~~~~~~~~~~~~~^~~~~~~
    CC       ifstat
In file included from ../include/uapi/linux/if.h:23,
                 from ifstat.c:31:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from ifstat.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from ifstat.c:37:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
ifstat.c: In function 'get_nlmsg_extended':
ifstat.c:117:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  117 |         int len = m->nlmsg_len;
      |                   ^
ifstat.c:123:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  123 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |             ^~
In file included from ../include/uapi/linux/if_link.h:6,
                 from ifstat.c:32:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ifstat.c:123:16: note: in expansion of macro 'NLMSG_LENGTH'
  123 |         len -= NLMSG_LENGTH(sizeof(*ifsm));
      |                ^~~~~~~~~~~~
ifstat.c:135:22: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  135 |         n->ifindex = ifsm->ifindex;
      |                      ^~~~
In file included from ../include/libnetlink.h:9,
                 from ifstat.c:34:
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:230:48: note: in expansion of macro 'RTA_PAYLOAD'
  230 |         (parse_rtattr_one(type, RTA_DATA(rta), RTA_PAYLOAD(rta)))
      |                                                ^~~~~~~~~~~
ifstat.c:143:24: note: in expansion of macro 'parse_rtattr_one_nested'
  143 |                 attr = parse_rtattr_one_nested(sub_type, tb[filter_type]);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
ifstat.c: In function 'get_nlmsg':
ifstat.c:160:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  160 |         int len = m->nlmsg_len;
      |                   ^
ifstat.c:167:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  167 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |             ^~
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ifstat.c:167:16: note: in expansion of macro 'NLMSG_LENGTH'
  167 |         len -= NLMSG_LENGTH(sizeof(*ifi));
      |                ^~~~~~~~~~~~
ifstat.c: In function 'dump_raw_db':
ifstat.c:342:68: warning: conversion from 'long long unsigned int' to 'unsigned int' may change value [-Wconversion]
  342 |                                 jsonw_uint_field(jw, stats[i], vals[i]);
      |                                                                ~~~~^~~
ifstat.c: In function 'format_rate':
ifstat.c:378:61: warning: conversion from 'long long unsigned int' to 'double' may change value [-Wconversion]
  378 |                 sprintf(temp, "%uM", (unsigned int)(rates[i]/mega));
      |                                                             ^
ifstat.c:381:61: warning: conversion from 'long long unsigned int' to 'double' may change value [-Wconversion]
  381 |                 sprintf(temp, "%uK", (unsigned int)(rates[i]/kilo));
      |                                                             ^
ifstat.c: In function 'print_one_json':
ifstat.c:460:52: warning: conversion from 'long long unsigned int' to 'unsigned int' may change value [-Wconversion]
  460 |                 jsonw_uint_field(jw, stats[i], vals[i]);
      |                                                ~~~~^~~
ifstat.c: In function 'server_loop':
ifstat.c:687:35: warning: conversion from 'time_t' {aka 'long long int'} to 'int' may change value [-Wconversion]
  687 |                         update_db(tdiff);
      |                                   ^~~~~
ifstat.c:692:47: warning: conversion from 'time_t' {aka 'long long int'} to 'int' may change value [-Wconversion]
  692 |                 if (poll(&p, 1, scan_interval - tdiff) > 0
      |                                 ~~~~~~~~~~~~~~^~~~~~~
ifstat.c: In function 'get_filter_type':
ifstat.c:758:20: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  758 |         name_len = strlen(name);
      |                    ^~~~~~
ifstat.c:763:48: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  763 |                 if (strncmp(name, xstat->name, name_len) == 0) {
      |                                                ^~~~~~~~
    CC       rtacct
rtacct.c: In function 'nread':
rtacct.c:83:48: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   83 |                 int n = read(fd, buf+count, tot-count);
      |                                             ~~~^~~~~~
rtacct.c: In function 'send_db':
rtacct.c:327:76: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  327 |                 int n = write(fd, ((char *)kern_db) + tot, sizeof(*kern_db)-tot);
      |                                                                            ^
rtacct.c: In function 'server_loop':
rtacct.c:340:22: warning: conversion from 'long long int' to 'int' may change value [-Wconversion]
  340 | #define T_DIFF(a, b) (((a).tv_sec-(b).tv_sec)*1000 + ((a).tv_usec-(b).tv_usec)/1000)
      |                      ^
rtacct.c:375:25: note: in expansion of macro 'T_DIFF'
  375 |                 tdiff = T_DIFF(now, snaptime);
      |                         ^~~~~~
    CC       lnstat.o
lnstat.c: In function 'map_field_params':
lnstat.c:157:28: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  157 |                 fps->num = j;
      |                            ^
lnstat.c: In function 'build_hdr_string':
lnstat.c:211:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  211 |                 ofs += width+1;
      |                     ^~
lnstat.c:211:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  211 |                 ofs += width+1;
      |                        ^~~~~
lnstat.c: In function 'main':
lnstat.c:324:40: warning: conversion to 'int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
  324 |                                 len  = strtoul(tok, NULL, 0);
      |                                        ^~~~~~~
lnstat.c:327:60: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  327 |                                 fp.params[i].print.width = len;
      |                                                            ^~~
lnstat.c:332:68: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  332 |                                         fp.params[i].print.width = len;
      |                                                                    ^~~
lnstat.c:374:39: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  374 |                                 sleep(interval);
      |                                       ^~~~~~~~
    CC       lnstat_util.o
lnstat_util.c: In function 'lnstat_update':
lnstat_util.c:105:55: warning: conversion from '__time64_t' {aka 'long long int'} to 'long unsigned int' may change value [-Wconversion]
  105 |                                         lfi->result = (lfi->values[1]-lfi->values[0])
      |                                                       ^
lnstat_util.c: In function '__lnstat_scan_fields':
lnstat_util.c:130:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  130 |                         lf->num_fields = i+1;
      |                                          ^
lnstat_util.c: In function 'lnstat_find_field':
lnstat_util.c:306:43: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  306 |                 file = strndup(name, colon-name);
      |                                      ~~~~~^~~~~
    LINK     lnstat

genl
    CC       genl.o
In file included from genl.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       ctrl.o
In file included from ctrl.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
In file included from ../include/libnetlink.h:9,
                 from ../include/utils.h:17:
ctrl.c: In function 'print_ctrl_cmds':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ctrl.c:71:9: note: in expansion of macro 'parse_rtattr_nested'
   71 |         parse_rtattr_nested(tb, CTRL_ATTR_OP_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
ctrl.c: In function 'print_ctrl_grp':
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ctrl.c:92:9: note: in expansion of macro 'parse_rtattr_nested'
   92 |         parse_rtattr_nested(tb, CTRL_ATTR_MCAST_GRP_MAX, arg);
      |         ^~~~~~~~~~~~~~~~~~~
ctrl.c: In function 'print_ctrl':
ctrl.c:113:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  113 |         int len = n->nlmsg_len;
      |                   ^
ctrl.c:134:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  134 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |             ^~
In file included from ../include/libnetlink.h:8:
../include/uapi/linux/netlink.h:93:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
   93 | #define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
      |                           ^
ctrl.c:134:16: note: in expansion of macro 'NLMSG_LENGTH'
  134 |         len -= NLMSG_LENGTH(GENL_HDRLEN);
      |                ^~~~~~~~~~~~
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:220:27: note: in definition of macro 'RTA_OK'
  220 | #define RTA_OK(rta,len) ((len) >= (int)sizeof(struct rtattr) && \
      |                           ^~~
ctrl.c:168:17: note: in expansion of macro 'rtattr_for_each_nested'
  168 |                 rtattr_for_each_nested(pos, tb[CTRL_ATTR_OP_POLICY]) {
      |                 ^~~~~~~~~~~~~~~~~~~~~~
../include/libnetlink.h:349:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  349 |              RTA_OK(attr, RTA_PAYLOAD(nest) - ((char *)(attr) - (char *)RTA_DATA((nest)))); \
      |                                             ^
../include/uapi/linux/rtnetlink.h:222:45: note: in definition of macro 'RTA_OK'
  222 |                          (rta)->rta_len <= (len))
      |                                             ^~~
ctrl.c:168:17: note: in expansion of macro 'rtattr_for_each_nested'
  168 |                 rtattr_for_each_nested(pos, tb[CTRL_ATTR_OP_POLICY]) {
      |                 ^~~~~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ^
ctrl.c:171:36: note: in expansion of macro 'RTA_PAYLOAD'
  171 |                         int plen = RTA_PAYLOAD(pos);
      |                                    ^~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ctrl.c:200:17: note: in expansion of macro 'parse_rtattr_nested'
  200 |                 parse_rtattr_nested(tb2, GENL_MAX_FAM_OPS, tb[CTRL_ATTR_OPS]);
      |                 ^~~~~~~~~~~~~~~~~~~
../include/uapi/linux/rtnetlink.h:228:49: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  228 | #define RTA_PAYLOAD(rta) ((int)((rta)->rta_len) - RTA_LENGTH(0))
      |                          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../include/libnetlink.h:226:57: note: in expansion of macro 'RTA_PAYLOAD'
  226 |         (parse_rtattr_flags((tb), (max), RTA_DATA(rta), RTA_PAYLOAD(rta), \
      |                                                         ^~~~~~~~~~~
ctrl.c:221:17: note: in expansion of macro 'parse_rtattr_nested'
  221 |                 parse_rtattr_nested(tb2, GENL_MAX_FAM_GRPS,
      |                 ^~~~~~~~~~~~~~~~~~~
ctrl.c: In function 'ctrl_list':
ctrl.c:272:29: warning: conversion from 'int' to '__u8' {aka 'unsigned char'} may change value [-Wconversion]
  272 |                 req.g.cmd = cmd;
      |                             ^~~
ctrl.c:283:48: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  283 |                                   d, strlen(d) + 1);
      |                                      ~~~~~~~~~~^~~
ctrl.c:317:45: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  317 |                 if (rtnl_send(&rth, nlh, nlh->nlmsg_len) < 0) {
      |                                          ~~~^~~~~~~~~~~
    LINK     genl

devlink
    CC       devlink.o
In file included from devlink.c:44:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
devlink.c: In function 'pr_out_sp':
devlink.c:112:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  112 |                 printf("%*s", num - ret, "");
      |                                   ^
devlink.c: In function 'hw_addr_parse':
devlink.c:1362:16: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1362 |         *len = alen;
      |                ^~~~
devlink.c: In function 'port_flavour_parse':
devlink.c:1435:18: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 1435 |         *value = num;
      |                  ^~~
devlink.c: In function 'port_fn_state_parse':
devlink.c:1448:18: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 1448 |         *state = num;
      |                  ^~~
devlink.c: In function 'dl_argv_parse':
devlink.c:1899:39: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 1899 |                         opts->netns = netns_get_fd(netns_str);
      |                                       ^~~~~~~~~~~~
devlink.c: In function 'dl_selftests_put':
devlink.c:2139:43: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 2139 |                         mnl_attr_put(nlh, id, 0, NULL);
      |                                           ^~
devlink.c:2147:43: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 2147 |                         mnl_attr_put(nlh, id, 0, NULL);
      |                                           ^~
devlink.c: In function 'pr_out_region_chunk_start':
devlink.c:2638:57: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 2638 |                 print_uint(PRINT_JSON, "address", NULL, addr);
      |                                                         ^~~~
devlink.c: In function 'cmd_dev_param_set':
devlink.c:3241:58: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 3241 |         mnl_attr_put_u8(nlh, DEVLINK_ATTR_PARAM_TYPE, ctx.nla_type);
      |                                                       ~~~^~~~~~~~~
devlink.c:3250:34: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 3250 |                         val_u8 = val_u32;
      |                                  ^~~~~~~
devlink.c:3267:35: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 3267 |                         val_u16 = val_u32;
      |                                   ^~~~~~~
devlink.c: In function 'pr_out_reload_actions_performed':
devlink.c:3539:57: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 3539 |                                      reload_action_name(action));
      |                                                         ^~~~~~
devlink.c: In function 'cmd_dev_flash_time_elapsed':
devlink.c:3872:29: warning: conversion to 'uint64_t' {aka 'long long unsigned int'} from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
 3872 |                 elapsed_m = res.tv_sec / 60;
      |                             ^~~
devlink.c:3873:29: warning: conversion to 'uint64_t' {aka 'long long unsigned int'} from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
 3873 |                 elapsed_s = res.tv_sec % 60;
      |                             ^~~
devlink.c:3890:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3890 |                         len = snprintf(msg, sizeof(msg),
      |                               ^~~~~~~~
devlink.c:3898:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3898 |                         len = snprintf(msg, sizeof(msg),
      |                               ^~~~~~~~
devlink.c:3902:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 3902 |                         len = snprintf(msg, sizeof(msg),
      |                               ^~~~~~~~
devlink.c: In function 'cmd_dev_selftests_run_cb':
devlink.c:4194:22: warning: conversion to 'int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4194 |                 id = mnl_attr_get_u32(result[DEVLINK_ATTR_SELFTEST_RESULT_ID]);
      |                      ^~~~~~~~~~~~~~~~
devlink.c: In function 'pr_out_port_pfvfsf_num':
devlink.c:4357:26: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 4357 |                 fn_num = mnl_attr_get_u32(tb[DEVLINK_ATTR_PORT_PCI_SF_NUMBER]);
      |                          ^~~~~~~~~~~~~~~~
devlink.c: In function 'pr_out_port_function':
devlink.c:4408:48: warning: conversion to 'int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 4408 |                              ll_addr_n2a(data, len, 0, hw_addr, sizeof(hw_addr)));
      |                                                ^~~
devlink.c: In function 'cmd_port_param_set':
devlink.c:4737:58: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 4737 |         mnl_attr_put_u8(nlh, DEVLINK_ATTR_PARAM_TYPE, ctx.nla_type);
      |                                                       ~~~^~~~~~~~~
devlink.c:4746:34: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 4746 |                         val_u8 = val_u32;
      |                                  ^~~~~~~
devlink.c:4763:35: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
 4763 |                         val_u16 = val_u32;
      |                                   ^~~~~~~
devlink.c: In function 'resource_path_print':
devlink.c:7244:26: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 7244 |                 path_len += strlen(parent_resource->name) + 1;
      |                          ^~
devlink.c:7244:29: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
 7244 |                 path_len += strlen(parent_resource->name) + 1;
      |                             ^~~~~~
devlink.c:7247:26: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
 7247 |         path = calloc(1, path_len);
      |                          ^~~~~~~~
devlink.c: In function 'dpipe_table_show':
devlink.c:7298:38: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 7298 |                 table->resource_id = mnl_attr_get_u64(nla_table[DEVLINK_ATTR_DPIPE_TABLE_RESOURCE_ID]);
      |                                      ^~~~~~~~~~~~~~~~
devlink.c: In function 'dpipe_entry_show':
devlink.c:7745:65: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 7745 |                 print_uint(PRINT_ANY, "counter", " counter %u", counter);
      |                                                                 ^~~~~~~
devlink.c: In function 'resource_show':
devlink.c:7987:66: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 7987 |                 print_uint(PRINT_ANY, "occ", " occ %u",  resource->size_occ);
      |                                                          ~~~~~~~~^~~~~~~~~~
devlink.c:7993:36: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 7993 |                            resource->size_min);
      |                            ~~~~~~~~^~~~~~~~~~
devlink.c:7996:36: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'unsigned int' may change value [-Wconversion]
 7996 |                            resource->size_gran);
      |                            ~~~~~~~~^~~~~~~~~~~
devlink.c: In function 'resource_path_parse':
devlink.c:8166:31: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'uint32_t' {aka 'unsigned int'} may change value [-Wconversion]
 8166 |                 resource_id = resource->id;
      |                               ^~~~~~~~
devlink.c: In function 'cmd_fmsg_nest_queue':
devlink.c:8652:31: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 8652 |                 *attr_value = entry->attr_type;
      |                               ^~~~~
devlink.c: In function 'cmd_fmsg_object_cb':
devlink.c:8761:56: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 8761 |                         err = cmd_fmsg_nest(fmsg_data, attr_type, true);
      |                                                        ^~~~~~~~~
devlink.c:8766:56: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
 8766 |                         err = cmd_fmsg_nest(fmsg_data, attr_type, false);
      |                                                        ^~~~~~~~~
devlink.c: In function 'pr_out_dump_reporter_format_logtime':
devlink.c:8902:35: warning: conversion to 'long long unsigned int' from 'time_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
 8902 |         sec = now - s_info.uptime + time_ms / 1000;
      |                                   ^
devlink.c:8902:15: warning: conversion to 'time_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
 8902 |         sec = now - s_info.uptime + time_ms / 1000;
      |               ^~~
devlink.c: In function 'pr_out_dump_report_timestamp':
devlink.c:8921:18: warning: conversion to 'time_t' {aka 'long long int'} from 'uint64_t' {aka 'long long unsigned int'} may change the sign of the result [-Wsign-conversion]
 8921 |         tv_sec = ts / 1000000000;
      |                  ^~
    CC       mnlg.o
In file included from mnlg.c:22:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
mnlg.c: In function 'mnlg_socket_group_add':
mnlg.c:127:55: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  127 |         mnl_attr_put_u16(nlh, CTRL_ATTR_FAMILY_ID, nlg->family);
      |                                                    ~~~^~~~~~~~
    LINK     devlink

tipc
    CC       bearer.o
In file included from bearer.c:20:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
In file included from ../include/uapi/linux/if.h:23,
                 from bearer.c:22:
../include/uapi/linux/libc-compat.h: At top level:
../include/uapi/linux/libc-compat.h:54: warning: "__USE_MISC" redefined
   54 | #define __USE_MISC
      | 
In file included from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/bits/libc-header-start.h:33,
                 from /home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/stdio.h:27,
                 from bearer.c:12:
/home/matt/tmp/build/obmc-y2038/tmp/work/armv7ahf-vfpv4d16-openbmc-linux-gnueabi/iproute2/6.0.0-r0/recipe-sysroot/usr/include/features.h:395: note: this is the location of the previous definition
  395 | # define __USE_MISC     1
      | 
In file included from bearer.c:26:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
bearer.c: In function 'get_netid_cb':
bearer.c:96:18: warning: conversion to 'int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   96 |         *netid = mnl_attr_get_u32(attrs[TIPC_NLA_NET_ID]);
      |                  ^~~~~~~~~~~~~~~~
bearer.c: In function 'generate_multicast':
bearer.c:128:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  128 |                 snprintf(buf, bufsize, "228.0.%u.%u", (netid>>8) & 0xFF, netid & 0xFF);
      |                               ^~~~~~~
bearer.c:130:31: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  130 |                 snprintf(buf, bufsize, "ff02::%u", netid);
      |                               ^~~~~~~
bearer.c: In function 'nl_dump_req_filter':
bearer.c:141:26: warning: conversion to '__u32' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  141 |         ifa->ifa_index = ifr.ifr_ifindex;
      |                          ^~~
bearer.c: In function 'nl_dump_addr_filter':
bearer.c:150:19: warning: conversion to 'int' from '__u32' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  150 |         int len = nlh->nlmsg_len;
      |                   ^~~
bearer.c:160:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  160 |                                      len - NLMSG_LENGTH(sizeof(*ifa)));
      |                                          ^
bearer.c:160:42: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  160 |                                      len - NLMSG_LENGTH(sizeof(*ifa)));
bearer.c: In function 'cmd_bearer_validate_and_get_addr':
bearer.c:189:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  189 |         ifr.ifr_ifindex = ll_name_to_index(ifr.ifr_name);
      |                           ^~~~~~~~~~~~~~~~
../include/uapi/linux/if.h:269:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  269 | #define ifr_ifindex     ifr_ifru.ifru_ivalue    /* interface index      */
bearer.c:194:30: note: in expansion of macro 'ifr_ifindex'
  194 |         ll_drop_by_index(ifr.ifr_ifindex);
      |                              ^~~~~~~~~~~
bearer.c: In function 'nl_add_udp_enable_opts':
bearer.c:259:43: warning: conversion from 'int' to 'short int' may change value [-Wconversion]
  259 |                 if (generate_multicast(loc->ai_family, buf, sizeof(buf))) {
      |                                        ~~~^~~~~~~~~~~
bearer.c: In function 'cmd_bearer_enable':
bearer.c:530:63: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  530 |                 mnl_attr_put_u32(nlh, TIPC_NLA_BEARER_DOMAIN, atoi(opt->val));
      |                                                               ^~~~~~~~~~~~~~
bearer.c:536:59: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  536 |                 mnl_attr_put_u32(nlh, TIPC_NLA_PROP_PRIO, atoi(opt->val));
      |                                                           ^~~~~~~~~~~~~~
bearer.c: In function 'cmd_bearer_set_prop':
bearer.c:697:31: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  697 |         mnl_attr_put_u32(nlh, prop, val);
      |                               ^~~~
bearer.c:697:37: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  697 |         mnl_attr_put_u32(nlh, prop, val);
      |                                     ^~~
    CC       cmdl.o
    CC       link.o
In file included from link.c:18:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
In file included from link.c:27:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
link.c: In function 'cmd_link_get_bcast_cb':
link.c:204:19: warning: conversion to 'int' from 'uint32_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  204 |         bc_mode = mnl_attr_get_u32(props[*prop]);
      |                   ^~~~~~~~~~~~~~~~
link.c: In function 'cmd_link_set_prop':
link.c:671:31: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  671 |         mnl_attr_put_u32(nlh, prop, val);
      |                               ^~~~
link.c:671:37: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  671 |         mnl_attr_put_u32(nlh, prop, val);
      |                                     ^~~
link.c: In function 'cmd_link_set_bcast':
link.c:756:64: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  756 |                 mnl_attr_put_u32(nlh, TIPC_NLA_PROP_BROADCAST, method);
      |                                                                ^~~~~~
link.c:760:34: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  760 |                                  atoi(opt->val));
      |                                  ^~~~~~~~~~~~~~
link.c: In function 'cmd_link_mon_set_prop':
link.c:800:66: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  800 |         mnl_attr_put_u32(nlh, TIPC_NLA_MON_ACTIVATION_THRESHOLD, size);
      |                                                                  ^~~~
link.c: In function 'map_get':
link.c:866:36: warning: conversion from 'uint64_t' {aka 'long long unsigned int'} to 'int' may change value [-Wconversion]
  866 |         return (up_map & (1 << i)) >> i;
      |                ~~~~~~~~~~~~~~~~~~~~^~~~
link.c: In function 'link_mon_peer_list_cb':
link.c:984:32: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  984 |         link_mon_print_applied(applied, up_map);
      |                                ^~~~~~~
link.c:986:36: warning: conversion from 'uint32_t' {aka 'unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  986 |         link_mon_print_non_applied(applied, member_cnt, up_map,
      |                                    ^~~~~~~
    CC       media.o
media.c: In function 'cmd_media_set_prop':
media.c:232:31: warning: conversion from 'int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  232 |         mnl_attr_put_u32(nlh, prop, val);
      |                               ^~~~
media.c:232:37: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  232 |         mnl_attr_put_u32(nlh, prop, val);
      |                                     ^~~
    CC       misc.o
In file included from misc.c:14:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
misc.c: In function 'str2nodeid':
misc.c:80:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
   80 |         int len = strlen(str);
      |                   ^~~~~~
misc.c:87:33: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   87 |                 memcpy(id, str, len);
      |                                 ^~~
misc.c: In function 'str2key':
misc.c:103:19: warning: conversion to 'int' from 'size_t' {aka 'unsigned int'} may change the sign of the result [-Wsign-conversion]
  103 |         int len = strlen(str);
      |                   ^~~~~~
misc.c:116:23: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
  116 |         key->keylen = ishex ? (len + 1) / 2 : len;
      |                       ^~~~~
misc.c:122:39: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  122 |                 memcpy(key->key, str, len);
      |                                       ^~~
    CC       msg.o
msg.c: In function 'msg_init':
msg.c:49:54: warning: conversion from 'int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
   49 |         nlh = mnlu_gen_socket_cmd_prepare(&tipc_nlg, cmd, 0);
      |                                                      ^~~
    CC       nametable.o
In file included from nametable.c:16:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
In file included from nametable.c:23:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    CC       node.o
In file included from node.c:18:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
node.c: In function 'cmd_node_set_key':
node.c:234:36: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  234 |                         rekeying = atoi(opt_rekeying->val);
      |                                    ^~~~
node.c:275:54: warning: conversion to 'size_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  275 |                 mnl_attr_put(nlh, TIPC_NLA_NODE_KEY, keysize, &input.key);
      |                                                      ^~~~~~~
node.c: In function 'cmd_node_set_netid':
node.c:409:48: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
  409 |         mnl_attr_put_u32(nlh, TIPC_NLA_NET_ID, netid);
      |                                                ^~~~~
    CC       socket.o
In file included from socket.c:15:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
    CC       peer.o
In file included from peer.c:18:
../include/uapi/linux/tipc.h: In function 'tipc_aead_key_size':
../include/uapi/linux/tipc.h:254:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         return sizeof(*key) + key->keylen;
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~
peer.c: In function 'cmd_peer_rm_addr':
peer.c:44:24: warning: conversion to 'uint32_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Wsign-conversion]
   44 |                 addr = atoi(str);
      |                        ^~~~
    CC       tipc.o
In file included from tipc.c:29:
../include/utils.h: In function '__tv_to_jiffies':
../include/utils.h:244:26: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                          ^
../include/utils.h:244:39: warning: conversion to 'long long unsigned int' from '__suseconds64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  244 |         jif = 1000000ULL * tv->tv_sec + tv->tv_usec;
      |                                       ^
../include/utils.h:246:19: warning: conversion from 'long long unsigned int' to 'long unsigned int' may change value [-Wconversion]
  246 |         return jif/10000;
      |                ~~~^~~~~~
../include/utils.h: In function '__jiffies_to_tv':
../include/utils.h:254:22: warning: conversion to '__time64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  254 |         tv->tv_sec = tvusec/1000000;
      |                      ^~~~~~
../include/utils.h:255:30: warning: conversion to 'long long unsigned int' from '__time64_t' {aka 'long long int'} may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                              ^
../include/utils.h:255:23: warning: conversion to '__suseconds64_t' {aka 'long long int'} from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
  255 |         tv->tv_usec = tvusec - 1000000 * tv->tv_sec;
      |                       ^~~~~~
    LINK     tipc
DEBUG: Shell function do_compile finished
